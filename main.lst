                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 4.0.0 #11528 (MINGW32)
                              4 ;--------------------------------------------------------
                              5 	.module C__Users_Thief3_AppData_Local_Temp_lcc55601
                              6 	.optsdcc -mgbz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _move_sprite
                             13 	.globl _set_sprite_tile
                             14 	.globl _set_sprite_data
                             15 	.globl _delay
                             16 	.globl _MainChar
                             17 ;--------------------------------------------------------
                             18 ; special function registers
                             19 ;--------------------------------------------------------
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _DATA
   0000                      24 _MainChar::
   0000                      25 	.ds 48
                             26 ;--------------------------------------------------------
                             27 ; absolute external ram data
                             28 ;--------------------------------------------------------
                             29 	.area _DABS (ABS)
                             30 ;--------------------------------------------------------
                             31 ; global & static initialisations
                             32 ;--------------------------------------------------------
                             33 	.area _HOME
                             34 	.area _GSINIT
                             35 	.area _GSFINAL
                             36 	.area _GSINIT
                             37 ;./sprites/char.c:26: unsigned char MainChar[] =
   0000 21r00r00             38 	ld	hl, #_MainChar
   0003 36 00                39 	ld	(hl), #0x00
   0005 21r01r00             40 	ld	hl, #(_MainChar + 0x0001)
   0008 36 00                41 	ld	(hl), #0x00
   000A 21r02r00             42 	ld	hl, #(_MainChar + 0x0002)
   000D 36 7E                43 	ld	(hl), #0x7e
   000F 21r03r00             44 	ld	hl, #(_MainChar + 0x0003)
   0012 36 7E                45 	ld	(hl), #0x7e
   0014 21r04r00             46 	ld	hl, #(_MainChar + 0x0004)
   0017 36 42                47 	ld	(hl), #0x42
   0019 21r05r00             48 	ld	hl, #(_MainChar + 0x0005)
   001C 36 76                49 	ld	(hl), #0x76
   001E 21r06r00             50 	ld	hl, #(_MainChar + 0x0006)
   0021 36 42                51 	ld	(hl), #0x42
   0023 21r07r00             52 	ld	hl, #(_MainChar + 0x0007)
   0026 36 76                53 	ld	(hl), #0x76
   0028 21r08r00             54 	ld	hl, #(_MainChar + 0x0008)
   002B 36 4A                55 	ld	(hl), #0x4a
   002D 21r09r00             56 	ld	hl, #(_MainChar + 0x0009)
   0030 36 4A                57 	ld	(hl), #0x4a
   0032 21r0Ar00             58 	ld	hl, #(_MainChar + 0x000a)
   0035 36 7E                59 	ld	(hl), #0x7e
   0037 21r0Br00             60 	ld	hl, #(_MainChar + 0x000b)
   003A 36 7E                61 	ld	(hl), #0x7e
   003C 21r0Cr00             62 	ld	hl, #(_MainChar + 0x000c)
   003F 36 36                63 	ld	(hl), #0x36
   0041 21r0Dr00             64 	ld	hl, #(_MainChar + 0x000d)
   0044 36 36                65 	ld	(hl), #0x36
   0046 21r0Er00             66 	ld	hl, #(_MainChar + 0x000e)
   0049 36 36                67 	ld	(hl), #0x36
   004B 21r0Fr00             68 	ld	hl, #(_MainChar + 0x000f)
   004E 36 36                69 	ld	(hl), #0x36
   0050 21r10r00             70 	ld	hl, #(_MainChar + 0x0010)
   0053 36 00                71 	ld	(hl), #0x00
   0055 21r11r00             72 	ld	hl, #(_MainChar + 0x0011)
   0058 36 00                73 	ld	(hl), #0x00
   005A 21r12r00             74 	ld	hl, #(_MainChar + 0x0012)
   005D 36 7E                75 	ld	(hl), #0x7e
   005F 21r13r00             76 	ld	hl, #(_MainChar + 0x0013)
   0062 36 7E                77 	ld	(hl), #0x7e
   0064 21r14r00             78 	ld	hl, #(_MainChar + 0x0014)
   0067 36 42                79 	ld	(hl), #0x42
   0069 21r15r00             80 	ld	hl, #(_MainChar + 0x0015)
   006C 36 76                81 	ld	(hl), #0x76
   006E 21r16r00             82 	ld	hl, #(_MainChar + 0x0016)
   0071 36 42                83 	ld	(hl), #0x42
   0073 21r17r00             84 	ld	hl, #(_MainChar + 0x0017)
   0076 36 76                85 	ld	(hl), #0x76
   0078 21r18r00             86 	ld	hl, #(_MainChar + 0x0018)
   007B 36 4A                87 	ld	(hl), #0x4a
   007D 21r19r00             88 	ld	hl, #(_MainChar + 0x0019)
   0080 36 4A                89 	ld	(hl), #0x4a
   0082 21r1Ar00             90 	ld	hl, #(_MainChar + 0x001a)
   0085 36 7E                91 	ld	(hl), #0x7e
   0087 21r1Br00             92 	ld	hl, #(_MainChar + 0x001b)
   008A 36 7E                93 	ld	(hl), #0x7e
   008C 21r1Cr00             94 	ld	hl, #(_MainChar + 0x001c)
   008F 36 36                95 	ld	(hl), #0x36
   0091 21r1Dr00             96 	ld	hl, #(_MainChar + 0x001d)
   0094 36 36                97 	ld	(hl), #0x36
   0096 21r1Er00             98 	ld	hl, #(_MainChar + 0x001e)
   0099 36 30                99 	ld	(hl), #0x30
   009B 21r1Fr00            100 	ld	hl, #(_MainChar + 0x001f)
   009E 36 30               101 	ld	(hl), #0x30
   00A0 21r20r00            102 	ld	hl, #(_MainChar + 0x0020)
   00A3 36 00               103 	ld	(hl), #0x00
   00A5 21r21r00            104 	ld	hl, #(_MainChar + 0x0021)
   00A8 36 00               105 	ld	(hl), #0x00
   00AA 21r22r00            106 	ld	hl, #(_MainChar + 0x0022)
   00AD 36 7E               107 	ld	(hl), #0x7e
   00AF 21r23r00            108 	ld	hl, #(_MainChar + 0x0023)
   00B2 36 7E               109 	ld	(hl), #0x7e
   00B4 21r24r00            110 	ld	hl, #(_MainChar + 0x0024)
   00B7 36 42               111 	ld	(hl), #0x42
   00B9 21r25r00            112 	ld	hl, #(_MainChar + 0x0025)
   00BC 36 76               113 	ld	(hl), #0x76
   00BE 21r26r00            114 	ld	hl, #(_MainChar + 0x0026)
   00C1 36 42               115 	ld	(hl), #0x42
   00C3 21r27r00            116 	ld	hl, #(_MainChar + 0x0027)
   00C6 36 76               117 	ld	(hl), #0x76
   00C8 21r28r00            118 	ld	hl, #(_MainChar + 0x0028)
   00CB 36 4A               119 	ld	(hl), #0x4a
   00CD 21r29r00            120 	ld	hl, #(_MainChar + 0x0029)
   00D0 36 4A               121 	ld	(hl), #0x4a
   00D2 21r2Ar00            122 	ld	hl, #(_MainChar + 0x002a)
   00D5 36 7E               123 	ld	(hl), #0x7e
   00D7 21r2Br00            124 	ld	hl, #(_MainChar + 0x002b)
   00DA 36 7E               125 	ld	(hl), #0x7e
   00DC 21r2Cr00            126 	ld	hl, #(_MainChar + 0x002c)
   00DF 36 36               127 	ld	(hl), #0x36
   00E1 21r2Dr00            128 	ld	hl, #(_MainChar + 0x002d)
   00E4 36 36               129 	ld	(hl), #0x36
   00E6 21r2Er00            130 	ld	hl, #(_MainChar + 0x002e)
   00E9 36 06               131 	ld	(hl), #0x06
   00EB 21r2Fr00            132 	ld	hl, #(_MainChar + 0x002f)
   00EE 36 06               133 	ld	(hl), #0x06
                            134 ;--------------------------------------------------------
                            135 ; Home
                            136 ;--------------------------------------------------------
                            137 	.area _HOME
                            138 	.area _HOME
                            139 ;--------------------------------------------------------
                            140 ; code
                            141 ;--------------------------------------------------------
                            142 	.area _CODE
                            143 ;main.c:5: void main(){
                            144 ;	---------------------------------
                            145 ; Function main
                            146 ; ---------------------------------
   0000                     147 _main::
                            148 ;main.c:6: UINT8 current_sprite_index = 0;
   0000 06 00               149 	ld	b, #0x00
                            150 ;main.c:7: set_sprite_data(0, 3, MainChar);
   0002 C5                  151 	push	bc
   0003 21r00r00            152 	ld	hl, #_MainChar
   0006 E5                  153 	push	hl
   0007 3E 03               154 	ld	a, #0x03
   0009 F5                  155 	push	af
   000A 33                  156 	inc	sp
   000B AF                  157 	xor	a, a
   000C F5                  158 	push	af
   000D 33                  159 	inc	sp
   000E CDr00r00            160 	call	_set_sprite_data
   0011 E8 04               161 	add	sp, #4
   0013 C1                  162 	pop	bc
                            163 ;main.c:8: set_sprite_tile(0, 0);
   0014 C5                  164 	push	bc
   0015 AF                  165 	xor	a, a
   0016 F5                  166 	push	af
   0017 33                  167 	inc	sp
   0018 AF                  168 	xor	a, a
   0019 F5                  169 	push	af
   001A 33                  170 	inc	sp
   001B CDr00r00            171 	call	_set_sprite_tile
   001E E8 02               172 	add	sp, #2
   0020 C1                  173 	pop	bc
                            174 ;main.c:9: move_sprite(0, 88, 78);
   0021 C5                  175 	push	bc
   0022 3E 4E               176 	ld	a, #0x4e
   0024 F5                  177 	push	af
   0025 33                  178 	inc	sp
   0026 3E 58               179 	ld	a, #0x58
   0028 F5                  180 	push	af
   0029 33                  181 	inc	sp
   002A AF                  182 	xor	a, a
   002B F5                  183 	push	af
   002C 33                  184 	inc	sp
   002D CDr00r00            185 	call	_move_sprite
   0030 E8 03               186 	add	sp, #3
   0032 C1                  187 	pop	bc
                            188 ;main.c:10: SHOW_SPRITES;
   0033 F0r00               189 	ldh	a, (_LCDC_REG+0)
   0035 F6 02               190 	or	a, #0x02
   0037 E0r00               191 	ldh	(_LCDC_REG+0),a
                            192 ;main.c:13: while(1){
   0039                     193 00104$:
                            194 ;main.c:14: current_sprite_index = current_sprite_index + 1;
   0039 04                  195 	inc	b
                            196 ;main.c:15: if(current_sprite_index == 3){
   003A 78                  197 	ld	a, b
   003B D6 03               198 	sub	a, #0x03
   003D 20 02               199 	jr	NZ,00102$
                            200 ;main.c:16: current_sprite_index = 0;
   003F 06 00               201 	ld	b, #0x00
   0041                     202 00102$:
                            203 ;main.c:19: set_sprite_tile(0, current_sprite_index);
   0041 C5                  204 	push	bc
   0042 C5                  205 	push	bc
   0043 33                  206 	inc	sp
   0044 AF                  207 	xor	a, a
   0045 F5                  208 	push	af
   0046 33                  209 	inc	sp
   0047 CDr00r00            210 	call	_set_sprite_tile
   004A E8 02               211 	add	sp, #2
   004C C1                  212 	pop	bc
                            213 ;main.c:20: delay(1000);
   004D C5                  214 	push	bc
   004E 21 E8 03            215 	ld	hl, #0x03e8
   0051 E5                  216 	push	hl
   0052 CDr00r00            217 	call	_delay
   0055 E8 02               218 	add	sp, #2
   0057 C1                  219 	pop	bc
   0058 18 DF               220 	jr	00104$
                            221 ;main.c:22: }
   005A C9                  222 	ret
                            223 	.area _CODE
                            224 	.area _CABS (ABS)
