                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 4.0.0 #11528 (MINGW32)
                              4 ;--------------------------------------------------------
                              5 	.module C__Users_Thief3_AppData_Local_Temp_lcc150441
                              6 	.optsdcc -mgbz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _jump
                             13 	.globl _player_movement
                             14 	.globl _update_position
                             15 	.globl _gravity
                             16 	.globl _next_animation
                             17 	.globl _draw
                             18 	.globl _performantdelay
                             19 	.globl _create_sprite_num
                             20 	.globl _move_sprite
                             21 	.globl _set_sprite_tile
                             22 	.globl _set_sprite_data
                             23 	.globl _wait_vbl_done
                             24 	.globl _joypad
                             25 	.globl _gravity_time
                             26 	.globl _sprites
                             27 	.globl _total_sprites
                             28 	.globl _MainChar
                             29 ;--------------------------------------------------------
                             30 ; special function registers
                             31 ;--------------------------------------------------------
                             32 ;--------------------------------------------------------
                             33 ; ram data
                             34 ;--------------------------------------------------------
                             35 	.area _DATA
   0000                      36 _MainChar::
   0000                      37 	.ds 48
   0030                      38 _joypad_prev_state:
   0030                      39 	.ds 1
   0031                      40 _joypad_curr_state:
   0031                      41 	.ds 1
   0032                      42 _input_timer:
   0032                      43 	.ds 1
   0033                      44 _total_sprites::
   0033                      45 	.ds 1
   0034                      46 _sprites::
   0034                      47 	.ds 80
   0084                      48 _GRAVITY:
   0084                      49 	.ds 1
   0085                      50 _gravity_time::
   0085                      51 	.ds 1
                             52 ;--------------------------------------------------------
                             53 ; absolute external ram data
                             54 ;--------------------------------------------------------
                             55 	.area _DABS (ABS)
                             56 ;--------------------------------------------------------
                             57 ; global & static initialisations
                             58 ;--------------------------------------------------------
                             59 	.area _HOME
                             60 	.area _GSINIT
                             61 	.area _GSFINAL
                             62 	.area _GSINIT
                             63 ;./src/../sprites/char.c:26: unsigned char MainChar[] =
   0000 21r00r00             64 	ld	hl, #_MainChar
   0003 36 00                65 	ld	(hl), #0x00
   0005 21r01r00             66 	ld	hl, #(_MainChar + 0x0001)
   0008 36 00                67 	ld	(hl), #0x00
   000A 21r02r00             68 	ld	hl, #(_MainChar + 0x0002)
   000D 36 7E                69 	ld	(hl), #0x7e
   000F 21r03r00             70 	ld	hl, #(_MainChar + 0x0003)
   0012 36 7E                71 	ld	(hl), #0x7e
   0014 21r04r00             72 	ld	hl, #(_MainChar + 0x0004)
   0017 36 42                73 	ld	(hl), #0x42
   0019 21r05r00             74 	ld	hl, #(_MainChar + 0x0005)
   001C 36 76                75 	ld	(hl), #0x76
   001E 21r06r00             76 	ld	hl, #(_MainChar + 0x0006)
   0021 36 42                77 	ld	(hl), #0x42
   0023 21r07r00             78 	ld	hl, #(_MainChar + 0x0007)
   0026 36 76                79 	ld	(hl), #0x76
   0028 21r08r00             80 	ld	hl, #(_MainChar + 0x0008)
   002B 36 4A                81 	ld	(hl), #0x4a
   002D 21r09r00             82 	ld	hl, #(_MainChar + 0x0009)
   0030 36 4A                83 	ld	(hl), #0x4a
   0032 21r0Ar00             84 	ld	hl, #(_MainChar + 0x000a)
   0035 36 7E                85 	ld	(hl), #0x7e
   0037 21r0Br00             86 	ld	hl, #(_MainChar + 0x000b)
   003A 36 7E                87 	ld	(hl), #0x7e
   003C 21r0Cr00             88 	ld	hl, #(_MainChar + 0x000c)
   003F 36 36                89 	ld	(hl), #0x36
   0041 21r0Dr00             90 	ld	hl, #(_MainChar + 0x000d)
   0044 36 36                91 	ld	(hl), #0x36
   0046 21r0Er00             92 	ld	hl, #(_MainChar + 0x000e)
   0049 36 36                93 	ld	(hl), #0x36
   004B 21r0Fr00             94 	ld	hl, #(_MainChar + 0x000f)
   004E 36 36                95 	ld	(hl), #0x36
   0050 21r10r00             96 	ld	hl, #(_MainChar + 0x0010)
   0053 36 00                97 	ld	(hl), #0x00
   0055 21r11r00             98 	ld	hl, #(_MainChar + 0x0011)
   0058 36 00                99 	ld	(hl), #0x00
   005A 21r12r00            100 	ld	hl, #(_MainChar + 0x0012)
   005D 36 7E               101 	ld	(hl), #0x7e
   005F 21r13r00            102 	ld	hl, #(_MainChar + 0x0013)
   0062 36 7E               103 	ld	(hl), #0x7e
   0064 21r14r00            104 	ld	hl, #(_MainChar + 0x0014)
   0067 36 42               105 	ld	(hl), #0x42
   0069 21r15r00            106 	ld	hl, #(_MainChar + 0x0015)
   006C 36 76               107 	ld	(hl), #0x76
   006E 21r16r00            108 	ld	hl, #(_MainChar + 0x0016)
   0071 36 42               109 	ld	(hl), #0x42
   0073 21r17r00            110 	ld	hl, #(_MainChar + 0x0017)
   0076 36 76               111 	ld	(hl), #0x76
   0078 21r18r00            112 	ld	hl, #(_MainChar + 0x0018)
   007B 36 4A               113 	ld	(hl), #0x4a
   007D 21r19r00            114 	ld	hl, #(_MainChar + 0x0019)
   0080 36 4A               115 	ld	(hl), #0x4a
   0082 21r1Ar00            116 	ld	hl, #(_MainChar + 0x001a)
   0085 36 7E               117 	ld	(hl), #0x7e
   0087 21r1Br00            118 	ld	hl, #(_MainChar + 0x001b)
   008A 36 7E               119 	ld	(hl), #0x7e
   008C 21r1Cr00            120 	ld	hl, #(_MainChar + 0x001c)
   008F 36 36               121 	ld	(hl), #0x36
   0091 21r1Dr00            122 	ld	hl, #(_MainChar + 0x001d)
   0094 36 36               123 	ld	(hl), #0x36
   0096 21r1Er00            124 	ld	hl, #(_MainChar + 0x001e)
   0099 36 30               125 	ld	(hl), #0x30
   009B 21r1Fr00            126 	ld	hl, #(_MainChar + 0x001f)
   009E 36 30               127 	ld	(hl), #0x30
   00A0 21r20r00            128 	ld	hl, #(_MainChar + 0x0020)
   00A3 36 00               129 	ld	(hl), #0x00
   00A5 21r21r00            130 	ld	hl, #(_MainChar + 0x0021)
   00A8 36 00               131 	ld	(hl), #0x00
   00AA 21r22r00            132 	ld	hl, #(_MainChar + 0x0022)
   00AD 36 7E               133 	ld	(hl), #0x7e
   00AF 21r23r00            134 	ld	hl, #(_MainChar + 0x0023)
   00B2 36 7E               135 	ld	(hl), #0x7e
   00B4 21r24r00            136 	ld	hl, #(_MainChar + 0x0024)
   00B7 36 42               137 	ld	(hl), #0x42
   00B9 21r25r00            138 	ld	hl, #(_MainChar + 0x0025)
   00BC 36 76               139 	ld	(hl), #0x76
   00BE 21r26r00            140 	ld	hl, #(_MainChar + 0x0026)
   00C1 36 42               141 	ld	(hl), #0x42
   00C3 21r27r00            142 	ld	hl, #(_MainChar + 0x0027)
   00C6 36 76               143 	ld	(hl), #0x76
   00C8 21r28r00            144 	ld	hl, #(_MainChar + 0x0028)
   00CB 36 4A               145 	ld	(hl), #0x4a
   00CD 21r29r00            146 	ld	hl, #(_MainChar + 0x0029)
   00D0 36 4A               147 	ld	(hl), #0x4a
   00D2 21r2Ar00            148 	ld	hl, #(_MainChar + 0x002a)
   00D5 36 7E               149 	ld	(hl), #0x7e
   00D7 21r2Br00            150 	ld	hl, #(_MainChar + 0x002b)
   00DA 36 7E               151 	ld	(hl), #0x7e
   00DC 21r2Cr00            152 	ld	hl, #(_MainChar + 0x002c)
   00DF 36 36               153 	ld	(hl), #0x36
   00E1 21r2Dr00            154 	ld	hl, #(_MainChar + 0x002d)
   00E4 36 36               155 	ld	(hl), #0x36
   00E6 21r2Er00            156 	ld	hl, #(_MainChar + 0x002e)
   00E9 36 06               157 	ld	(hl), #0x06
   00EB 21r2Fr00            158 	ld	hl, #(_MainChar + 0x002f)
   00EE 36 06               159 	ld	(hl), #0x06
                            160 ;./src/main.c:9: INT8 total_sprites = -1;
   00F0 21r33r00            161 	ld	hl, #_total_sprites
   00F3 36 FF               162 	ld	(hl), #0xff
                            163 ;./src/main.c:43: MSprite* sprites[40] = {0};
   00F5 21r34r00            164 	ld	hl, #_sprites
   00F8 AF                  165 	xor	a, a
   00F9 22                  166 	ld	(hl+), a
   00FA 77                  167 	ld	(hl), a
                            168 ;./src/main.c:68: static UINT8 GRAVITY = 2;
   00FB 21r84r00            169 	ld	hl, #_GRAVITY
   00FE 36 02               170 	ld	(hl), #0x02
                            171 ;./src/main.c:69: UINT8 gravity_time = 0;
   0100 21r85r00            172 	ld	hl, #_gravity_time
   0103 36 00               173 	ld	(hl), #0x00
                            174 ;--------------------------------------------------------
                            175 ; Home
                            176 ;--------------------------------------------------------
                            177 	.area _HOME
                            178 	.area _HOME
                            179 ;--------------------------------------------------------
                            180 ; code
                            181 ;--------------------------------------------------------
                            182 	.area _CODE
                            183 ;./src/../src/input.c:92: static void joypad_wait (UINT8 buttons)
                            184 ;	---------------------------------
                            185 ; Function joypad_wait
                            186 ; ---------------------------------
   0000                     187 _joypad_wait:
                            188 ;./src/../src/input.c:94: while (TRUE) {
   0000                     189 00108$:
                            190 ;./src/../src/input.c:95: UPDATE_JOYPAD_STATE;
   0000 E5                  191 	push	hl
   0001 21r31r00            192 	ld	hl, #_joypad_curr_state
   0004 7E                  193 	ld	a, (hl)
   0005 21r30r00            194 	ld	hl, #_joypad_prev_state
   0008 77                  195 	ld	(hl), a
   0009 E1                  196 	pop	hl
   000A CDr00r00            197 	call	_joypad
   000D 21r31r00            198 	ld	hl, #_joypad_curr_state
   0010 73                  199 	ld	(hl), e
                            200 ;./src/../src/input.c:96: if (JOYPAD_PRESSED(buttons)) {
   0011 21r30r00            201 	ld	hl, #_joypad_prev_state
   0014 7E                  202 	ld	a, (hl)
   0015 F8 02               203 	ldhl	sp,	#2
   0017 A6                  204 	and	a,(hl)
   0018 20 08               205 	jr	NZ,00105$
   001A 21r31r00            206 	ld	hl, #_joypad_curr_state
   001D 7E                  207 	ld	a, (hl)
   001E F8 02               208 	ldhl	sp,	#2
   0020 A6                  209 	and	a,(hl)
   0021 C0                  210 	ret	NZ
                            211 ;./src/../src/input.c:97: break;
   0022                     212 00105$:
                            213 ;./src/../src/input.c:99: wait_vbl_done();
   0022 CDr00r00            214 	call	_wait_vbl_done
   0025 18 D9               215 	jr	00108$
                            216 ;./src/../src/input.c:101: }
   0027 C9                  217 	ret
                            218 ;./src/../src/input.c:104: static bool joypad_waittimeout (UINT8 buttons, UINT8 timeout)
                            219 ;	---------------------------------
                            220 ; Function joypad_waittimeout
                            221 ; ---------------------------------
   0028                     222 _joypad_waittimeout:
                            223 ;./src/../src/input.c:106: for (input_timer=0; input_timer<timeout; ++input_timer) {
   0028 21r32r00            224 	ld	hl, #_input_timer
   002B 36 00               225 	ld	(hl), #0x00
   002D                     226 00109$:
   002D 21r32r00            227 	ld	hl, #_input_timer
   0030 7E                  228 	ld	a, (hl)
   0031 F8 03               229 	ldhl	sp,	#3
   0033 96                  230 	sub	a, (hl)
   0034 30 2F               231 	jr	NC,00107$
                            232 ;./src/../src/input.c:107: UPDATE_JOYPAD_STATE;
   0036 E5                  233 	push	hl
   0037 21r31r00            234 	ld	hl, #_joypad_curr_state
   003A 7E                  235 	ld	a, (hl)
   003B 21r30r00            236 	ld	hl, #_joypad_prev_state
   003E 77                  237 	ld	(hl), a
   003F E1                  238 	pop	hl
   0040 CDr00r00            239 	call	_joypad
   0043 21r31r00            240 	ld	hl, #_joypad_curr_state
   0046 73                  241 	ld	(hl), e
                            242 ;./src/../src/input.c:108: if (JOYPAD_PRESSED(buttons)) {
   0047 21r30r00            243 	ld	hl, #_joypad_prev_state
   004A 7E                  244 	ld	a, (hl)
   004B F8 02               245 	ldhl	sp,	#2
   004D A6                  246 	and	a,(hl)
   004E 20 0C               247 	jr	NZ,00105$
   0050 21r31r00            248 	ld	hl, #_joypad_curr_state
   0053 7E                  249 	ld	a, (hl)
   0054 F8 02               250 	ldhl	sp,	#2
   0056 A6                  251 	and	a,(hl)
   0057 28 03               252 	jr	Z,00105$
                            253 ;./src/../src/input.c:109: return TRUE;
   0059 1E 01               254 	ld	e, #0x01
   005B C9                  255 	ret
   005C                     256 00105$:
                            257 ;./src/../src/input.c:111: wait_vbl_done();
   005C CDr00r00            258 	call	_wait_vbl_done
                            259 ;./src/../src/input.c:106: for (input_timer=0; input_timer<timeout; ++input_timer) {
   005F 21r32r00            260 	ld	hl, #_input_timer
   0062 34                  261 	inc	(hl)
   0063 18 C8               262 	jr	00109$
   0065                     263 00107$:
                            264 ;./src/../src/input.c:113: return FALSE;
   0065 1E 00               265 	ld	e, #0x00
                            266 ;./src/../src/input.c:114: }
   0067 C9                  267 	ret
                            268 ;./src/main.c:10: UINT8 create_sprite_num(){
                            269 ;	---------------------------------
                            270 ; Function create_sprite_num
                            271 ; ---------------------------------
   0068                     272 _create_sprite_num::
                            273 ;./src/main.c:11: ++total_sprites;
   0068 21r33r00            274 	ld	hl, #_total_sprites
   006B 34                  275 	inc	(hl)
                            276 ;./src/main.c:12: return total_sprites;
   006C 5E                  277 	ld	e, (hl)
                            278 ;./src/main.c:13: }
   006D C9                  279 	ret
                            280 ;./src/main.c:15: void performantdelay(UINT8 numloops){
                            281 ;	---------------------------------
                            282 ; Function performantdelay
                            283 ; ---------------------------------
   006E                     284 _performantdelay::
                            285 ;./src/main.c:17: for(i = 0; i < numloops; i++){
   006E 0E 00               286 	ld	c, #0x00
   0070                     287 00103$:
   0070 79                  288 	ld	a, c
   0071 F8 02               289 	ldhl	sp,	#2
   0073 96                  290 	sub	a, (hl)
   0074 D0                  291 	ret	NC
                            292 ;./src/main.c:18: wait_vbl_done();
   0075 C5                  293 	push	bc
   0076 CDr00r00            294 	call	_wait_vbl_done
   0079 C1                  295 	pop	bc
                            296 ;./src/main.c:17: for(i = 0; i < numloops; i++){
   007A 0C                  297 	inc	c
   007B 18 F3               298 	jr	00103$
                            299 ;./src/main.c:20: }
   007D C9                  300 	ret
                            301 ;./src/main.c:45: void draw(MSprite* sprite){
                            302 ;	---------------------------------
                            303 ; Function draw
                            304 ; ---------------------------------
   007E                     305 _draw::
   007E E8 FB               306 	add	sp, #-5
                            307 ;./src/main.c:46: move_sprite(sprite->sprite_number, sprite->position.x, sprite->position.y);
   0080 F8 07               308 	ldhl	sp,#(8 - 1)
   0082 4E                  309 	ld	c, (hl)
   0083 23                  310 	inc	hl
   0084 46                  311 	ld	b, (hl)
   0085 21 01 00            312 	ld	hl, #0x0001
   0088 09                  313 	add	hl, bc
   0089 33                  314 	inc	sp
   008A 33                  315 	inc	sp
   008B E5                  316 	push	hl
   008C D1                  317 	pop	de
   008D D5                  318 	push	de
   008E 1A                  319 	ld	a,(de)
   008F F8 03               320 	ldhl	sp,	#3
   0091 77                  321 	ld	(hl), a
   0092 0A                  322 	ld	a, (bc)
   0093 23                  323 	inc	hl
   0094 77                  324 	ld	(hl), a
   0095 03                  325 	inc	bc
   0096 03                  326 	inc	bc
   0097 03                  327 	inc	bc
   0098 03                  328 	inc	bc
   0099 0A                  329 	ld	a, (bc)
   009A 47                  330 	ld	b, a
   009B 2B                  331 	dec	hl
   009C 7E                  332 	ld	a, (hl)
   009D F5                  333 	push	af
   009E 33                  334 	inc	sp
   009F 23                  335 	inc	hl
   00A0 7E                  336 	ld	a, (hl)
   00A1 F5                  337 	push	af
   00A2 33                  338 	inc	sp
   00A3 C5                  339 	push	bc
   00A4 33                  340 	inc	sp
   00A5 CDr00r00            341 	call	_move_sprite
   00A8 E8 03               342 	add	sp, #3
                            343 ;./src/main.c:47: }
   00AA E8 05               344 	add	sp, #5
   00AC C9                  345 	ret
                            346 ;./src/main.c:60: void next_animation(MSprite* sprite){
                            347 ;	---------------------------------
                            348 ; Function next_animation
                            349 ; ---------------------------------
   00AD                     350 _next_animation::
   00AD E8 FB               351 	add	sp, #-5
                            352 ;./src/main.c:61: ++(sprite->animation_index);
   00AF F8 07               353 	ldhl	sp,	#7
   00B1 2A                  354 	ld	a, (hl+)
   00B2 5E                  355 	ld	e, (hl)
   00B3 F8 00               356 	ldhl	sp,	#0
   00B5 22                  357 	ld	(hl+), a
   00B6 73                  358 	ld	(hl), e
   00B7 C1                  359 	pop	bc
   00B8 C5                  360 	push	bc
   00B9 03                  361 	inc	bc
   00BA 03                  362 	inc	bc
   00BB 0A                  363 	ld	a, (bc)
   00BC 3C                  364 	inc	a
   00BD 23                  365 	inc	hl
   00BE 77                  366 	ld	(hl),a
   00BF 02                  367 	ld	(bc), a
                            368 ;./src/main.c:62: if(sprite->animation_index == sprite->max_animations){
   00C0 D1                  369 	pop	de
   00C1 D5                  370 	push	de
   00C2 21 03 00            371 	ld	hl, #0x0003
   00C5 19                  372 	add	hl, de
   00C6 7D                  373 	ld	a, l
   00C7 54                  374 	ld	d, h
   00C8 F8 03               375 	ldhl	sp,	#3
   00CA 22                  376 	ld	(hl+), a
   00CB 72                  377 	ld	(hl), d
   00CC 2B                  378 	dec	hl
   00CD 5E                  379 	ld	e, (hl)
   00CE 23                  380 	inc	hl
   00CF 56                  381 	ld	d, (hl)
   00D0 1A                  382 	ld	a,(de)
   00D1 32                  383 	ld	(hl-), a
   00D2 2B                  384 	dec	hl
   00D3 2A                  385 	ld	a, (hl+)
   00D4 23                  386 	inc	hl
   00D5 96                  387 	sub	a, (hl)
   00D6 20 02               388 	jr	NZ,00102$
                            389 ;./src/main.c:63: sprite->animation_index = 0;
   00D8 AF                  390 	xor	a, a
   00D9 02                  391 	ld	(bc), a
   00DA                     392 00102$:
                            393 ;./src/main.c:65: set_sprite_tile(sprite->sprite_number, sprite->animation_index);
   00DA 0A                  394 	ld	a, (bc)
   00DB 47                  395 	ld	b, a
   00DC D1                  396 	pop	de
   00DD D5                  397 	push	de
   00DE 21 04 00            398 	ld	hl, #0x0004
   00E1 19                  399 	add	hl, de
   00E2 4D                  400 	ld	c,l
   00E3 7C                  401 	ld	a,h
   00E4 7E                  402 	ld	a, (hl)
   00E5 C5                  403 	push	bc
   00E6 33                  404 	inc	sp
   00E7 F5                  405 	push	af
   00E8 33                  406 	inc	sp
   00E9 CDr00r00            407 	call	_set_sprite_tile
   00EC E8 02               408 	add	sp, #2
                            409 ;./src/main.c:66: }
   00EE E8 05               410 	add	sp, #5
   00F0 C9                  411 	ret
                            412 ;./src/main.c:70: void gravity(MSprite* sprite){
                            413 ;	---------------------------------
                            414 ; Function gravity
                            415 ; ---------------------------------
   00F1                     416 _gravity::
   00F1 E8 FA               417 	add	sp, #-6
                            418 ;./src/main.c:72: sprite->speed.y += GRAVITY;
   00F3 F8 08               419 	ldhl	sp,#(9 - 1)
   00F5 4E                  420 	ld	c, (hl)
   00F6 23                  421 	inc	hl
   00F7 46                  422 	ld	b, (hl)
   00F8 21 06 00            423 	ld	hl, #0x0006
   00FB 09                  424 	add	hl, bc
   00FC 33                  425 	inc	sp
   00FD 33                  426 	inc	sp
   00FE E5                  427 	push	hl
   00FF D1                  428 	pop	de
   0100 D5                  429 	push	de
   0101 1A                  430 	ld	a,(de)
   0102 21r84r00            431 	ld	hl, #_GRAVITY
   0105 5E                  432 	ld	e, (hl)
   0106 83                  433 	add	a, e
   0107 F8 05               434 	ldhl	sp,	#5
   0109 77                  435 	ld	(hl), a
   010A D1                  436 	pop	de
   010B D5                  437 	push	de
   010C 7E                  438 	ld	a, (hl)
   010D 12                  439 	ld	(de), a
                            440 ;./src/main.c:74: if(sprite->position.y + sprite->speed.y > 144){
   010E 03                  441 	inc	bc
   010F F8 02               442 	ldhl	sp,	#2
   0111 71                  443 	ld	(hl), c
   0112 23                  444 	inc	hl
   0113 70                  445 	ld	(hl), b
   0114 2B                  446 	dec	hl
   0115 5E                  447 	ld	e, (hl)
   0116 23                  448 	inc	hl
   0117 56                  449 	ld	d, (hl)
   0118 1A                  450 	ld	a,(de)
   0119 4F                  451 	ld	c, a
   011A 06 00               452 	ld	b, #0x00
   011C 23                  453 	inc	hl
   011D 23                  454 	inc	hl
   011E 3A                  455 	ld	a, (hl-)
   011F 77                  456 	ld	(hl), a
   0120 17                  457 	rla
   0121 9F                  458 	sbc	a, a
   0122 23                  459 	inc	hl
   0123 32                  460 	ld	(hl-), a
   0124 2A                  461 	ld	a, (hl+)
   0125 66                  462 	ld	h, (hl)
   0126 6F                  463 	ld	l, a
   0127 09                  464 	add	hl, bc
   0128 4D                  465 	ld	c, l
   0129 44                  466 	ld	b, h
   012A 78                  467 	ld	a, b
   012B 5F                  468 	ld	e, a
   012C 3E 00               469 	ld	a, #0x00
   012E 57                  470 	ld	d, a
   012F 3E 90               471 	ld	a, #0x90
   0131 B9                  472 	cp	a, c
   0132 3E 00               473 	ld	a, #0x00
   0134 98                  474 	sbc	a, b
   0135 CB 7B               475 	bit	7, e
   0137 28 07               476 	jr	Z,00110$
   0139 CB 7A               477 	bit	7, d
   013B 20 08               478 	jr	NZ,00111$
   013D BF                  479 	cp	a, a
   013E 18 05               480 	jr	00111$
   0140                     481 00110$:
   0140 CB 7A               482 	bit	7, d
   0142 28 01               483 	jr	Z,00111$
   0144 37                  484 	scf
   0145                     485 00111$:
   0145 30 0A               486 	jr	NC,00103$
                            487 ;./src/main.c:75: sprite->speed.y = 0;
   0147 E1                  488 	pop	hl
   0148 E5                  489 	push	hl
   0149 36 00               490 	ld	(hl), #0x00
                            491 ;./src/main.c:76: sprite->position.y = 144;
   014B C1                  492 	pop	bc
   014C E1                  493 	pop	hl
   014D E5                  494 	push	hl
   014E C5                  495 	push	bc
   014F 36 90               496 	ld	(hl), #0x90
   0151                     497 00103$:
                            498 ;./src/main.c:78: }
   0151 E8 06               499 	add	sp, #6
   0153 C9                  500 	ret
                            501 ;./src/main.c:81: void update_position(MSprite* sprite){
                            502 ;	---------------------------------
                            503 ; Function update_position
                            504 ; ---------------------------------
   0154                     505 _update_position::
   0154 E8 FD               506 	add	sp, #-3
                            507 ;./src/main.c:82: sprite->position.x += sprite->speed.x;
   0156 F8 05               508 	ldhl	sp,#(6 - 1)
   0158 4E                  509 	ld	c, (hl)
   0159 23                  510 	inc	hl
   015A 46                  511 	ld	b, (hl)
   015B 0A                  512 	ld	a, (bc)
   015C F8 00               513 	ldhl	sp,	#0
   015E 77                  514 	ld	(hl), a
   015F 21 05 00            515 	ld	hl, #0x0005
   0162 09                  516 	add	hl, bc
   0163 7D                  517 	ld	a, l
   0164 54                  518 	ld	d, h
   0165 F8 01               519 	ldhl	sp,	#1
   0167 22                  520 	ld	(hl+), a
   0168 72                  521 	ld	(hl), d
   0169 2B                  522 	dec	hl
   016A 5E                  523 	ld	e, (hl)
   016B 23                  524 	inc	hl
   016C 56                  525 	ld	d, (hl)
   016D 1A                  526 	ld	a,(de)
   016E 2B                  527 	dec	hl
   016F 2B                  528 	dec	hl
   0170 5E                  529 	ld	e, (hl)
   0171 83                  530 	add	a, e
   0172 02                  531 	ld	(bc), a
                            532 ;./src/main.c:83: sprite->position.y += sprite->speed.y;
   0173 21 01 00            533 	ld	hl, #0x0001
   0176 09                  534 	add	hl, bc
   0177 33                  535 	inc	sp
   0178 33                  536 	inc	sp
   0179 E5                  537 	push	hl
   017A D1                  538 	pop	de
   017B D5                  539 	push	de
   017C 1A                  540 	ld	a,(de)
   017D F8 02               541 	ldhl	sp,	#2
   017F 77                  542 	ld	(hl), a
   0180 21 06 00            543 	ld	hl, #0x0006
   0183 09                  544 	add	hl, bc
   0184 4D                  545 	ld	c, l
   0185 44                  546 	ld	b, h
   0186 0A                  547 	ld	a, (bc)
   0187 F8 02               548 	ldhl	sp,	#2
   0189 4E                  549 	ld	c, (hl)
   018A 81                  550 	add	a, c
   018B 4F                  551 	ld	c, a
   018C E1                  552 	pop	hl
   018D E5                  553 	push	hl
   018E 71                  554 	ld	(hl), c
                            555 ;./src/main.c:98: }
   018F E8 03               556 	add	sp, #3
   0191 C9                  557 	ret
                            558 ;./src/main.c:100: void player_movement(MPlayer* player)
                            559 ;	---------------------------------
                            560 ; Function player_movement
                            561 ; ---------------------------------
   0192                     562 _player_movement::
   0192 E8 F7               563 	add	sp, #-9
                            564 ;./src/main.c:102: MVector movement_speed = {2, 2};
   0194 F8 00               565 	ldhl	sp,	#0
   0196 4D                  566 	ld	c, l
   0197 44                  567 	ld	b, h
   0198 3E 02               568 	ld	a, #0x02
   019A 02                  569 	ld	(bc), a
   019B F8 00               570 	ldhl	sp,	#0
   019D 4D                  571 	ld	c, l
   019E 44                  572 	ld	b, h
   019F 21 01 00            573 	ld	hl, #0x0001
   01A2 09                  574 	add	hl, bc
   01A3 7D                  575 	ld	a, l
   01A4 54                  576 	ld	d, h
   01A5 F8 02               577 	ldhl	sp,	#2
   01A7 22                  578 	ld	(hl+), a
   01A8 72                  579 	ld	(hl), d
   01A9 2B                  580 	dec	hl
   01AA 2A                  581 	ld	a, (hl+)
   01AB 66                  582 	ld	h, (hl)
   01AC 6F                  583 	ld	l, a
   01AD 36 02               584 	ld	(hl), #0x02
                            585 ;./src/main.c:103: UPDATE_JOYPAD_STATE;
   01AF E5                  586 	push	hl
   01B0 21r31r00            587 	ld	hl, #_joypad_curr_state
   01B3 7E                  588 	ld	a, (hl)
   01B4 21r30r00            589 	ld	hl, #_joypad_prev_state
   01B7 77                  590 	ld	(hl), a
   01B8 E1                  591 	pop	hl
   01B9 C5                  592 	push	bc
   01BA CDr00r00            593 	call	_joypad
   01BD C1                  594 	pop	bc
   01BE 21r31r00            595 	ld	hl, #_joypad_curr_state
   01C1 73                  596 	ld	(hl), e
                            597 ;./src/main.c:105: if(JOYPAD_DOWN_PAD_L){
   01C2 C5                  598 	push	bc
   01C3 CDr00r00            599 	call	_joypad
   01C6 F8 06               600 	ldhl	sp,	#6
   01C8 73                  601 	ld	(hl), e
   01C9 C1                  602 	pop	bc
                            603 ;./src/main.c:106: player->sprite.speed.x = -movement_speed.x;
   01CA F8 0B               604 	ldhl	sp,	#11
   01CC 2A                  605 	ld	a, (hl+)
   01CD 5E                  606 	ld	e, (hl)
   01CE F8 05               607 	ldhl	sp,	#5
   01D0 22                  608 	ld	(hl+), a
   01D1 73                  609 	ld	(hl), e
   01D2 2B                  610 	dec	hl
   01D3 5E                  611 	ld	e, (hl)
   01D4 23                  612 	inc	hl
   01D5 56                  613 	ld	d, (hl)
   01D6 21 05 00            614 	ld	hl, #0x0005
   01D9 19                  615 	add	hl, de
   01DA 7D                  616 	ld	a, l
   01DB 54                  617 	ld	d, h
   01DC F8 07               618 	ldhl	sp,	#7
   01DE 22                  619 	ld	(hl+), a
   01DF 72                  620 	ld	(hl), d
                            621 ;./src/main.c:105: if(JOYPAD_DOWN_PAD_L){
   01E0 F8 04               622 	ldhl	sp,	#4
   01E2 CB 4E               623 	bit	1, (hl)
   01E4 28 19               624 	jr	Z,00112$
                            625 ;./src/main.c:106: player->sprite.speed.x = -movement_speed.x;
   01E6 0A                  626 	ld	a, (bc)
   01E7 4F                  627 	ld	c, a
   01E8 AF                  628 	xor	a, a
   01E9 91                  629 	sub	a, c
   01EA 4F                  630 	ld	c, a
   01EB F8 07               631 	ldhl	sp,	#7
   01ED 2A                  632 	ld	a, (hl+)
   01EE 66                  633 	ld	h, (hl)
   01EF 6F                  634 	ld	l, a
   01F0 71                  635 	ld	(hl), c
                            636 ;./src/main.c:107: next_animation(&(player->sprite));
   01F1 F8 05               637 	ldhl	sp,	#5
   01F3 2A                  638 	ld	a, (hl+)
   01F4 66                  639 	ld	h, (hl)
   01F5 6F                  640 	ld	l, a
   01F6 E5                  641 	push	hl
   01F7 CDrADr00            642 	call	_next_animation
   01FA E8 02               643 	add	sp, #2
   01FC C3r42r02            644 	jp	00113$
   01FF                     645 00112$:
                            646 ;./src/main.c:109: else if(JOYPAD_DOWN_PAD_R){
   01FF C5                  647 	push	bc
   0200 CDr00r00            648 	call	_joypad
   0203 7B                  649 	ld	a, e
   0204 C1                  650 	pop	bc
   0205 0F                  651 	rrca
   0206 30 15               652 	jr	NC,00109$
                            653 ;./src/main.c:110: player->sprite.speed.x = movement_speed.x;
   0208 0A                  654 	ld	a, (bc)
   0209 4F                  655 	ld	c, a
   020A F8 07               656 	ldhl	sp,	#7
   020C 2A                  657 	ld	a, (hl+)
   020D 66                  658 	ld	h, (hl)
   020E 6F                  659 	ld	l, a
   020F 71                  660 	ld	(hl), c
                            661 ;./src/main.c:111: next_animation(&(player->sprite));
   0210 F8 05               662 	ldhl	sp,	#5
   0212 2A                  663 	ld	a, (hl+)
   0213 66                  664 	ld	h, (hl)
   0214 6F                  665 	ld	l, a
   0215 E5                  666 	push	hl
   0216 CDrADr00            667 	call	_next_animation
   0219 E8 02               668 	add	sp, #2
   021B 18 25               669 	jr	00113$
   021D                     670 00109$:
                            671 ;./src/main.c:113: else if(JOYPAD_UP_PAD_L && JOYPAD_UP_PAD_R && !(player->jumped)){
   021D CDr00r00            672 	call	_joypad
   0220 CB 4B               673 	bit	1, e
   0222 20 1E               674 	jr	NZ,00113$
   0224 CDr00r00            675 	call	_joypad
   0227 7B                  676 	ld	a, e
   0228 0F                  677 	rrca
   0229 38 17               678 	jr	C,00113$
   022B F8 05               679 	ldhl	sp,#(6 - 1)
   022D 5E                  680 	ld	e, (hl)
   022E 23                  681 	inc	hl
   022F 56                  682 	ld	d, (hl)
   0230 21 0B 00            683 	ld	hl, #0x000b
   0233 19                  684 	add	hl, de
   0234 4D                  685 	ld	c, l
   0235 44                  686 	ld	b, h
   0236 0A                  687 	ld	a, (bc)
   0237 CB 47               688 	bit	0, a
   0239 20 07               689 	jr	NZ,00113$
                            690 ;./src/main.c:114: player->sprite.speed.x = 0;
   023B F8 07               691 	ldhl	sp,	#7
   023D 2A                  692 	ld	a, (hl+)
   023E 66                  693 	ld	h, (hl)
   023F 6F                  694 	ld	l, a
   0240 36 00               695 	ld	(hl), #0x00
   0242                     696 00113$:
                            697 ;./src/main.c:117: if(JOYPAD_DOWN_PAD_D){
   0242 CDr00r00            698 	call	_joypad
   0245 CB 5B               699 	bit	3, e
   0247 C2r75r02            700 	jp	NZ,00120$
                            701 ;./src/main.c:120: else if(JOYPAD_RELEASED_PAD_D){
   024A 21r30r00            702 	ld	hl, #_joypad_prev_state
   024D 7E                  703 	ld	a, (hl)
   024E CB 5F               704 	bit	3, a
   0250 28 23               705 	jr	Z,00120$
   0252 21r31r00            706 	ld	hl, #_joypad_curr_state
   0255 7E                  707 	ld	a, (hl)
   0256 CB 5F               708 	bit	3, a
   0258 20 1B               709 	jr	NZ,00120$
                            710 ;./src/main.c:121: player->sprite.speed.y -= movement_speed.y;
   025A F8 05               711 	ldhl	sp,#(6 - 1)
   025C 5E                  712 	ld	e, (hl)
   025D 23                  713 	inc	hl
   025E 56                  714 	ld	d, (hl)
   025F 21 06 00            715 	ld	hl, #0x0006
   0262 19                  716 	add	hl, de
   0263 4D                  717 	ld	c, l
   0264 44                  718 	ld	b, h
   0265 0A                  719 	ld	a, (bc)
   0266 F8 08               720 	ldhl	sp,	#8
   0268 77                  721 	ld	(hl), a
   0269 F8 02               722 	ldhl	sp,#(3 - 1)
   026B 5E                  723 	ld	e, (hl)
   026C 23                  724 	inc	hl
   026D 56                  725 	ld	d, (hl)
   026E 1A                  726 	ld	a,(de)
   026F F8 07               727 	ldhl	sp,	#7
   0271 22                  728 	ld	(hl+), a
   0272 3A                  729 	ld	a, (hl-)
   0273 96                  730 	sub	a, (hl)
   0274 02                  731 	ld	(bc), a
   0275                     732 00120$:
                            733 ;./src/main.c:123: }
   0275 E8 09               734 	add	sp, #9
   0277 C9                  735 	ret
                            736 ;./src/main.c:125: void jump(MPlayer* player){
                            737 ;	---------------------------------
                            738 ; Function jump
                            739 ; ---------------------------------
   0278                     740 _jump::
   0278 E8 FC               741 	add	sp, #-4
                            742 ;./src/main.c:127: if(!(joypad_prev_state & J_UP) && JOYPAD_DOWN_PAD_U && (player->jumped == false)){
   027A E5                  743 	push	hl
   027B 21r30r00            744 	ld	hl, #_joypad_prev_state
   027E 7E                  745 	ld	a, (hl)
   027F F8 05               746 	ldhl	sp,	#5
   0281 77                  747 	ld	(hl), a
   0282 E1                  748 	pop	hl
   0283 F8 06               749 	ldhl	sp,#(7 - 1)
   0285 4E                  750 	ld	c, (hl)
   0286 23                  751 	inc	hl
   0287 46                  752 	ld	b, (hl)
   0288 21 0B 00            753 	ld	hl, #0x000b
   028B 09                  754 	add	hl, bc
   028C 33                  755 	inc	sp
   028D 33                  756 	inc	sp
   028E E5                  757 	push	hl
   028F F8 03               758 	ldhl	sp,	#3
   0291 CB 56               759 	bit	2, (hl)
   0293 20 24               760 	jr	NZ,00102$
   0295 C5                  761 	push	bc
   0296 CDr00r00            762 	call	_joypad
   0299 C1                  763 	pop	bc
   029A CB 53               764 	bit	2, e
   029C 28 1B               765 	jr	Z,00102$
   029E D1                  766 	pop	de
   029F D5                  767 	push	de
   02A0 1A                  768 	ld	a,(de)
   02A1 CB 47               769 	bit	0, a
   02A3 20 14               770 	jr	NZ,00102$
                            771 ;./src/main.c:129: player->sprite.speed.y = -5;
   02A5 21 06 00            772 	ld	hl, #0x0006
   02A8 09                  773 	add	hl, bc
   02A9 7D                  774 	ld	a, l
   02AA 54                  775 	ld	d, h
   02AB F8 02               776 	ldhl	sp,	#2
   02AD 22                  777 	ld	(hl+), a
   02AE 72                  778 	ld	(hl), d
   02AF 2B                  779 	dec	hl
   02B0 2A                  780 	ld	a, (hl+)
   02B1 66                  781 	ld	h, (hl)
   02B2 6F                  782 	ld	l, a
   02B3 36 FB               783 	ld	(hl), #0xfb
                            784 ;./src/main.c:130: player->jumped = true;
   02B5 E1                  785 	pop	hl
   02B6 E5                  786 	push	hl
   02B7 36 01               787 	ld	(hl), #0x01
   02B9                     788 00102$:
                            789 ;./src/main.c:133: if(player->sprite.position.y >= 144){
   02B9 03                  790 	inc	bc
   02BA 0A                  791 	ld	a, (bc)
   02BB D6 90               792 	sub	a, #0x90
   02BD 38 04               793 	jr	C,00107$
                            794 ;./src/main.c:134: player->jumped = false;
   02BF E1                  795 	pop	hl
   02C0 E5                  796 	push	hl
   02C1 36 00               797 	ld	(hl), #0x00
   02C3                     798 00107$:
                            799 ;./src/main.c:136: }
   02C3 E8 04               800 	add	sp, #4
   02C5 C9                  801 	ret
                            802 ;./src/main.c:138: void main()
                            803 ;	---------------------------------
                            804 ; Function main
                            805 ; ---------------------------------
   02C6                     806 _main::
   02C6 E8 EB               807 	add	sp, #-21
                            808 ;./src/main.c:140: UPDATE_JOYPAD_STATE;
   02C8 E5                  809 	push	hl
   02C9 21r31r00            810 	ld	hl, #_joypad_curr_state
   02CC 7E                  811 	ld	a, (hl)
   02CD 21r30r00            812 	ld	hl, #_joypad_prev_state
   02D0 77                  813 	ld	(hl), a
   02D1 E1                  814 	pop	hl
   02D2 CDr00r00            815 	call	_joypad
   02D5 21r31r00            816 	ld	hl, #_joypad_curr_state
   02D8 73                  817 	ld	(hl), e
                            818 ;./src/main.c:142: MPlayer player = {{{88, 78}, 0, 3, 0, {0, 0}}, false, 6, 0, false, 60, 0};
   02D9 F8 00               819 	ldhl	sp,	#0
   02DB 7D                  820 	ld	a, l
   02DC 54                  821 	ld	d, h
   02DD F8 13               822 	ldhl	sp,	#19
   02DF 22                  823 	ld	(hl+), a
   02E0 72                  824 	ld	(hl), d
   02E1 2B                  825 	dec	hl
   02E2 2A                  826 	ld	a, (hl+)
   02E3 66                  827 	ld	h, (hl)
   02E4 6F                  828 	ld	l, a
   02E5 36 58               829 	ld	(hl), #0x58
   02E7 F8 13               830 	ldhl	sp,#(20 - 1)
   02E9 4E                  831 	ld	c, (hl)
   02EA 23                  832 	inc	hl
   02EB 46                  833 	ld	b, (hl)
   02EC 03                  834 	inc	bc
   02ED 3E 4E               835 	ld	a, #0x4e
   02EF 02                  836 	ld	(bc), a
   02F0 2B                  837 	dec	hl
   02F1 4E                  838 	ld	c, (hl)
   02F2 23                  839 	inc	hl
   02F3 46                  840 	ld	b, (hl)
   02F4 03                  841 	inc	bc
   02F5 03                  842 	inc	bc
   02F6 AF                  843 	xor	a, a
   02F7 02                  844 	ld	(bc), a
   02F8 2B                  845 	dec	hl
   02F9 4E                  846 	ld	c, (hl)
   02FA 23                  847 	inc	hl
   02FB 46                  848 	ld	b, (hl)
   02FC 03                  849 	inc	bc
   02FD 03                  850 	inc	bc
   02FE 03                  851 	inc	bc
   02FF 3E 03               852 	ld	a, #0x03
   0301 02                  853 	ld	(bc), a
   0302 2B                  854 	dec	hl
   0303 5E                  855 	ld	e, (hl)
   0304 23                  856 	inc	hl
   0305 56                  857 	ld	d, (hl)
   0306 21 04 00            858 	ld	hl, #0x0004
   0309 19                  859 	add	hl, de
   030A 4D                  860 	ld	c, l
   030B 44                  861 	ld	b, h
   030C AF                  862 	xor	a, a
   030D 02                  863 	ld	(bc), a
   030E F8 13               864 	ldhl	sp,#(20 - 1)
   0310 5E                  865 	ld	e, (hl)
   0311 23                  866 	inc	hl
   0312 56                  867 	ld	d, (hl)
   0313 21 05 00            868 	ld	hl, #0x0005
   0316 19                  869 	add	hl, de
   0317 4D                  870 	ld	c, l
   0318 44                  871 	ld	b, h
   0319 AF                  872 	xor	a, a
   031A 02                  873 	ld	(bc), a
   031B F8 13               874 	ldhl	sp,#(20 - 1)
   031D 5E                  875 	ld	e, (hl)
   031E 23                  876 	inc	hl
   031F 56                  877 	ld	d, (hl)
   0320 21 06 00            878 	ld	hl, #0x0006
   0323 19                  879 	add	hl, de
   0324 4D                  880 	ld	c, l
   0325 44                  881 	ld	b, h
   0326 AF                  882 	xor	a, a
   0327 02                  883 	ld	(bc), a
   0328 F8 00               884 	ldhl	sp,	#0
   032A 7D                  885 	ld	a, l
   032B 54                  886 	ld	d, h
   032C F8 0F               887 	ldhl	sp,	#15
   032E 22                  888 	ld	(hl+), a
   032F 72                  889 	ld	(hl), d
   0330 2B                  890 	dec	hl
   0331 5E                  891 	ld	e, (hl)
   0332 23                  892 	inc	hl
   0333 56                  893 	ld	d, (hl)
   0334 21 07 00            894 	ld	hl, #0x0007
   0337 19                  895 	add	hl, de
   0338 4D                  896 	ld	c, l
   0339 44                  897 	ld	b, h
   033A AF                  898 	xor	a, a
   033B 02                  899 	ld	(bc), a
   033C F8 0F               900 	ldhl	sp,#(16 - 1)
   033E 5E                  901 	ld	e, (hl)
   033F 23                  902 	inc	hl
   0340 56                  903 	ld	d, (hl)
   0341 21 08 00            904 	ld	hl, #0x0008
   0344 19                  905 	add	hl, de
   0345 4D                  906 	ld	c,l
   0346 7C                  907 	ld	a,h
   0347 36 06               908 	ld	(hl), #0x06
   0349 F8 0F               909 	ldhl	sp,#(16 - 1)
   034B 5E                  910 	ld	e, (hl)
   034C 23                  911 	inc	hl
   034D 56                  912 	ld	d, (hl)
   034E 21 09 00            913 	ld	hl, #0x0009
   0351 19                  914 	add	hl, de
   0352 4D                  915 	ld	c, l
   0353 44                  916 	ld	b, h
   0354 AF                  917 	xor	a, a
   0355 02                  918 	ld	(bc), a
   0356 03                  919 	inc	bc
   0357 02                  920 	ld	(bc), a
   0358 F8 0F               921 	ldhl	sp,#(16 - 1)
   035A 5E                  922 	ld	e, (hl)
   035B 23                  923 	inc	hl
   035C 56                  924 	ld	d, (hl)
   035D 21 0B 00            925 	ld	hl, #0x000b
   0360 19                  926 	add	hl, de
   0361 4D                  927 	ld	c, l
   0362 44                  928 	ld	b, h
   0363 AF                  929 	xor	a, a
   0364 02                  930 	ld	(bc), a
   0365 F8 0F               931 	ldhl	sp,#(16 - 1)
   0367 5E                  932 	ld	e, (hl)
   0368 23                  933 	inc	hl
   0369 56                  934 	ld	d, (hl)
   036A 21 0C 00            935 	ld	hl, #0x000c
   036D 19                  936 	add	hl, de
   036E 4D                  937 	ld	c,l
   036F 7C                  938 	ld	a,h
   0370 36 3C               939 	ld	(hl), #0x3c
   0372 F8 0F               940 	ldhl	sp,#(16 - 1)
   0374 5E                  941 	ld	e, (hl)
   0375 23                  942 	inc	hl
   0376 56                  943 	ld	d, (hl)
   0377 21 0D 00            944 	ld	hl, #0x000d
   037A 19                  945 	add	hl, de
   037B 4D                  946 	ld	c, l
   037C 44                  947 	ld	b, h
   037D AF                  948 	xor	a, a
   037E 02                  949 	ld	(bc), a
   037F 03                  950 	inc	bc
   0380 02                  951 	ld	(bc), a
                            952 ;./src/main.c:143: sprites[0] = &(player.sprite);
   0381 F8 0F               953 	ldhl	sp,#(16 - 1)
   0383 4E                  954 	ld	c, (hl)
   0384 23                  955 	inc	hl
   0385 46                  956 	ld	b, (hl)
   0386 21r34r00            957 	ld	hl, #_sprites
   0389 71                  958 	ld	(hl), c
   038A 23                  959 	inc	hl
   038B 70                  960 	ld	(hl), b
                            961 ;./src/main.c:144: set_sprite_data(player.sprite.sprite_number, player.sprite.max_animations, MainChar);
   038C F8 0F               962 	ldhl	sp,#(16 - 1)
   038E 4E                  963 	ld	c, (hl)
   038F 23                  964 	inc	hl
   0390 46                  965 	ld	b, (hl)
   0391 03                  966 	inc	bc
   0392 03                  967 	inc	bc
   0393 03                  968 	inc	bc
   0394 0A                  969 	ld	a, (bc)
   0395 47                  970 	ld	b, a
   0396 2B                  971 	dec	hl
   0397 5E                  972 	ld	e, (hl)
   0398 23                  973 	inc	hl
   0399 56                  974 	ld	d, (hl)
   039A 21 04 00            975 	ld	hl, #0x0004
   039D 19                  976 	add	hl, de
   039E 7D                  977 	ld	a, l
   039F 54                  978 	ld	d, h
   03A0 F8 13               979 	ldhl	sp,	#19
   03A2 22                  980 	ld	(hl+), a
   03A3 72                  981 	ld	(hl), d
   03A4 2B                  982 	dec	hl
   03A5 5E                  983 	ld	e, (hl)
   03A6 23                  984 	inc	hl
   03A7 56                  985 	ld	d, (hl)
   03A8 1A                  986 	ld	a,(de)
   03A9 4F                  987 	ld	c, a
   03AA 21r00r00            988 	ld	hl, #_MainChar
   03AD E5                  989 	push	hl
   03AE C5                  990 	push	bc
   03AF 33                  991 	inc	sp
   03B0 79                  992 	ld	a, c
   03B1 F5                  993 	push	af
   03B2 33                  994 	inc	sp
   03B3 CDr00r00            995 	call	_set_sprite_data
   03B6 E8 04               996 	add	sp, #4
                            997 ;./src/main.c:145: set_sprite_tile(player.sprite.sprite_number, player.sprite.animation_index);
   03B8 F8 0F               998 	ldhl	sp,#(16 - 1)
   03BA 4E                  999 	ld	c, (hl)
   03BB 23                 1000 	inc	hl
   03BC 46                 1001 	ld	b, (hl)
   03BD 03                 1002 	inc	bc
   03BE 03                 1003 	inc	bc
   03BF 0A                 1004 	ld	a, (bc)
   03C0 47                 1005 	ld	b, a
   03C1 F8 13              1006 	ldhl	sp,#(20 - 1)
   03C3 5E                 1007 	ld	e, (hl)
   03C4 23                 1008 	inc	hl
   03C5 56                 1009 	ld	d, (hl)
   03C6 1A                 1010 	ld	a,(de)
   03C7 C5                 1011 	push	bc
   03C8 33                 1012 	inc	sp
   03C9 F5                 1013 	push	af
   03CA 33                 1014 	inc	sp
   03CB CDr00r00           1015 	call	_set_sprite_tile
   03CE E8 02              1016 	add	sp, #2
                           1017 ;./src/main.c:146: move_sprite(player.sprite.sprite_number, player.sprite.position.x, player.sprite.position.y);
   03D0 F8 0F              1018 	ldhl	sp,#(16 - 1)
   03D2 4E                 1019 	ld	c, (hl)
   03D3 23                 1020 	inc	hl
   03D4 46                 1021 	ld	b, (hl)
   03D5 03                 1022 	inc	bc
   03D6 0A                 1023 	ld	a, (bc)
   03D7 47                 1024 	ld	b, a
   03D8 2B                 1025 	dec	hl
   03D9 5E                 1026 	ld	e, (hl)
   03DA 23                 1027 	inc	hl
   03DB 56                 1028 	ld	d, (hl)
   03DC 1A                 1029 	ld	a,(de)
   03DD F8 13              1030 	ldhl	sp,#(20 - 1)
   03DF 5E                 1031 	ld	e, (hl)
   03E0 23                 1032 	inc	hl
   03E1 56                 1033 	ld	d, (hl)
   03E2 F5                 1034 	push	af
   03E3 1A                 1035 	ld	a,(de)
   03E4 4F                 1036 	ld	c, a
   03E5 F1                 1037 	pop	af
   03E6 C5                 1038 	push	bc
   03E7 33                 1039 	inc	sp
   03E8 F5                 1040 	push	af
   03E9 33                 1041 	inc	sp
   03EA 79                 1042 	ld	a, c
   03EB F5                 1043 	push	af
   03EC 33                 1044 	inc	sp
   03ED CDr00r00           1045 	call	_move_sprite
   03F0 E8 03              1046 	add	sp, #3
                           1047 ;./src/main.c:147: SHOW_SPRITES;
   03F2 F0r00              1048 	ldh	a, (_LCDC_REG+0)
   03F4 F6 02              1049 	or	a, #0x02
   03F6 E0r00              1050 	ldh	(_LCDC_REG+0),a
                           1051 ;./src/main.c:150: while(1){
   03F8                    1052 00115$:
                           1053 ;./src/main.c:152: player_movement(&player);
   03F8 F8 0F              1054 	ldhl	sp,#(16 - 1)
   03FA 4E                 1055 	ld	c, (hl)
   03FB 23                 1056 	inc	hl
   03FC 46                 1057 	ld	b, (hl)
   03FD C5                 1058 	push	bc
   03FE CDr92r01           1059 	call	_player_movement
   0401 E8 02              1060 	add	sp, #2
                           1061 ;./src/main.c:153: jump(&player);
   0403 F8 0F              1062 	ldhl	sp,#(16 - 1)
   0405 4E                 1063 	ld	c, (hl)
   0406 23                 1064 	inc	hl
   0407 46                 1065 	ld	b, (hl)
   0408 C5                 1066 	push	bc
   0409 CDr78r02           1067 	call	_jump
   040C E8 02              1068 	add	sp, #2
                           1069 ;./src/main.c:154: ++gravity_time;
   040E 21r85r00           1070 	ld	hl, #_gravity_time
   0411 34                 1071 	inc	(hl)
                           1072 ;./src/main.c:155: for(UINT8 i = 0; i < 40; ++i){
   0412 AF                 1073 	xor	a, a
   0413 F8 14              1074 	ldhl	sp,	#20
   0415 77                 1075 	ld	(hl), a
   0416                    1076 00118$:
                           1077 ;./src/main.c:157: if(gravity_time > 6) { gravity(sprites[i]); }
   0416 3E 06              1078 	ld	a, #0x06
   0418 21r85r00           1079 	ld	hl, #_gravity_time
   041B 96                 1080 	sub	a, (hl)
   041C 3E 00              1081 	ld	a, #0x00
   041E 17                 1082 	rla
   041F F8 11              1083 	ldhl	sp,	#17
   0421 77                 1084 	ld	(hl), a
                           1085 ;./src/main.c:155: for(UINT8 i = 0; i < 40; ++i){
   0422 F8 14              1086 	ldhl	sp,	#20
   0424 7E                 1087 	ld	a, (hl)
   0425 D6 28              1088 	sub	a, #0x28
   0427 D2r69r04           1089 	jp	NC, 00108$
                           1090 ;./src/main.c:156: if(sprites[i] == 0){break;}
   042A 4E                 1091 	ld	c, (hl)
   042B 06 00              1092 	ld	b, #0x00
   042D CB 21              1093 	sla	c
   042F CB 10              1094 	rl	b
   0431 21r34r00           1095 	ld	hl, #_sprites
   0434 09                 1096 	add	hl, bc
   0435 7D                 1097 	ld	a, l
   0436 54                 1098 	ld	d, h
   0437 F8 12              1099 	ldhl	sp,	#18
   0439 22                 1100 	ld	(hl+), a
   043A 72                 1101 	ld	(hl), d
   043B 2B                 1102 	dec	hl
   043C 5E                 1103 	ld	e, (hl)
   043D 23                 1104 	inc	hl
   043E 56                 1105 	ld	d, (hl)
   043F 1A                 1106 	ld	a,(de)
   0440 4F                 1107 	ld	c, a
   0441 13                 1108 	inc	de
   0442 1A                 1109 	ld	a,(de)
   0443 47                 1110 	ld	b,a
   0444 B1                 1111 	or	a, c
   0445 28 22              1112 	jr	Z,00108$
                           1113 ;./src/main.c:157: if(gravity_time > 6) { gravity(sprites[i]); }
   0447 2B                 1114 	dec	hl
   0448 2B                 1115 	dec	hl
   0449 7E                 1116 	ld	a, (hl)
   044A B7                 1117 	or	a, a
   044B 28 06              1118 	jr	Z,00107$
   044D C5                 1119 	push	bc
   044E CDrF1r00           1120 	call	_gravity
   0451 E8 02              1121 	add	sp, #2
   0453                    1122 00107$:
                           1123 ;./src/main.c:158: update_position(sprites[i]);
   0453 F8 12              1124 	ldhl	sp,#(19 - 1)
   0455 5E                 1125 	ld	e, (hl)
   0456 23                 1126 	inc	hl
   0457 56                 1127 	ld	d, (hl)
   0458 1A                 1128 	ld	a,(de)
   0459 4F                 1129 	ld	c, a
   045A 13                 1130 	inc	de
   045B 1A                 1131 	ld	a,(de)
   045C 47                 1132 	ld	b, a
   045D C5                 1133 	push	bc
   045E CDr54r01           1134 	call	_update_position
   0461 E8 02              1135 	add	sp, #2
                           1136 ;./src/main.c:155: for(UINT8 i = 0; i < 40; ++i){
   0463 F8 14              1137 	ldhl	sp,	#20
   0465 34                 1138 	inc	(hl)
   0466 C3r16r04           1139 	jp	00118$
   0469                    1140 00108$:
                           1141 ;./src/main.c:160: if(gravity_time > 6){
   0469 F8 11              1142 	ldhl	sp,	#17
   046B 7E                 1143 	ld	a, (hl)
   046C B7                 1144 	or	a, a
   046D 28 05              1145 	jr	Z,00132$
                           1146 ;./src/main.c:161: gravity_time = 0;
   046F 21r85r00           1147 	ld	hl, #_gravity_time
   0472 36 00              1148 	ld	(hl), #0x00
                           1149 ;./src/main.c:165: for(UINT8 i = 0; i < 40; ++i){
   0474                    1150 00132$:
   0474 AF                 1151 	xor	a, a
   0475 F8 14              1152 	ldhl	sp,	#20
   0477 77                 1153 	ld	(hl), a
   0478                    1154 00121$:
   0478 F8 14              1155 	ldhl	sp,	#20
   047A 7E                 1156 	ld	a, (hl)
   047B D6 28              1157 	sub	a, #0x28
   047D 30 1F              1158 	jr	NC,00113$
                           1159 ;./src/main.c:166: if(sprites[i] == 0){break;}
   047F 4E                 1160 	ld	c, (hl)
   0480 06 00              1161 	ld	b, #0x00
   0482 CB 21              1162 	sla	c
   0484 CB 10              1163 	rl	b
   0486 21r34r00           1164 	ld	hl, #_sprites
   0489 09                 1165 	add	hl, bc
   048A 4D                 1166 	ld	c,l
   048B 44                 1167 	ld	b,h
   048C 4E                 1168 	ld	c, (hl)
   048D 23                 1169 	inc	hl
   048E 46                 1170 	ld	b, (hl)
   048F 78                 1171 	ld	a, b
   0490 B1                 1172 	or	a, c
   0491 28 0B              1173 	jr	Z,00113$
                           1174 ;./src/main.c:167: draw(sprites[i]);
   0493 C5                 1175 	push	bc
   0494 CDr7Er00           1176 	call	_draw
   0497 E8 02              1177 	add	sp, #2
                           1178 ;./src/main.c:165: for(UINT8 i = 0; i < 40; ++i){
   0499 F8 14              1179 	ldhl	sp,	#20
   049B 34                 1180 	inc	(hl)
   049C 18 DA              1181 	jr	00121$
   049E                    1182 00113$:
                           1183 ;./src/main.c:170: wait_vbl_done();
   049E CDr00r00           1184 	call	_wait_vbl_done
   04A1 C3rF8r03           1185 	jp	00115$
                           1186 ;./src/main.c:173: }
   04A4 E8 15              1187 	add	sp, #21
   04A6 C9                 1188 	ret
                           1189 	.area _CODE
                           1190 	.area _CABS (ABS)
