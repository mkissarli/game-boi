                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 4.0.0 #11528 (MINGW32)
                              4 ;--------------------------------------------------------
                              5 	.module C__Users_Thief3_AppData_Local_Temp_lcc124321
                              6 	.optsdcc -mgbz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _player_movement
                             13 	.globl _create_level
                             14 	.globl _check_collision_with_wall
                             15 	.globl _move_player
                             16 	.globl _next_animation
                             17 	.globl _gravity
                             18 	.globl _create_sprite_num
                             19 	.globl _scroll_sprite
                             20 	.globl _move_sprite
                             21 	.globl _set_sprite_tile
                             22 	.globl _set_sprite_data
                             23 	.globl _wait_vbl_done
                             24 	.globl _joypad
                             25 	.globl _total_sprites
                             26 	.globl _MainChar
                             27 ;--------------------------------------------------------
                             28 ; special function registers
                             29 ;--------------------------------------------------------
                             30 ;--------------------------------------------------------
                             31 ; ram data
                             32 ;--------------------------------------------------------
                             33 	.area _DATA
   0000                      34 _MainChar::
   0000                      35 	.ds 48
   0030                      36 _joypad_prev_state:
   0030                      37 	.ds 1
   0031                      38 _joypad_curr_state:
   0031                      39 	.ds 1
   0032                      40 _total_sprites::
   0032                      41 	.ds 1
   0033                      42 _GRAVITY:
   0033                      43 	.ds 1
                             44 ;--------------------------------------------------------
                             45 ; absolute external ram data
                             46 ;--------------------------------------------------------
                             47 	.area _DABS (ABS)
                             48 ;--------------------------------------------------------
                             49 ; global & static initialisations
                             50 ;--------------------------------------------------------
                             51 	.area _HOME
                             52 	.area _GSINIT
                             53 	.area _GSFINAL
                             54 	.area _GSINIT
                             55 ;./src/../sprites/char.c:26: unsigned char MainChar[] =
   0000 21r00r00             56 	ld	hl, #_MainChar
   0003 36 00                57 	ld	(hl), #0x00
   0005 21r01r00             58 	ld	hl, #(_MainChar + 0x0001)
   0008 36 00                59 	ld	(hl), #0x00
   000A 21r02r00             60 	ld	hl, #(_MainChar + 0x0002)
   000D 36 7E                61 	ld	(hl), #0x7e
   000F 21r03r00             62 	ld	hl, #(_MainChar + 0x0003)
   0012 36 7E                63 	ld	(hl), #0x7e
   0014 21r04r00             64 	ld	hl, #(_MainChar + 0x0004)
   0017 36 42                65 	ld	(hl), #0x42
   0019 21r05r00             66 	ld	hl, #(_MainChar + 0x0005)
   001C 36 76                67 	ld	(hl), #0x76
   001E 21r06r00             68 	ld	hl, #(_MainChar + 0x0006)
   0021 36 42                69 	ld	(hl), #0x42
   0023 21r07r00             70 	ld	hl, #(_MainChar + 0x0007)
   0026 36 76                71 	ld	(hl), #0x76
   0028 21r08r00             72 	ld	hl, #(_MainChar + 0x0008)
   002B 36 4A                73 	ld	(hl), #0x4a
   002D 21r09r00             74 	ld	hl, #(_MainChar + 0x0009)
   0030 36 4A                75 	ld	(hl), #0x4a
   0032 21r0Ar00             76 	ld	hl, #(_MainChar + 0x000a)
   0035 36 7E                77 	ld	(hl), #0x7e
   0037 21r0Br00             78 	ld	hl, #(_MainChar + 0x000b)
   003A 36 7E                79 	ld	(hl), #0x7e
   003C 21r0Cr00             80 	ld	hl, #(_MainChar + 0x000c)
   003F 36 36                81 	ld	(hl), #0x36
   0041 21r0Dr00             82 	ld	hl, #(_MainChar + 0x000d)
   0044 36 36                83 	ld	(hl), #0x36
   0046 21r0Er00             84 	ld	hl, #(_MainChar + 0x000e)
   0049 36 36                85 	ld	(hl), #0x36
   004B 21r0Fr00             86 	ld	hl, #(_MainChar + 0x000f)
   004E 36 36                87 	ld	(hl), #0x36
   0050 21r10r00             88 	ld	hl, #(_MainChar + 0x0010)
   0053 36 00                89 	ld	(hl), #0x00
   0055 21r11r00             90 	ld	hl, #(_MainChar + 0x0011)
   0058 36 00                91 	ld	(hl), #0x00
   005A 21r12r00             92 	ld	hl, #(_MainChar + 0x0012)
   005D 36 7E                93 	ld	(hl), #0x7e
   005F 21r13r00             94 	ld	hl, #(_MainChar + 0x0013)
   0062 36 7E                95 	ld	(hl), #0x7e
   0064 21r14r00             96 	ld	hl, #(_MainChar + 0x0014)
   0067 36 42                97 	ld	(hl), #0x42
   0069 21r15r00             98 	ld	hl, #(_MainChar + 0x0015)
   006C 36 76                99 	ld	(hl), #0x76
   006E 21r16r00            100 	ld	hl, #(_MainChar + 0x0016)
   0071 36 42               101 	ld	(hl), #0x42
   0073 21r17r00            102 	ld	hl, #(_MainChar + 0x0017)
   0076 36 76               103 	ld	(hl), #0x76
   0078 21r18r00            104 	ld	hl, #(_MainChar + 0x0018)
   007B 36 4A               105 	ld	(hl), #0x4a
   007D 21r19r00            106 	ld	hl, #(_MainChar + 0x0019)
   0080 36 4A               107 	ld	(hl), #0x4a
   0082 21r1Ar00            108 	ld	hl, #(_MainChar + 0x001a)
   0085 36 7E               109 	ld	(hl), #0x7e
   0087 21r1Br00            110 	ld	hl, #(_MainChar + 0x001b)
   008A 36 7E               111 	ld	(hl), #0x7e
   008C 21r1Cr00            112 	ld	hl, #(_MainChar + 0x001c)
   008F 36 36               113 	ld	(hl), #0x36
   0091 21r1Dr00            114 	ld	hl, #(_MainChar + 0x001d)
   0094 36 36               115 	ld	(hl), #0x36
   0096 21r1Er00            116 	ld	hl, #(_MainChar + 0x001e)
   0099 36 30               117 	ld	(hl), #0x30
   009B 21r1Fr00            118 	ld	hl, #(_MainChar + 0x001f)
   009E 36 30               119 	ld	(hl), #0x30
   00A0 21r20r00            120 	ld	hl, #(_MainChar + 0x0020)
   00A3 36 00               121 	ld	(hl), #0x00
   00A5 21r21r00            122 	ld	hl, #(_MainChar + 0x0021)
   00A8 36 00               123 	ld	(hl), #0x00
   00AA 21r22r00            124 	ld	hl, #(_MainChar + 0x0022)
   00AD 36 7E               125 	ld	(hl), #0x7e
   00AF 21r23r00            126 	ld	hl, #(_MainChar + 0x0023)
   00B2 36 7E               127 	ld	(hl), #0x7e
   00B4 21r24r00            128 	ld	hl, #(_MainChar + 0x0024)
   00B7 36 42               129 	ld	(hl), #0x42
   00B9 21r25r00            130 	ld	hl, #(_MainChar + 0x0025)
   00BC 36 76               131 	ld	(hl), #0x76
   00BE 21r26r00            132 	ld	hl, #(_MainChar + 0x0026)
   00C1 36 42               133 	ld	(hl), #0x42
   00C3 21r27r00            134 	ld	hl, #(_MainChar + 0x0027)
   00C6 36 76               135 	ld	(hl), #0x76
   00C8 21r28r00            136 	ld	hl, #(_MainChar + 0x0028)
   00CB 36 4A               137 	ld	(hl), #0x4a
   00CD 21r29r00            138 	ld	hl, #(_MainChar + 0x0029)
   00D0 36 4A               139 	ld	(hl), #0x4a
   00D2 21r2Ar00            140 	ld	hl, #(_MainChar + 0x002a)
   00D5 36 7E               141 	ld	(hl), #0x7e
   00D7 21r2Br00            142 	ld	hl, #(_MainChar + 0x002b)
   00DA 36 7E               143 	ld	(hl), #0x7e
   00DC 21r2Cr00            144 	ld	hl, #(_MainChar + 0x002c)
   00DF 36 36               145 	ld	(hl), #0x36
   00E1 21r2Dr00            146 	ld	hl, #(_MainChar + 0x002d)
   00E4 36 36               147 	ld	(hl), #0x36
   00E6 21r2Er00            148 	ld	hl, #(_MainChar + 0x002e)
   00E9 36 06               149 	ld	(hl), #0x06
   00EB 21r2Fr00            150 	ld	hl, #(_MainChar + 0x002f)
   00EE 36 06               151 	ld	(hl), #0x06
                            152 ;./src/main.c:8: UINT8 total_sprites = -1;
   00F0 21r32r00            153 	ld	hl, #_total_sprites
   00F3 36 FF               154 	ld	(hl), #0xff
                            155 ;./src/main.c:13: static UINT8 GRAVITY = 9;
   00F5 21r33r00            156 	ld	hl, #_GRAVITY
   00F8 36 09               157 	ld	(hl), #0x09
                            158 ;--------------------------------------------------------
                            159 ; Home
                            160 ;--------------------------------------------------------
                            161 	.area _HOME
                            162 	.area _HOME
                            163 ;--------------------------------------------------------
                            164 ; code
                            165 ;--------------------------------------------------------
                            166 	.area _CODE
                            167 ;./src/../src/input.c:75: static void joypad_wait (UINT8 buttons)
                            168 ;	---------------------------------
                            169 ; Function joypad_wait
                            170 ; ---------------------------------
   0000                     171 _joypad_wait:
                            172 ;./src/../src/input.c:77: while (true) {
   0000                     173 00108$:
                            174 ;./src/../src/input.c:78: UPDATE_JOYPAD_STATE;
   0000 E5                  175 	push	hl
   0001 21r31r00            176 	ld	hl, #_joypad_curr_state
   0004 7E                  177 	ld	a, (hl)
   0005 21r30r00            178 	ld	hl, #_joypad_prev_state
   0008 77                  179 	ld	(hl), a
   0009 E1                  180 	pop	hl
   000A CDr00r00            181 	call	_joypad
   000D 21r31r00            182 	ld	hl, #_joypad_curr_state
   0010 73                  183 	ld	(hl), e
                            184 ;./src/../src/input.c:79: if (JOYPAD_PRESSED(buttons)) {
   0011 21r30r00            185 	ld	hl, #_joypad_prev_state
   0014 7E                  186 	ld	a, (hl)
   0015 F8 02               187 	ldhl	sp,	#2
   0017 A6                  188 	and	a,(hl)
   0018 20 08               189 	jr	NZ,00105$
   001A 21r31r00            190 	ld	hl, #_joypad_curr_state
   001D 7E                  191 	ld	a, (hl)
   001E F8 02               192 	ldhl	sp,	#2
   0020 A6                  193 	and	a,(hl)
   0021 C0                  194 	ret	NZ
                            195 ;./src/../src/input.c:80: break;
   0022                     196 00105$:
                            197 ;./src/../src/input.c:82: wait_vbl_done();
   0022 CDr00r00            198 	call	_wait_vbl_done
   0025 18 D9               199 	jr	00108$
                            200 ;./src/../src/input.c:84: }
   0027 C9                  201 	ret
                            202 ;./src/../src/input.c:87: static BOOLEAN joypad_waittime (UINT8 buttons, UINT8 timeout)
                            203 ;	---------------------------------
                            204 ; Function joypad_waittime
                            205 ; ---------------------------------
   0028                     206 _joypad_waittime:
                            207 ;./src/../src/input.c:89: for (UINT8 i = 0; i < timeout; ++i) {
   0028 0E 00               208 	ld	c, #0x00
   002A                     209 00109$:
   002A 79                  210 	ld	a, c
   002B F8 03               211 	ldhl	sp,	#3
   002D 96                  212 	sub	a, (hl)
   002E 30 31               213 	jr	NC,00107$
                            214 ;./src/../src/input.c:90: UPDATE_JOYPAD_STATE;
   0030 E5                  215 	push	hl
   0031 21r31r00            216 	ld	hl, #_joypad_curr_state
   0034 7E                  217 	ld	a, (hl)
   0035 21r30r00            218 	ld	hl, #_joypad_prev_state
   0038 77                  219 	ld	(hl), a
   0039 E1                  220 	pop	hl
   003A C5                  221 	push	bc
   003B CDr00r00            222 	call	_joypad
   003E C1                  223 	pop	bc
   003F 21r31r00            224 	ld	hl, #_joypad_curr_state
   0042 73                  225 	ld	(hl), e
                            226 ;./src/../src/input.c:91: if (JOYPAD_PRESSED(buttons)) {
   0043 21r30r00            227 	ld	hl, #_joypad_prev_state
   0046 7E                  228 	ld	a, (hl)
   0047 F8 02               229 	ldhl	sp,	#2
   0049 A6                  230 	and	a,(hl)
   004A 20 0C               231 	jr	NZ,00105$
   004C 21r31r00            232 	ld	hl, #_joypad_curr_state
   004F 7E                  233 	ld	a, (hl)
   0050 F8 02               234 	ldhl	sp,	#2
   0052 A6                  235 	and	a,(hl)
   0053 28 03               236 	jr	Z,00105$
                            237 ;./src/../src/input.c:92: return TRUE;
   0055 1E 01               238 	ld	e, #0x01
   0057 C9                  239 	ret
   0058                     240 00105$:
                            241 ;./src/../src/input.c:94: wait_vbl_done();
   0058 C5                  242 	push	bc
   0059 CDr00r00            243 	call	_wait_vbl_done
   005C C1                  244 	pop	bc
                            245 ;./src/../src/input.c:89: for (UINT8 i = 0; i < timeout; ++i) {
   005D 0C                  246 	inc	c
   005E C3r2Ar00            247 	jp	00109$
   0061                     248 00107$:
                            249 ;./src/../src/input.c:96: return false;
   0061 1E 00               250 	ld	e, #0x00
                            251 ;./src/../src/input.c:97: }
   0063 C9                  252 	ret
                            253 ;./src/main.c:9: UINT8 create_sprite_num(){
                            254 ;	---------------------------------
                            255 ; Function create_sprite_num
                            256 ; ---------------------------------
   0064                     257 _create_sprite_num::
                            258 ;./src/main.c:10: ++total_sprites;
   0064 21r32r00            259 	ld	hl, #_total_sprites
   0067 34                  260 	inc	(hl)
                            261 ;./src/main.c:11: return total_sprites;
   0068 5E                  262 	ld	e, (hl)
                            263 ;./src/main.c:12: }
   0069 C9                  264 	ret
                            265 ;./src/main.c:14: void gravity(){
                            266 ;	---------------------------------
                            267 ; Function gravity
                            268 ; ---------------------------------
   006A                     269 _gravity::
                            270 ;./src/main.c:16: }
   006A C9                  271 	ret
                            272 ;./src/main.c:36: void next_animation(MSprite* sprite){
                            273 ;	---------------------------------
                            274 ; Function next_animation
                            275 ; ---------------------------------
   006B                     276 _next_animation::
   006B E8 FB               277 	add	sp, #-5
                            278 ;./src/main.c:37: ++(sprite->animation_index);
   006D F8 07               279 	ldhl	sp,	#7
   006F 2A                  280 	ld	a, (hl+)
   0070 5E                  281 	ld	e, (hl)
   0071 F8 00               282 	ldhl	sp,	#0
   0073 22                  283 	ld	(hl+), a
   0074 73                  284 	ld	(hl), e
   0075 C1                  285 	pop	bc
   0076 C5                  286 	push	bc
   0077 03                  287 	inc	bc
   0078 03                  288 	inc	bc
   0079 0A                  289 	ld	a, (bc)
   007A 3C                  290 	inc	a
   007B 23                  291 	inc	hl
   007C 77                  292 	ld	(hl),a
   007D 02                  293 	ld	(bc), a
                            294 ;./src/main.c:38: if(sprite->animation_index == sprite->max_animations){
   007E D1                  295 	pop	de
   007F D5                  296 	push	de
   0080 21 03 00            297 	ld	hl, #0x0003
   0083 19                  298 	add	hl, de
   0084 7D                  299 	ld	a, l
   0085 54                  300 	ld	d, h
   0086 F8 03               301 	ldhl	sp,	#3
   0088 22                  302 	ld	(hl+), a
   0089 72                  303 	ld	(hl), d
   008A 2B                  304 	dec	hl
   008B 5E                  305 	ld	e, (hl)
   008C 23                  306 	inc	hl
   008D 56                  307 	ld	d, (hl)
   008E 1A                  308 	ld	a,(de)
   008F 32                  309 	ld	(hl-), a
   0090 2B                  310 	dec	hl
   0091 2A                  311 	ld	a, (hl+)
   0092 23                  312 	inc	hl
   0093 96                  313 	sub	a, (hl)
   0094 20 02               314 	jr	NZ,00102$
                            315 ;./src/main.c:39: sprite->animation_index = 0;
   0096 AF                  316 	xor	a, a
   0097 02                  317 	ld	(bc), a
   0098                     318 00102$:
                            319 ;./src/main.c:41: set_sprite_tile(sprite->sprite_number, sprite->animation_index);
   0098 0A                  320 	ld	a, (bc)
   0099 47                  321 	ld	b, a
   009A D1                  322 	pop	de
   009B D5                  323 	push	de
   009C 21 04 00            324 	ld	hl, #0x0004
   009F 19                  325 	add	hl, de
   00A0 4D                  326 	ld	c,l
   00A1 7C                  327 	ld	a,h
   00A2 7E                  328 	ld	a, (hl)
   00A3 C5                  329 	push	bc
   00A4 33                  330 	inc	sp
   00A5 F5                  331 	push	af
   00A6 33                  332 	inc	sp
   00A7 CDr00r00            333 	call	_set_sprite_tile
   00AA E8 02               334 	add	sp, #2
                            335 ;./src/main.c:42: }
   00AC E8 05               336 	add	sp, #5
   00AE C9                  337 	ret
                            338 ;./src/main.c:44: void move_player(MPlayer* player, UINT8 move, bool is_x){
                            339 ;	---------------------------------
                            340 ; Function move_player
                            341 ; ---------------------------------
   00AF                     342 _move_player::
   00AF E8 FC               343 	add	sp, #-4
                            344 ;./src/main.c:45: player->moved = true;
   00B1 F8 06               345 	ldhl	sp,	#6
   00B3 2A                  346 	ld	a, (hl+)
   00B4 5E                  347 	ld	e, (hl)
   00B5 F8 00               348 	ldhl	sp,	#0
   00B7 22                  349 	ld	(hl+), a
   00B8 73                  350 	ld	(hl), e
   00B9 D1                  351 	pop	de
   00BA D5                  352 	push	de
   00BB 21 06 00            353 	ld	hl, #0x0006
   00BE 19                  354 	add	hl, de
   00BF 4D                  355 	ld	c,l
   00C0 7C                  356 	ld	a,h
   00C1 36 01               357 	ld	(hl), #0x01
                            358 ;./src/main.c:48: scroll_sprite(player->sprite.sprite_number, move, 0);        
   00C3 D1                  359 	pop	de
   00C4 D5                  360 	push	de
   00C5 21 04 00            361 	ld	hl, #0x0004
   00C8 19                  362 	add	hl, de
   00C9 7D                  363 	ld	a, l
   00CA 54                  364 	ld	d, h
   00CB F8 02               365 	ldhl	sp,	#2
   00CD 22                  366 	ld	(hl+), a
   00CE 72                  367 	ld	(hl), d
                            368 ;./src/main.c:46: if(is_x == true){
   00CF F8 09               369 	ldhl	sp,	#9
   00D1 CB 46               370 	bit	0, (hl)
   00D3 28 21               371 	jr	Z,00102$
                            372 ;./src/main.c:47: player->sprite.x += move;
   00D5 D1                  373 	pop	de
   00D6 D5                  374 	push	de
   00D7 1A                  375 	ld	a,(de)
   00D8 2B                  376 	dec	hl
   00D9 86                  377 	add	a, (hl)
   00DA 4F                  378 	ld	c, a
   00DB E1                  379 	pop	hl
   00DC E5                  380 	push	hl
   00DD 71                  381 	ld	(hl), c
                            382 ;./src/main.c:48: scroll_sprite(player->sprite.sprite_number, move, 0);        
   00DE F8 02               383 	ldhl	sp,#(3 - 1)
   00E0 5E                  384 	ld	e, (hl)
   00E1 23                  385 	inc	hl
   00E2 56                  386 	ld	d, (hl)
   00E3 1A                  387 	ld	a,(de)
   00E4 47                  388 	ld	b, a
   00E5 AF                  389 	xor	a, a
   00E6 F5                  390 	push	af
   00E7 33                  391 	inc	sp
   00E8 F8 09               392 	ldhl	sp,	#9
   00EA 7E                  393 	ld	a, (hl)
   00EB F5                  394 	push	af
   00EC 33                  395 	inc	sp
   00ED C5                  396 	push	bc
   00EE 33                  397 	inc	sp
   00EF CDr00r00            398 	call	_scroll_sprite
   00F2 E8 03               399 	add	sp, #3
   00F4 18 1E               400 	jr	00103$
   00F6                     401 00102$:
                            402 ;./src/main.c:51: player->sprite.y += move;
   00F6 C1                  403 	pop	bc
   00F7 C5                  404 	push	bc
   00F8 03                  405 	inc	bc
   00F9 0A                  406 	ld	a, (bc)
   00FA F8 08               407 	ldhl	sp,	#8
   00FC 86                  408 	add	a, (hl)
   00FD 02                  409 	ld	(bc), a
                            410 ;./src/main.c:52: scroll_sprite(player->sprite.sprite_number, 0, move);
   00FE F8 02               411 	ldhl	sp,#(3 - 1)
   0100 5E                  412 	ld	e, (hl)
   0101 23                  413 	inc	hl
   0102 56                  414 	ld	d, (hl)
   0103 1A                  415 	ld	a,(de)
   0104 47                  416 	ld	b, a
   0105 F8 08               417 	ldhl	sp,	#8
   0107 7E                  418 	ld	a, (hl)
   0108 F5                  419 	push	af
   0109 33                  420 	inc	sp
   010A AF                  421 	xor	a, a
   010B F5                  422 	push	af
   010C 33                  423 	inc	sp
   010D C5                  424 	push	bc
   010E 33                  425 	inc	sp
   010F CDr00r00            426 	call	_scroll_sprite
   0112 E8 03               427 	add	sp, #3
   0114                     428 00103$:
                            429 ;./src/main.c:54: next_animation(&(player->sprite));
   0114 E1                  430 	pop	hl
   0115 E5                  431 	push	hl
   0116 E5                  432 	push	hl
   0117 CDr6Br00            433 	call	_next_animation
   011A E8 02               434 	add	sp, #2
                            435 ;./src/main.c:55: }
   011C E8 04               436 	add	sp, #4
   011E C9                  437 	ret
                            438 ;./src/main.c:57: void check_collision_with_wall(){
                            439 ;	---------------------------------
                            440 ; Function check_collision_with_wall
                            441 ; ---------------------------------
   011F                     442 _check_collision_with_wall::
                            443 ;./src/main.c:59: }
   011F C9                  444 	ret
                            445 ;./src/main.c:61: void create_level(){
                            446 ;	---------------------------------
                            447 ; Function create_level
                            448 ; ---------------------------------
   0120                     449 _create_level::
                            450 ;./src/main.c:63: }
   0120 C9                  451 	ret
                            452 ;./src/main.c:65: void player_movement(MPlayer* player)
                            453 ;	---------------------------------
                            454 ; Function player_movement
                            455 ; ---------------------------------
   0121                     456 _player_movement::
   0121 E8 F8               457 	add	sp, #-8
                            458 ;./src/main.c:67: if(!(player->moved)){
   0123 F8 0A               459 	ldhl	sp,	#10
   0125 2A                  460 	ld	a, (hl+)
   0126 5E                  461 	ld	e, (hl)
   0127 F8 00               462 	ldhl	sp,	#0
   0129 22                  463 	ld	(hl+), a
   012A 73                  464 	ld	(hl), e
   012B D1                  465 	pop	de
   012C D5                  466 	push	de
   012D 21 06 00            467 	ld	hl, #0x0006
   0130 19                  468 	add	hl, de
   0131 7D                  469 	ld	a, l
   0132 54                  470 	ld	d, h
   0133 F8 02               471 	ldhl	sp,	#2
   0135 22                  472 	ld	(hl+), a
   0136 72                  473 	ld	(hl), d
   0137 2B                  474 	dec	hl
   0138 5E                  475 	ld	e, (hl)
   0139 23                  476 	inc	hl
   013A 56                  477 	ld	d, (hl)
   013B 1A                  478 	ld	a,(de)
   013C CB 47               479 	bit	0, a
   013E C2rC9r01            480 	jp	NZ, 00112$
                            481 ;./src/main.c:68: if(JOYPAD_DOWN_PAD_L){
   0141 CDr00r00            482 	call	_joypad
   0144 F8 07               483 	ldhl	sp,	#7
   0146 73                  484 	ld	(hl), e
                            485 ;./src/main.c:69: move_player(player, -player->sprite.speed, true);
   0147 D1                  486 	pop	de
   0148 D5                  487 	push	de
   0149 21 05 00            488 	ld	hl, #0x0005
   014C 19                  489 	add	hl, de
   014D 4D                  490 	ld	c, l
   014E 44                  491 	ld	b, h
                            492 ;./src/main.c:68: if(JOYPAD_DOWN_PAD_L){
   014F F8 07               493 	ldhl	sp,	#7
   0151 CB 4E               494 	bit	1, (hl)
   0153 28 1D               495 	jr	Z,00104$
                            496 ;./src/main.c:69: move_player(player, -player->sprite.speed, true);
   0155 0A                  497 	ld	a, (bc)
   0156 F8 07               498 	ldhl	sp,	#7
   0158 77                  499 	ld	(hl), a
   0159 AF                  500 	xor	a, a
   015A 96                  501 	sub	a, (hl)
   015B 77                  502 	ld	(hl), a
   015C C5                  503 	push	bc
   015D 3E 01               504 	ld	a, #0x01
   015F F5                  505 	push	af
   0160 33                  506 	inc	sp
   0161 7E                  507 	ld	a, (hl)
   0162 F5                  508 	push	af
   0163 33                  509 	inc	sp
   0164 F8 04               510 	ldhl	sp,	#4
   0166 2A                  511 	ld	a, (hl+)
   0167 66                  512 	ld	h, (hl)
   0168 6F                  513 	ld	l, a
   0169 E5                  514 	push	hl
   016A CDrAFr00            515 	call	_move_player
   016D E8 04               516 	add	sp, #4
   016F C1                  517 	pop	bc
   0170 18 1E               518 	jr	00105$
   0172                     519 00104$:
                            520 ;./src/main.c:71: else if(JOYPAD_DOWN_PAD_R){
   0172 C5                  521 	push	bc
   0173 CDr00r00            522 	call	_joypad
   0176 7B                  523 	ld	a, e
   0177 C1                  524 	pop	bc
   0178 0F                  525 	rrca
   0179 30 15               526 	jr	NC,00105$
                            527 ;./src/main.c:72: move_player(player, player->sprite.speed, true);
   017B 0A                  528 	ld	a, (bc)
   017C 57                  529 	ld	d, a
   017D C5                  530 	push	bc
   017E 3E 01               531 	ld	a, #0x01
   0180 F5                  532 	push	af
   0181 33                  533 	inc	sp
   0182 D5                  534 	push	de
   0183 33                  535 	inc	sp
   0184 F8 04               536 	ldhl	sp,	#4
   0186 2A                  537 	ld	a, (hl+)
   0187 66                  538 	ld	h, (hl)
   0188 6F                  539 	ld	l, a
   0189 E5                  540 	push	hl
   018A CDrAFr00            541 	call	_move_player
   018D E8 04               542 	add	sp, #4
   018F C1                  543 	pop	bc
   0190                     544 00105$:
                            545 ;./src/main.c:74: if(JOYPAD_DOWN_PAD_U){
   0190 C5                  546 	push	bc
   0191 CDr00r00            547 	call	_joypad
   0194 C1                  548 	pop	bc
   0195 CB 53               549 	bit	2, e
   0197 28 16               550 	jr	Z,00109$
                            551 ;./src/main.c:75: move_player(player, -player->sprite.speed, false);
   0199 0A                  552 	ld	a, (bc)
   019A 4F                  553 	ld	c, a
   019B AF                  554 	xor	a, a
   019C 91                  555 	sub	a, c
   019D 47                  556 	ld	b, a
   019E AF                  557 	xor	a, a
   019F F5                  558 	push	af
   01A0 33                  559 	inc	sp
   01A1 C5                  560 	push	bc
   01A2 33                  561 	inc	sp
   01A3 C1                  562 	pop	bc
   01A4 E1                  563 	pop	hl
   01A5 E5                  564 	push	hl
   01A6 C5                  565 	push	bc
   01A7 E5                  566 	push	hl
   01A8 CDrAFr00            567 	call	_move_player
   01AB E8 04               568 	add	sp, #4
   01AD 18 1A               569 	jr	00112$
   01AF                     570 00109$:
                            571 ;./src/main.c:77: else if(JOYPAD_DOWN_PAD_D){
   01AF C5                  572 	push	bc
   01B0 CDr00r00            573 	call	_joypad
   01B3 C1                  574 	pop	bc
   01B4 CB 5B               575 	bit	3, e
   01B6 28 11               576 	jr	Z,00112$
                            577 ;./src/main.c:78: move_player(player, player->sprite.speed, false);
   01B8 0A                  578 	ld	a, (bc)
   01B9 47                  579 	ld	b, a
   01BA AF                  580 	xor	a, a
   01BB F5                  581 	push	af
   01BC 33                  582 	inc	sp
   01BD C5                  583 	push	bc
   01BE 33                  584 	inc	sp
   01BF C1                  585 	pop	bc
   01C0 E1                  586 	pop	hl
   01C1 E5                  587 	push	hl
   01C2 C5                  588 	push	bc
   01C3 E5                  589 	push	hl
   01C4 CDrAFr00            590 	call	_move_player
   01C7 E8 04               591 	add	sp, #4
   01C9                     592 00112$:
                            593 ;./src/main.c:81: if(player->movement_time > player->movement_delay){
   01C9 D1                  594 	pop	de
   01CA D5                  595 	push	de
   01CB 21 08 00            596 	ld	hl, #0x0008
   01CE 19                  597 	add	hl, de
   01CF 7D                  598 	ld	a, l
   01D0 54                  599 	ld	d, h
   01D1 F8 04               600 	ldhl	sp,	#4
   01D3 22                  601 	ld	(hl+), a
   01D4 72                  602 	ld	(hl), d
   01D5 2B                  603 	dec	hl
   01D6 5E                  604 	ld	e, (hl)
   01D7 23                  605 	inc	hl
   01D8 56                  606 	ld	d, (hl)
   01D9 1A                  607 	ld	a,(de)
   01DA 23                  608 	inc	hl
   01DB 22                  609 	ld	(hl+), a
   01DC 13                  610 	inc	de
   01DD 1A                  611 	ld	a, (de)
   01DE 77                  612 	ld	(hl), a
   01DF D1                  613 	pop	de
   01E0 D5                  614 	push	de
   01E1 21 07 00            615 	ld	hl, #0x0007
   01E4 19                  616 	add	hl, de
   01E5 4D                  617 	ld	c,l
   01E6 7C                  618 	ld	a,h
   01E7 4E                  619 	ld	c, (hl)
   01E8 06 00               620 	ld	b, #0x00
   01EA F8 06               621 	ldhl	sp,	#6
   01EC 79                  622 	ld	a, c
   01ED 96                  623 	sub	a, (hl)
   01EE 23                  624 	inc	hl
   01EF 78                  625 	ld	a, b
   01F0 9E                  626 	sbc	a, (hl)
   01F1 30 0E               627 	jr	NC,00114$
                            628 ;./src/main.c:82: player->movement_time = 0;
   01F3 F8 04               629 	ldhl	sp,	#4
   01F5 2A                  630 	ld	a, (hl+)
   01F6 66                  631 	ld	h, (hl)
   01F7 6F                  632 	ld	l, a
   01F8 AF                  633 	xor	a, a
   01F9 22                  634 	ld	(hl+), a
   01FA 77                  635 	ld	(hl), a
                            636 ;./src/main.c:83: player->moved = false;
   01FB C1                  637 	pop	bc
   01FC E1                  638 	pop	hl
   01FD E5                  639 	push	hl
   01FE C5                  640 	push	bc
   01FF 36 00               641 	ld	(hl), #0x00
   0201                     642 00114$:
                            643 ;./src/main.c:86: ++(player->movement_time);   
   0201 F8 04               644 	ldhl	sp,#(5 - 1)
   0203 5E                  645 	ld	e, (hl)
   0204 23                  646 	inc	hl
   0205 56                  647 	ld	d, (hl)
   0206 1A                  648 	ld	a,(de)
   0207 4F                  649 	ld	c, a
   0208 13                  650 	inc	de
   0209 1A                  651 	ld	a,(de)
   020A 47                  652 	ld	b, a
   020B 03                  653 	inc	bc
   020C 2B                  654 	dec	hl
   020D 2A                  655 	ld	a, (hl+)
   020E 66                  656 	ld	h, (hl)
   020F 6F                  657 	ld	l, a
   0210 71                  658 	ld	(hl), c
   0211 23                  659 	inc	hl
   0212 70                  660 	ld	(hl), b
                            661 ;./src/main.c:87: }
   0213 E8 08               662 	add	sp, #8
   0215 C9                  663 	ret
                            664 ;./src/main.c:89: void main()
                            665 ;	---------------------------------
                            666 ; Function main
                            667 ; ---------------------------------
   0216                     668 _main::
   0216 E8 F2               669 	add	sp, #-14
                            670 ;./src/main.c:91: UPDATE_JOYPAD_STATE;
   0218 E5                  671 	push	hl
   0219 21r31r00            672 	ld	hl, #_joypad_curr_state
   021C 7E                  673 	ld	a, (hl)
   021D 21r30r00            674 	ld	hl, #_joypad_prev_state
   0220 77                  675 	ld	(hl), a
   0221 E1                  676 	pop	hl
   0222 CDr00r00            677 	call	_joypad
   0225 21r31r00            678 	ld	hl, #_joypad_curr_state
   0228 73                  679 	ld	(hl), e
                            680 ;./src/main.c:93: MPlayer player = {{88, 78, 0, 3, 0, 5}, false, 60, 0};
   0229 F8 00               681 	ldhl	sp,	#0
   022B 7D                  682 	ld	a, l
   022C 54                  683 	ld	d, h
   022D F8 0C               684 	ldhl	sp,	#12
   022F 22                  685 	ld	(hl+), a
   0230 72                  686 	ld	(hl), d
   0231 2B                  687 	dec	hl
   0232 2A                  688 	ld	a, (hl+)
   0233 66                  689 	ld	h, (hl)
   0234 6F                  690 	ld	l, a
   0235 36 58               691 	ld	(hl), #0x58
   0237 F8 0C               692 	ldhl	sp,#(13 - 1)
   0239 4E                  693 	ld	c, (hl)
   023A 23                  694 	inc	hl
   023B 46                  695 	ld	b, (hl)
   023C 03                  696 	inc	bc
   023D 3E 4E               697 	ld	a, #0x4e
   023F 02                  698 	ld	(bc), a
   0240 2B                  699 	dec	hl
   0241 4E                  700 	ld	c, (hl)
   0242 23                  701 	inc	hl
   0243 46                  702 	ld	b, (hl)
   0244 03                  703 	inc	bc
   0245 03                  704 	inc	bc
   0246 AF                  705 	xor	a, a
   0247 02                  706 	ld	(bc), a
   0248 2B                  707 	dec	hl
   0249 4E                  708 	ld	c, (hl)
   024A 23                  709 	inc	hl
   024B 46                  710 	ld	b, (hl)
   024C 03                  711 	inc	bc
   024D 03                  712 	inc	bc
   024E 03                  713 	inc	bc
   024F 3E 03               714 	ld	a, #0x03
   0251 02                  715 	ld	(bc), a
   0252 2B                  716 	dec	hl
   0253 5E                  717 	ld	e, (hl)
   0254 23                  718 	inc	hl
   0255 56                  719 	ld	d, (hl)
   0256 21 04 00            720 	ld	hl, #0x0004
   0259 19                  721 	add	hl, de
   025A 4D                  722 	ld	c, l
   025B 44                  723 	ld	b, h
   025C AF                  724 	xor	a, a
   025D 02                  725 	ld	(bc), a
   025E F8 0C               726 	ldhl	sp,#(13 - 1)
   0260 5E                  727 	ld	e, (hl)
   0261 23                  728 	inc	hl
   0262 56                  729 	ld	d, (hl)
   0263 21 05 00            730 	ld	hl, #0x0005
   0266 19                  731 	add	hl, de
   0267 4D                  732 	ld	c,l
   0268 7C                  733 	ld	a,h
   0269 36 05               734 	ld	(hl), #0x05
   026B F8 00               735 	ldhl	sp,	#0
   026D 7D                  736 	ld	a, l
   026E 54                  737 	ld	d, h
   026F F8 0A               738 	ldhl	sp,	#10
   0271 22                  739 	ld	(hl+), a
   0272 72                  740 	ld	(hl), d
   0273 2B                  741 	dec	hl
   0274 5E                  742 	ld	e, (hl)
   0275 23                  743 	inc	hl
   0276 56                  744 	ld	d, (hl)
   0277 21 06 00            745 	ld	hl, #0x0006
   027A 19                  746 	add	hl, de
   027B 4D                  747 	ld	c, l
   027C 44                  748 	ld	b, h
   027D AF                  749 	xor	a, a
   027E 02                  750 	ld	(bc), a
   027F F8 0A               751 	ldhl	sp,#(11 - 1)
   0281 5E                  752 	ld	e, (hl)
   0282 23                  753 	inc	hl
   0283 56                  754 	ld	d, (hl)
   0284 21 07 00            755 	ld	hl, #0x0007
   0287 19                  756 	add	hl, de
   0288 4D                  757 	ld	c,l
   0289 7C                  758 	ld	a,h
   028A 36 3C               759 	ld	(hl), #0x3c
   028C F8 0A               760 	ldhl	sp,#(11 - 1)
   028E 5E                  761 	ld	e, (hl)
   028F 23                  762 	inc	hl
   0290 56                  763 	ld	d, (hl)
   0291 21 08 00            764 	ld	hl, #0x0008
   0294 19                  765 	add	hl, de
   0295 4D                  766 	ld	c, l
   0296 44                  767 	ld	b, h
   0297 AF                  768 	xor	a, a
   0298 02                  769 	ld	(bc), a
   0299 03                  770 	inc	bc
   029A 02                  771 	ld	(bc), a
                            772 ;./src/main.c:95: set_sprite_data(player.sprite.sprite_number, player.sprite.max_animations, MainChar);
   029B F8 0A               773 	ldhl	sp,#(11 - 1)
   029D 4E                  774 	ld	c, (hl)
   029E 23                  775 	inc	hl
   029F 46                  776 	ld	b, (hl)
   02A0 03                  777 	inc	bc
   02A1 03                  778 	inc	bc
   02A2 03                  779 	inc	bc
   02A3 0A                  780 	ld	a, (bc)
   02A4 47                  781 	ld	b, a
   02A5 2B                  782 	dec	hl
   02A6 5E                  783 	ld	e, (hl)
   02A7 23                  784 	inc	hl
   02A8 56                  785 	ld	d, (hl)
   02A9 21 04 00            786 	ld	hl, #0x0004
   02AC 19                  787 	add	hl, de
   02AD 7D                  788 	ld	a, l
   02AE 54                  789 	ld	d, h
   02AF F8 0C               790 	ldhl	sp,	#12
   02B1 22                  791 	ld	(hl+), a
   02B2 72                  792 	ld	(hl), d
   02B3 2B                  793 	dec	hl
   02B4 5E                  794 	ld	e, (hl)
   02B5 23                  795 	inc	hl
   02B6 56                  796 	ld	d, (hl)
   02B7 1A                  797 	ld	a,(de)
   02B8 4F                  798 	ld	c, a
   02B9 21r00r00            799 	ld	hl, #_MainChar
   02BC E5                  800 	push	hl
   02BD C5                  801 	push	bc
   02BE 33                  802 	inc	sp
   02BF 79                  803 	ld	a, c
   02C0 F5                  804 	push	af
   02C1 33                  805 	inc	sp
   02C2 CDr00r00            806 	call	_set_sprite_data
   02C5 E8 04               807 	add	sp, #4
                            808 ;./src/main.c:96: set_sprite_tile(player.sprite.sprite_number, player.sprite.animation_index);
   02C7 F8 0A               809 	ldhl	sp,#(11 - 1)
   02C9 4E                  810 	ld	c, (hl)
   02CA 23                  811 	inc	hl
   02CB 46                  812 	ld	b, (hl)
   02CC 03                  813 	inc	bc
   02CD 03                  814 	inc	bc
   02CE 0A                  815 	ld	a, (bc)
   02CF 47                  816 	ld	b, a
   02D0 23                  817 	inc	hl
   02D1 5E                  818 	ld	e, (hl)
   02D2 23                  819 	inc	hl
   02D3 56                  820 	ld	d, (hl)
   02D4 1A                  821 	ld	a,(de)
   02D5 C5                  822 	push	bc
   02D6 33                  823 	inc	sp
   02D7 F5                  824 	push	af
   02D8 33                  825 	inc	sp
   02D9 CDr00r00            826 	call	_set_sprite_tile
   02DC E8 02               827 	add	sp, #2
                            828 ;./src/main.c:97: move_sprite(player.sprite.sprite_number, player.sprite.x, player.sprite.y);
   02DE F8 0A               829 	ldhl	sp,#(11 - 1)
   02E0 4E                  830 	ld	c, (hl)
   02E1 23                  831 	inc	hl
   02E2 46                  832 	ld	b, (hl)
   02E3 03                  833 	inc	bc
   02E4 0A                  834 	ld	a, (bc)
   02E5 47                  835 	ld	b, a
   02E6 2B                  836 	dec	hl
   02E7 5E                  837 	ld	e, (hl)
   02E8 23                  838 	inc	hl
   02E9 56                  839 	ld	d, (hl)
   02EA 1A                  840 	ld	a,(de)
   02EB 23                  841 	inc	hl
   02EC 5E                  842 	ld	e, (hl)
   02ED 23                  843 	inc	hl
   02EE 56                  844 	ld	d, (hl)
   02EF F5                  845 	push	af
   02F0 1A                  846 	ld	a,(de)
   02F1 4F                  847 	ld	c, a
   02F2 F1                  848 	pop	af
   02F3 C5                  849 	push	bc
   02F4 33                  850 	inc	sp
   02F5 F5                  851 	push	af
   02F6 33                  852 	inc	sp
   02F7 79                  853 	ld	a, c
   02F8 F5                  854 	push	af
   02F9 33                  855 	inc	sp
   02FA CDr00r00            856 	call	_move_sprite
   02FD E8 03               857 	add	sp, #3
                            858 ;./src/main.c:98: SHOW_SPRITES;
   02FF F0r00               859 	ldh	a, (_LCDC_REG+0)
   0301 F6 02               860 	or	a, #0x02
   0303 E0r00               861 	ldh	(_LCDC_REG+0),a
                            862 ;./src/main.c:101: while(1){
   0305                     863 00105$:
                            864 ;./src/main.c:102: player_movement(&player);
   0305 F8 0A               865 	ldhl	sp,#(11 - 1)
   0307 4E                  866 	ld	c, (hl)
   0308 23                  867 	inc	hl
   0309 46                  868 	ld	b, (hl)
   030A C5                  869 	push	bc
   030B CDr21r01            870 	call	_player_movement
   030E E8 02               871 	add	sp, #2
   0310 18 F3               872 	jr	00105$
                            873 ;./src/main.c:104: }
   0312 E8 0E               874 	add	sp, #14
   0314 C9                  875 	ret
                            876 	.area _CODE
                            877 	.area _CABS (ABS)
