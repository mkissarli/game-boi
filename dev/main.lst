                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 4.0.0 #11528 (MINGW32)
                              4 ;--------------------------------------------------------
                              5 	.module C__Users_Thief3_AppData_Local_Temp_lcc28401
                              6 	.optsdcc -mgbz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _jump
                             13 	.globl _player_movement
                             14 	.globl _create_level
                             15 	.globl _check_collision_with_wall
                             16 	.globl _update_position
                             17 	.globl _gravity
                             18 	.globl _next_animation
                             19 	.globl _draw
                             20 	.globl _create_sprite_num
                             21 	.globl _move_sprite
                             22 	.globl _set_sprite_tile
                             23 	.globl _set_sprite_data
                             24 	.globl _wait_vbl_done
                             25 	.globl _joypad
                             26 	.globl _gravity_time
                             27 	.globl _sprites
                             28 	.globl _total_sprites
                             29 	.globl _MainChar
                             30 ;--------------------------------------------------------
                             31 ; special function registers
                             32 ;--------------------------------------------------------
                             33 ;--------------------------------------------------------
                             34 ; ram data
                             35 ;--------------------------------------------------------
                             36 	.area _DATA
   0000                      37 _MainChar::
   0000                      38 	.ds 48
   0030                      39 _joypad_prev_state:
   0030                      40 	.ds 1
   0031                      41 _joypad_curr_state:
   0031                      42 	.ds 1
   0032                      43 _total_sprites::
   0032                      44 	.ds 1
   0033                      45 _sprites::
   0033                      46 	.ds 80
   0083                      47 _GRAVITY:
   0083                      48 	.ds 1
   0084                      49 _gravity_time::
   0084                      50 	.ds 1
                             51 ;--------------------------------------------------------
                             52 ; absolute external ram data
                             53 ;--------------------------------------------------------
                             54 	.area _DABS (ABS)
                             55 ;--------------------------------------------------------
                             56 ; global & static initialisations
                             57 ;--------------------------------------------------------
                             58 	.area _HOME
                             59 	.area _GSINIT
                             60 	.area _GSFINAL
                             61 	.area _GSINIT
                             62 ;./src/../sprites/char.c:26: unsigned char MainChar[] =
   0000 21r00r00             63 	ld	hl, #_MainChar
   0003 36 00                64 	ld	(hl), #0x00
   0005 21r01r00             65 	ld	hl, #(_MainChar + 0x0001)
   0008 36 00                66 	ld	(hl), #0x00
   000A 21r02r00             67 	ld	hl, #(_MainChar + 0x0002)
   000D 36 7E                68 	ld	(hl), #0x7e
   000F 21r03r00             69 	ld	hl, #(_MainChar + 0x0003)
   0012 36 7E                70 	ld	(hl), #0x7e
   0014 21r04r00             71 	ld	hl, #(_MainChar + 0x0004)
   0017 36 42                72 	ld	(hl), #0x42
   0019 21r05r00             73 	ld	hl, #(_MainChar + 0x0005)
   001C 36 76                74 	ld	(hl), #0x76
   001E 21r06r00             75 	ld	hl, #(_MainChar + 0x0006)
   0021 36 42                76 	ld	(hl), #0x42
   0023 21r07r00             77 	ld	hl, #(_MainChar + 0x0007)
   0026 36 76                78 	ld	(hl), #0x76
   0028 21r08r00             79 	ld	hl, #(_MainChar + 0x0008)
   002B 36 4A                80 	ld	(hl), #0x4a
   002D 21r09r00             81 	ld	hl, #(_MainChar + 0x0009)
   0030 36 4A                82 	ld	(hl), #0x4a
   0032 21r0Ar00             83 	ld	hl, #(_MainChar + 0x000a)
   0035 36 7E                84 	ld	(hl), #0x7e
   0037 21r0Br00             85 	ld	hl, #(_MainChar + 0x000b)
   003A 36 7E                86 	ld	(hl), #0x7e
   003C 21r0Cr00             87 	ld	hl, #(_MainChar + 0x000c)
   003F 36 36                88 	ld	(hl), #0x36
   0041 21r0Dr00             89 	ld	hl, #(_MainChar + 0x000d)
   0044 36 36                90 	ld	(hl), #0x36
   0046 21r0Er00             91 	ld	hl, #(_MainChar + 0x000e)
   0049 36 36                92 	ld	(hl), #0x36
   004B 21r0Fr00             93 	ld	hl, #(_MainChar + 0x000f)
   004E 36 36                94 	ld	(hl), #0x36
   0050 21r10r00             95 	ld	hl, #(_MainChar + 0x0010)
   0053 36 00                96 	ld	(hl), #0x00
   0055 21r11r00             97 	ld	hl, #(_MainChar + 0x0011)
   0058 36 00                98 	ld	(hl), #0x00
   005A 21r12r00             99 	ld	hl, #(_MainChar + 0x0012)
   005D 36 7E               100 	ld	(hl), #0x7e
   005F 21r13r00            101 	ld	hl, #(_MainChar + 0x0013)
   0062 36 7E               102 	ld	(hl), #0x7e
   0064 21r14r00            103 	ld	hl, #(_MainChar + 0x0014)
   0067 36 42               104 	ld	(hl), #0x42
   0069 21r15r00            105 	ld	hl, #(_MainChar + 0x0015)
   006C 36 76               106 	ld	(hl), #0x76
   006E 21r16r00            107 	ld	hl, #(_MainChar + 0x0016)
   0071 36 42               108 	ld	(hl), #0x42
   0073 21r17r00            109 	ld	hl, #(_MainChar + 0x0017)
   0076 36 76               110 	ld	(hl), #0x76
   0078 21r18r00            111 	ld	hl, #(_MainChar + 0x0018)
   007B 36 4A               112 	ld	(hl), #0x4a
   007D 21r19r00            113 	ld	hl, #(_MainChar + 0x0019)
   0080 36 4A               114 	ld	(hl), #0x4a
   0082 21r1Ar00            115 	ld	hl, #(_MainChar + 0x001a)
   0085 36 7E               116 	ld	(hl), #0x7e
   0087 21r1Br00            117 	ld	hl, #(_MainChar + 0x001b)
   008A 36 7E               118 	ld	(hl), #0x7e
   008C 21r1Cr00            119 	ld	hl, #(_MainChar + 0x001c)
   008F 36 36               120 	ld	(hl), #0x36
   0091 21r1Dr00            121 	ld	hl, #(_MainChar + 0x001d)
   0094 36 36               122 	ld	(hl), #0x36
   0096 21r1Er00            123 	ld	hl, #(_MainChar + 0x001e)
   0099 36 30               124 	ld	(hl), #0x30
   009B 21r1Fr00            125 	ld	hl, #(_MainChar + 0x001f)
   009E 36 30               126 	ld	(hl), #0x30
   00A0 21r20r00            127 	ld	hl, #(_MainChar + 0x0020)
   00A3 36 00               128 	ld	(hl), #0x00
   00A5 21r21r00            129 	ld	hl, #(_MainChar + 0x0021)
   00A8 36 00               130 	ld	(hl), #0x00
   00AA 21r22r00            131 	ld	hl, #(_MainChar + 0x0022)
   00AD 36 7E               132 	ld	(hl), #0x7e
   00AF 21r23r00            133 	ld	hl, #(_MainChar + 0x0023)
   00B2 36 7E               134 	ld	(hl), #0x7e
   00B4 21r24r00            135 	ld	hl, #(_MainChar + 0x0024)
   00B7 36 42               136 	ld	(hl), #0x42
   00B9 21r25r00            137 	ld	hl, #(_MainChar + 0x0025)
   00BC 36 76               138 	ld	(hl), #0x76
   00BE 21r26r00            139 	ld	hl, #(_MainChar + 0x0026)
   00C1 36 42               140 	ld	(hl), #0x42
   00C3 21r27r00            141 	ld	hl, #(_MainChar + 0x0027)
   00C6 36 76               142 	ld	(hl), #0x76
   00C8 21r28r00            143 	ld	hl, #(_MainChar + 0x0028)
   00CB 36 4A               144 	ld	(hl), #0x4a
   00CD 21r29r00            145 	ld	hl, #(_MainChar + 0x0029)
   00D0 36 4A               146 	ld	(hl), #0x4a
   00D2 21r2Ar00            147 	ld	hl, #(_MainChar + 0x002a)
   00D5 36 7E               148 	ld	(hl), #0x7e
   00D7 21r2Br00            149 	ld	hl, #(_MainChar + 0x002b)
   00DA 36 7E               150 	ld	(hl), #0x7e
   00DC 21r2Cr00            151 	ld	hl, #(_MainChar + 0x002c)
   00DF 36 36               152 	ld	(hl), #0x36
   00E1 21r2Dr00            153 	ld	hl, #(_MainChar + 0x002d)
   00E4 36 36               154 	ld	(hl), #0x36
   00E6 21r2Er00            155 	ld	hl, #(_MainChar + 0x002e)
   00E9 36 06               156 	ld	(hl), #0x06
   00EB 21r2Fr00            157 	ld	hl, #(_MainChar + 0x002f)
   00EE 36 06               158 	ld	(hl), #0x06
                            159 ;./src/main.c:8: UINT8 total_sprites = -1;
   00F0 21r32r00            160 	ld	hl, #_total_sprites
   00F3 36 FF               161 	ld	(hl), #0xff
                            162 ;./src/main.c:29: MSprite* sprites[40] = {0};
   00F5 21r33r00            163 	ld	hl, #_sprites
   00F8 AF                  164 	xor	a, a
   00F9 22                  165 	ld	(hl+), a
   00FA 77                  166 	ld	(hl), a
                            167 ;./src/main.c:54: static UINT8 GRAVITY = 2;
   00FB 21r83r00            168 	ld	hl, #_GRAVITY
   00FE 36 02               169 	ld	(hl), #0x02
                            170 ;./src/main.c:55: UINT8 gravity_time = 0;
   0100 21r84r00            171 	ld	hl, #_gravity_time
   0103 36 00               172 	ld	(hl), #0x00
                            173 ;--------------------------------------------------------
                            174 ; Home
                            175 ;--------------------------------------------------------
                            176 	.area _HOME
                            177 	.area _HOME
                            178 ;--------------------------------------------------------
                            179 ; code
                            180 ;--------------------------------------------------------
                            181 	.area _CODE
                            182 ;./src/../src/input.c:75: static void joypad_wait (UINT8 buttons)
                            183 ;	---------------------------------
                            184 ; Function joypad_wait
                            185 ; ---------------------------------
   0000                     186 _joypad_wait:
                            187 ;./src/../src/input.c:77: while (true) {
   0000                     188 00108$:
                            189 ;./src/../src/input.c:78: UPDATE_JOYPAD_STATE;
   0000 E5                  190 	push	hl
   0001 21r31r00            191 	ld	hl, #_joypad_curr_state
   0004 7E                  192 	ld	a, (hl)
   0005 21r30r00            193 	ld	hl, #_joypad_prev_state
   0008 77                  194 	ld	(hl), a
   0009 E1                  195 	pop	hl
   000A CDr00r00            196 	call	_joypad
   000D 21r31r00            197 	ld	hl, #_joypad_curr_state
   0010 73                  198 	ld	(hl), e
                            199 ;./src/../src/input.c:79: if (JOYPAD_PRESSED(buttons)) {
   0011 21r30r00            200 	ld	hl, #_joypad_prev_state
   0014 7E                  201 	ld	a, (hl)
   0015 F8 02               202 	ldhl	sp,	#2
   0017 A6                  203 	and	a,(hl)
   0018 20 08               204 	jr	NZ,00105$
   001A 21r31r00            205 	ld	hl, #_joypad_curr_state
   001D 7E                  206 	ld	a, (hl)
   001E F8 02               207 	ldhl	sp,	#2
   0020 A6                  208 	and	a,(hl)
   0021 C0                  209 	ret	NZ
                            210 ;./src/../src/input.c:80: break;
   0022                     211 00105$:
                            212 ;./src/../src/input.c:82: wait_vbl_done();
   0022 CDr00r00            213 	call	_wait_vbl_done
   0025 18 D9               214 	jr	00108$
                            215 ;./src/../src/input.c:84: }
   0027 C9                  216 	ret
                            217 ;./src/../src/input.c:87: static BOOLEAN joypad_waittime (UINT8 buttons, UINT8 timeout)
                            218 ;	---------------------------------
                            219 ; Function joypad_waittime
                            220 ; ---------------------------------
   0028                     221 _joypad_waittime:
                            222 ;./src/../src/input.c:89: for (UINT8 i = 0; i < timeout; ++i) {
   0028 0E 00               223 	ld	c, #0x00
   002A                     224 00109$:
   002A 79                  225 	ld	a, c
   002B F8 03               226 	ldhl	sp,	#3
   002D 96                  227 	sub	a, (hl)
   002E 30 31               228 	jr	NC,00107$
                            229 ;./src/../src/input.c:90: UPDATE_JOYPAD_STATE;
   0030 E5                  230 	push	hl
   0031 21r31r00            231 	ld	hl, #_joypad_curr_state
   0034 7E                  232 	ld	a, (hl)
   0035 21r30r00            233 	ld	hl, #_joypad_prev_state
   0038 77                  234 	ld	(hl), a
   0039 E1                  235 	pop	hl
   003A C5                  236 	push	bc
   003B CDr00r00            237 	call	_joypad
   003E C1                  238 	pop	bc
   003F 21r31r00            239 	ld	hl, #_joypad_curr_state
   0042 73                  240 	ld	(hl), e
                            241 ;./src/../src/input.c:91: if (JOYPAD_PRESSED(buttons)) {
   0043 21r30r00            242 	ld	hl, #_joypad_prev_state
   0046 7E                  243 	ld	a, (hl)
   0047 F8 02               244 	ldhl	sp,	#2
   0049 A6                  245 	and	a,(hl)
   004A 20 0C               246 	jr	NZ,00105$
   004C 21r31r00            247 	ld	hl, #_joypad_curr_state
   004F 7E                  248 	ld	a, (hl)
   0050 F8 02               249 	ldhl	sp,	#2
   0052 A6                  250 	and	a,(hl)
   0053 28 03               251 	jr	Z,00105$
                            252 ;./src/../src/input.c:92: return TRUE;
   0055 1E 01               253 	ld	e, #0x01
   0057 C9                  254 	ret
   0058                     255 00105$:
                            256 ;./src/../src/input.c:94: wait_vbl_done();
   0058 C5                  257 	push	bc
   0059 CDr00r00            258 	call	_wait_vbl_done
   005C C1                  259 	pop	bc
                            260 ;./src/../src/input.c:89: for (UINT8 i = 0; i < timeout; ++i) {
   005D 0C                  261 	inc	c
   005E C3r2Ar00            262 	jp	00109$
   0061                     263 00107$:
                            264 ;./src/../src/input.c:96: return false;
   0061 1E 00               265 	ld	e, #0x00
                            266 ;./src/../src/input.c:97: }
   0063 C9                  267 	ret
                            268 ;./src/main.c:9: UINT8 create_sprite_num(){
                            269 ;	---------------------------------
                            270 ; Function create_sprite_num
                            271 ; ---------------------------------
   0064                     272 _create_sprite_num::
                            273 ;./src/main.c:10: ++total_sprites;
   0064 21r32r00            274 	ld	hl, #_total_sprites
   0067 34                  275 	inc	(hl)
                            276 ;./src/main.c:11: return total_sprites;
   0068 5E                  277 	ld	e, (hl)
                            278 ;./src/main.c:12: }
   0069 C9                  279 	ret
                            280 ;./src/main.c:31: void draw(MSprite* sprite){
                            281 ;	---------------------------------
                            282 ; Function draw
                            283 ; ---------------------------------
   006A                     284 _draw::
   006A E8 FB               285 	add	sp, #-5
                            286 ;./src/main.c:32: move_sprite(sprite->sprite_number, sprite->position.x, sprite->position.y);
   006C F8 07               287 	ldhl	sp,#(8 - 1)
   006E 4E                  288 	ld	c, (hl)
   006F 23                  289 	inc	hl
   0070 46                  290 	ld	b, (hl)
   0071 21 01 00            291 	ld	hl, #0x0001
   0074 09                  292 	add	hl, bc
   0075 33                  293 	inc	sp
   0076 33                  294 	inc	sp
   0077 E5                  295 	push	hl
   0078 D1                  296 	pop	de
   0079 D5                  297 	push	de
   007A 1A                  298 	ld	a,(de)
   007B F8 03               299 	ldhl	sp,	#3
   007D 77                  300 	ld	(hl), a
   007E 0A                  301 	ld	a, (bc)
   007F 23                  302 	inc	hl
   0080 77                  303 	ld	(hl), a
   0081 03                  304 	inc	bc
   0082 03                  305 	inc	bc
   0083 03                  306 	inc	bc
   0084 03                  307 	inc	bc
   0085 0A                  308 	ld	a, (bc)
   0086 47                  309 	ld	b, a
   0087 2B                  310 	dec	hl
   0088 7E                  311 	ld	a, (hl)
   0089 F5                  312 	push	af
   008A 33                  313 	inc	sp
   008B 23                  314 	inc	hl
   008C 7E                  315 	ld	a, (hl)
   008D F5                  316 	push	af
   008E 33                  317 	inc	sp
   008F C5                  318 	push	bc
   0090 33                  319 	inc	sp
   0091 CDr00r00            320 	call	_move_sprite
   0094 E8 03               321 	add	sp, #3
                            322 ;./src/main.c:33: }
   0096 E8 05               323 	add	sp, #5
   0098 C9                  324 	ret
                            325 ;./src/main.c:46: void next_animation(MSprite* sprite){
                            326 ;	---------------------------------
                            327 ; Function next_animation
                            328 ; ---------------------------------
   0099                     329 _next_animation::
   0099 E8 FB               330 	add	sp, #-5
                            331 ;./src/main.c:47: ++(sprite->animation_index);
   009B F8 07               332 	ldhl	sp,	#7
   009D 2A                  333 	ld	a, (hl+)
   009E 5E                  334 	ld	e, (hl)
   009F F8 00               335 	ldhl	sp,	#0
   00A1 22                  336 	ld	(hl+), a
   00A2 73                  337 	ld	(hl), e
   00A3 C1                  338 	pop	bc
   00A4 C5                  339 	push	bc
   00A5 03                  340 	inc	bc
   00A6 03                  341 	inc	bc
   00A7 0A                  342 	ld	a, (bc)
   00A8 3C                  343 	inc	a
   00A9 23                  344 	inc	hl
   00AA 77                  345 	ld	(hl),a
   00AB 02                  346 	ld	(bc), a
                            347 ;./src/main.c:48: if(sprite->animation_index == sprite->max_animations){
   00AC D1                  348 	pop	de
   00AD D5                  349 	push	de
   00AE 21 03 00            350 	ld	hl, #0x0003
   00B1 19                  351 	add	hl, de
   00B2 7D                  352 	ld	a, l
   00B3 54                  353 	ld	d, h
   00B4 F8 03               354 	ldhl	sp,	#3
   00B6 22                  355 	ld	(hl+), a
   00B7 72                  356 	ld	(hl), d
   00B8 2B                  357 	dec	hl
   00B9 5E                  358 	ld	e, (hl)
   00BA 23                  359 	inc	hl
   00BB 56                  360 	ld	d, (hl)
   00BC 1A                  361 	ld	a,(de)
   00BD 32                  362 	ld	(hl-), a
   00BE 2B                  363 	dec	hl
   00BF 2A                  364 	ld	a, (hl+)
   00C0 23                  365 	inc	hl
   00C1 96                  366 	sub	a, (hl)
   00C2 20 02               367 	jr	NZ,00102$
                            368 ;./src/main.c:49: sprite->animation_index = 0;
   00C4 AF                  369 	xor	a, a
   00C5 02                  370 	ld	(bc), a
   00C6                     371 00102$:
                            372 ;./src/main.c:51: set_sprite_tile(sprite->sprite_number, sprite->animation_index);
   00C6 0A                  373 	ld	a, (bc)
   00C7 47                  374 	ld	b, a
   00C8 D1                  375 	pop	de
   00C9 D5                  376 	push	de
   00CA 21 04 00            377 	ld	hl, #0x0004
   00CD 19                  378 	add	hl, de
   00CE 4D                  379 	ld	c,l
   00CF 7C                  380 	ld	a,h
   00D0 7E                  381 	ld	a, (hl)
   00D1 C5                  382 	push	bc
   00D2 33                  383 	inc	sp
   00D3 F5                  384 	push	af
   00D4 33                  385 	inc	sp
   00D5 CDr00r00            386 	call	_set_sprite_tile
   00D8 E8 02               387 	add	sp, #2
                            388 ;./src/main.c:52: }
   00DA E8 05               389 	add	sp, #5
   00DC C9                  390 	ret
                            391 ;./src/main.c:56: void gravity(MSprite* sprite){
                            392 ;	---------------------------------
                            393 ; Function gravity
                            394 ; ---------------------------------
   00DD                     395 _gravity::
   00DD E8 F9               396 	add	sp, #-7
                            397 ;./src/main.c:58: sprite->speed.y += GRAVITY;
   00DF F8 09               398 	ldhl	sp,#(10 - 1)
   00E1 4E                  399 	ld	c, (hl)
   00E2 23                  400 	inc	hl
   00E3 46                  401 	ld	b, (hl)
   00E4 21 06 00            402 	ld	hl, #0x0006
   00E7 09                  403 	add	hl, bc
   00E8 33                  404 	inc	sp
   00E9 33                  405 	inc	sp
   00EA E5                  406 	push	hl
   00EB D1                  407 	pop	de
   00EC D5                  408 	push	de
   00ED 1A                  409 	ld	a,(de)
   00EE 21r83r00            410 	ld	hl, #_GRAVITY
   00F1 86                  411 	add	a, (hl)
   00F2 F8 02               412 	ldhl	sp,	#2
   00F4 77                  413 	ld	(hl), a
   00F5 D1                  414 	pop	de
   00F6 D5                  415 	push	de
   00F7 7E                  416 	ld	a, (hl)
   00F8 12                  417 	ld	(de), a
                            418 ;./src/main.c:60: if(sprite->position.y + sprite->speed.y >= 130){
   00F9 03                  419 	inc	bc
   00FA 23                  420 	inc	hl
   00FB 71                  421 	ld	(hl), c
   00FC 23                  422 	inc	hl
   00FD 70                  423 	ld	(hl), b
   00FE 2B                  424 	dec	hl
   00FF 5E                  425 	ld	e, (hl)
   0100 23                  426 	inc	hl
   0101 56                  427 	ld	d, (hl)
   0102 1A                  428 	ld	a,(de)
   0103 23                  429 	inc	hl
   0104 77                  430 	ld	(hl), a
   0105 AF                  431 	xor	a, a
   0106 23                  432 	inc	hl
   0107 77                  433 	ld	(hl), a
   0108 F8 02               434 	ldhl	sp,	#2
   010A 4E                  435 	ld	c, (hl)
   010B 06 00               436 	ld	b, #0x00
   010D F8 05               437 	ldhl	sp,	#5
   010F 2A                  438 	ld	a, (hl+)
   0110 66                  439 	ld	h, (hl)
   0111 6F                  440 	ld	l, a
   0112 09                  441 	add	hl, bc
   0113 4D                  442 	ld	c, l
   0114 44                  443 	ld	b, h
   0115 79                  444 	ld	a, c
   0116 D6 82               445 	sub	a, #0x82
   0118 78                  446 	ld	a, b
   0119 17                  447 	rla
   011A 3F                  448 	ccf
   011B 1F                  449 	rra
   011C DE 80               450 	sbc	a, #0x80
   011E 38 0B               451 	jr	C,00103$
                            452 ;./src/main.c:61: sprite->speed.y = 0;
   0120 E1                  453 	pop	hl
   0121 E5                  454 	push	hl
   0122 36 00               455 	ld	(hl), #0x00
                            456 ;./src/main.c:62: sprite->position.y = 130;
   0124 F8 03               457 	ldhl	sp,	#3
   0126 2A                  458 	ld	a, (hl+)
   0127 66                  459 	ld	h, (hl)
   0128 6F                  460 	ld	l, a
   0129 36 82               461 	ld	(hl), #0x82
   012B                     462 00103$:
                            463 ;./src/main.c:64: }
   012B E8 07               464 	add	sp, #7
   012D C9                  465 	ret
                            466 ;./src/main.c:67: void update_position(MSprite* sprite){
                            467 ;	---------------------------------
                            468 ; Function update_position
                            469 ; ---------------------------------
   012E                     470 _update_position::
   012E E8 FD               471 	add	sp, #-3
                            472 ;./src/main.c:68: sprite->position.x += sprite->speed.x;
   0130 F8 05               473 	ldhl	sp,#(6 - 1)
   0132 4E                  474 	ld	c, (hl)
   0133 23                  475 	inc	hl
   0134 46                  476 	ld	b, (hl)
   0135 0A                  477 	ld	a, (bc)
   0136 F8 00               478 	ldhl	sp,	#0
   0138 77                  479 	ld	(hl), a
   0139 21 05 00            480 	ld	hl, #0x0005
   013C 09                  481 	add	hl, bc
   013D 7D                  482 	ld	a, l
   013E 54                  483 	ld	d, h
   013F F8 01               484 	ldhl	sp,	#1
   0141 22                  485 	ld	(hl+), a
   0142 72                  486 	ld	(hl), d
   0143 2B                  487 	dec	hl
   0144 5E                  488 	ld	e, (hl)
   0145 23                  489 	inc	hl
   0146 56                  490 	ld	d, (hl)
   0147 1A                  491 	ld	a,(de)
   0148 2B                  492 	dec	hl
   0149 2B                  493 	dec	hl
   014A 86                  494 	add	a, (hl)
   014B 02                  495 	ld	(bc), a
                            496 ;./src/main.c:69: sprite->position.y += sprite->speed.y;
   014C 21 01 00            497 	ld	hl, #0x0001
   014F 09                  498 	add	hl, bc
   0150 33                  499 	inc	sp
   0151 33                  500 	inc	sp
   0152 E5                  501 	push	hl
   0153 D1                  502 	pop	de
   0154 D5                  503 	push	de
   0155 1A                  504 	ld	a,(de)
   0156 F8 02               505 	ldhl	sp,	#2
   0158 77                  506 	ld	(hl), a
   0159 21 06 00            507 	ld	hl, #0x0006
   015C 09                  508 	add	hl, bc
   015D 4D                  509 	ld	c, l
   015E 44                  510 	ld	b, h
   015F 0A                  511 	ld	a, (bc)
   0160 F8 02               512 	ldhl	sp,	#2
   0162 86                  513 	add	a, (hl)
   0163 4F                  514 	ld	c, a
   0164 E1                  515 	pop	hl
   0165 E5                  516 	push	hl
   0166 71                  517 	ld	(hl), c
                            518 ;./src/main.c:70: }
   0167 E8 03               519 	add	sp, #3
   0169 C9                  520 	ret
                            521 ;./src/main.c:73: void check_collision_with_wall(){
                            522 ;	---------------------------------
                            523 ; Function check_collision_with_wall
                            524 ; ---------------------------------
   016A                     525 _check_collision_with_wall::
                            526 ;./src/main.c:75: }
   016A C9                  527 	ret
                            528 ;./src/main.c:77: void create_level(){
                            529 ;	---------------------------------
                            530 ; Function create_level
                            531 ; ---------------------------------
   016B                     532 _create_level::
                            533 ;./src/main.c:79: }
   016B C9                  534 	ret
                            535 ;./src/main.c:81: void player_movement(MPlayer* player)
                            536 ;	---------------------------------
                            537 ; Function player_movement
                            538 ; ---------------------------------
   016C                     539 _player_movement::
   016C E8 F7               540 	add	sp, #-9
                            541 ;./src/main.c:83: MVector movement_speed = {10, 10};
   016E F8 00               542 	ldhl	sp,	#0
   0170 4D                  543 	ld	c, l
   0171 44                  544 	ld	b, h
   0172 3E 0A               545 	ld	a, #0x0a
   0174 02                  546 	ld	(bc), a
   0175 F8 00               547 	ldhl	sp,	#0
   0177 4D                  548 	ld	c, l
   0178 44                  549 	ld	b, h
   0179 21 01 00            550 	ld	hl, #0x0001
   017C 09                  551 	add	hl, bc
   017D 7D                  552 	ld	a, l
   017E 54                  553 	ld	d, h
   017F F8 02               554 	ldhl	sp,	#2
   0181 22                  555 	ld	(hl+), a
   0182 72                  556 	ld	(hl), d
   0183 2B                  557 	dec	hl
   0184 2A                  558 	ld	a, (hl+)
   0185 66                  559 	ld	h, (hl)
   0186 6F                  560 	ld	l, a
   0187 36 0A               561 	ld	(hl), #0x0a
                            562 ;./src/main.c:85: if(JOYPAD_DOWN_PAD_L){
   0189 C5                  563 	push	bc
   018A CDr00r00            564 	call	_joypad
   018D F8 06               565 	ldhl	sp,	#6
   018F 73                  566 	ld	(hl), e
   0190 C1                  567 	pop	bc
                            568 ;./src/main.c:86: player->sprite.speed.x = -movement_speed.x;
   0191 F8 0B               569 	ldhl	sp,	#11
   0193 2A                  570 	ld	a, (hl+)
   0194 5E                  571 	ld	e, (hl)
   0195 F8 05               572 	ldhl	sp,	#5
   0197 22                  573 	ld	(hl+), a
   0198 73                  574 	ld	(hl), e
   0199 2B                  575 	dec	hl
   019A 5E                  576 	ld	e, (hl)
   019B 23                  577 	inc	hl
   019C 56                  578 	ld	d, (hl)
   019D 21 05 00            579 	ld	hl, #0x0005
   01A0 19                  580 	add	hl, de
   01A1 7D                  581 	ld	a, l
   01A2 54                  582 	ld	d, h
   01A3 F8 07               583 	ldhl	sp,	#7
   01A5 22                  584 	ld	(hl+), a
   01A6 72                  585 	ld	(hl), d
                            586 ;./src/main.c:85: if(JOYPAD_DOWN_PAD_L){
   01A7 F8 04               587 	ldhl	sp,	#4
   01A9 CB 4E               588 	bit	1, (hl)
   01AB 28 19               589 	jr	Z,00108$
                            590 ;./src/main.c:86: player->sprite.speed.x = -movement_speed.x;
   01AD 0A                  591 	ld	a, (bc)
   01AE 4F                  592 	ld	c, a
   01AF AF                  593 	xor	a, a
   01B0 91                  594 	sub	a, c
   01B1 4F                  595 	ld	c, a
   01B2 F8 07               596 	ldhl	sp,	#7
   01B4 2A                  597 	ld	a, (hl+)
   01B5 66                  598 	ld	h, (hl)
   01B6 6F                  599 	ld	l, a
   01B7 71                  600 	ld	(hl), c
                            601 ;./src/main.c:87: next_animation(&(player->sprite));
   01B8 F8 05               602 	ldhl	sp,	#5
   01BA 2A                  603 	ld	a, (hl+)
   01BB 66                  604 	ld	h, (hl)
   01BC 6F                  605 	ld	l, a
   01BD E5                  606 	push	hl
   01BE CDr99r00            607 	call	_next_animation
   01C1 E8 02               608 	add	sp, #2
   01C3 C3rF9r01            609 	jp	00109$
   01C6                     610 00108$:
                            611 ;./src/main.c:89: else if(JOYPAD_DOWN_PAD_R){
   01C6 C5                  612 	push	bc
   01C7 CDr00r00            613 	call	_joypad
   01CA 7B                  614 	ld	a, e
   01CB C1                  615 	pop	bc
   01CC 0F                  616 	rrca
   01CD 30 15               617 	jr	NC,00105$
                            618 ;./src/main.c:90: player->sprite.speed.x = movement_speed.x;
   01CF 0A                  619 	ld	a, (bc)
   01D0 4F                  620 	ld	c, a
   01D1 F8 07               621 	ldhl	sp,	#7
   01D3 2A                  622 	ld	a, (hl+)
   01D4 66                  623 	ld	h, (hl)
   01D5 6F                  624 	ld	l, a
   01D6 71                  625 	ld	(hl), c
                            626 ;./src/main.c:91: next_animation(&(player->sprite));
   01D7 F8 05               627 	ldhl	sp,	#5
   01D9 2A                  628 	ld	a, (hl+)
   01DA 66                  629 	ld	h, (hl)
   01DB 6F                  630 	ld	l, a
   01DC E5                  631 	push	hl
   01DD CDr99r00            632 	call	_next_animation
   01E0 E8 02               633 	add	sp, #2
   01E2 18 15               634 	jr	00109$
   01E4                     635 00105$:
                            636 ;./src/main.c:93: else if(JOYPAD_UP_PAD_L && JOYPAD_UP_PAD_R){
   01E4 CDr00r00            637 	call	_joypad
   01E7 CB 4B               638 	bit	1, e
   01E9 20 0E               639 	jr	NZ,00109$
   01EB CDr00r00            640 	call	_joypad
   01EE 7B                  641 	ld	a, e
   01EF 0F                  642 	rrca
   01F0 38 07               643 	jr	C,00109$
                            644 ;./src/main.c:94: player->sprite.speed.x = 0;
   01F2 F8 07               645 	ldhl	sp,	#7
   01F4 2A                  646 	ld	a, (hl+)
   01F5 66                  647 	ld	h, (hl)
   01F6 6F                  648 	ld	l, a
   01F7 36 00               649 	ld	(hl), #0x00
   01F9                     650 00109$:
                            651 ;./src/main.c:98: if(JOYPAD_DOWN_PAD_D){
   01F9 CDr00r00            652 	call	_joypad
   01FC F8 08               653 	ldhl	sp,	#8
   01FE 73                  654 	ld	(hl), e
                            655 ;./src/main.c:99: player->sprite.speed.y = movement_speed.y;
   01FF F8 05               656 	ldhl	sp,#(6 - 1)
   0201 5E                  657 	ld	e, (hl)
   0202 23                  658 	inc	hl
   0203 56                  659 	ld	d, (hl)
   0204 21 06 00            660 	ld	hl, #0x0006
   0207 19                  661 	add	hl, de
   0208 4D                  662 	ld	c, l
   0209 44                  663 	ld	b, h
                            664 ;./src/main.c:98: if(JOYPAD_DOWN_PAD_D){
   020A F8 08               665 	ldhl	sp,	#8
   020C CB 5E               666 	bit	3, (hl)
   020E 28 09               667 	jr	Z,00114$
                            668 ;./src/main.c:99: player->sprite.speed.y = movement_speed.y;
   0210 F8 02               669 	ldhl	sp,#(3 - 1)
   0212 5E                  670 	ld	e, (hl)
   0213 23                  671 	inc	hl
   0214 56                  672 	ld	d, (hl)
   0215 1A                  673 	ld	a,(de)
   0216 02                  674 	ld	(bc), a
   0217 18 1E               675 	jr	00116$
   0219                     676 00114$:
                            677 ;./src/main.c:101: else if(JOYPAD_RELEASED_PAD_D){
   0219 21r30r00            678 	ld	hl, #_joypad_prev_state
   021C 7E                  679 	ld	a, (hl)
   021D CB 5F               680 	bit	3, a
   021F 28 16               681 	jr	Z,00116$
   0221 21r31r00            682 	ld	hl, #_joypad_curr_state
   0224 7E                  683 	ld	a, (hl)
   0225 CB 5F               684 	bit	3, a
   0227 20 0E               685 	jr	NZ,00116$
                            686 ;./src/main.c:102: player->sprite.speed.y -= movement_speed.y;
   0229 0A                  687 	ld	a, (bc)
   022A F8 02               688 	ldhl	sp,#(3 - 1)
   022C 5E                  689 	ld	e, (hl)
   022D 23                  690 	inc	hl
   022E 56                  691 	ld	d, (hl)
   022F F5                  692 	push	af
   0230 1A                  693 	ld	a,(de)
   0231 F8 0A               694 	ldhl	sp,	#10
   0233 77                  695 	ld	(hl), a
   0234 F1                  696 	pop	af
   0235 96                  697 	sub	a, (hl)
   0236 02                  698 	ld	(bc), a
   0237                     699 00116$:
                            700 ;./src/main.c:104: }
   0237 E8 09               701 	add	sp, #9
   0239 C9                  702 	ret
                            703 ;./src/main.c:106: void jump(MPlayer* player){
                            704 ;	---------------------------------
                            705 ; Function jump
                            706 ; ---------------------------------
   023A                     707 _jump::
   023A E8 FE               708 	add	sp, #-2
                            709 ;./src/main.c:107: if(JOYPAD_PRESSED_PAD_U){
   023C 21r30r00            710 	ld	hl, #_joypad_prev_state
   023F 7E                  711 	ld	a, (hl)
   0240 CB 57               712 	bit	2, a
   0242 20 20               713 	jr	NZ,00104$
   0244 21r31r00            714 	ld	hl, #_joypad_curr_state
   0247 7E                  715 	ld	a, (hl)
   0248 CB 57               716 	bit	2, a
   024A 28 18               717 	jr	Z,00104$
                            718 ;./src/main.c:108: player->jumped = true;
   024C F8 04               719 	ldhl	sp,#(5 - 1)
   024E 4E                  720 	ld	c, (hl)
   024F 23                  721 	inc	hl
   0250 46                  722 	ld	b, (hl)
   0251 21 0B 00            723 	ld	hl, #0x000b
   0254 09                  724 	add	hl, bc
   0255 33                  725 	inc	sp
   0256 33                  726 	inc	sp
   0257 E5                  727 	push	hl
   0258 E1                  728 	pop	hl
   0259 E5                  729 	push	hl
   025A 36 01               730 	ld	(hl), #0x01
                            731 ;./src/main.c:109: player->sprite.speed.y = -10;
   025C 21 06 00            732 	ld	hl, #0x0006
   025F 09                  733 	add	hl, bc
   0260 4D                  734 	ld	c,l
   0261 7C                  735 	ld	a,h
   0262 36 F6               736 	ld	(hl), #0xf6
   0264                     737 00104$:
                            738 ;./src/main.c:111: }
   0264 E8 02               739 	add	sp, #2
   0266 C9                  740 	ret
                            741 ;./src/main.c:113: void main()
                            742 ;	---------------------------------
                            743 ; Function main
                            744 ; ---------------------------------
   0267                     745 _main::
   0267 E8 EB               746 	add	sp, #-21
                            747 ;./src/main.c:115: UPDATE_JOYPAD_STATE;
   0269 E5                  748 	push	hl
   026A 21r31r00            749 	ld	hl, #_joypad_curr_state
   026D 7E                  750 	ld	a, (hl)
   026E 21r30r00            751 	ld	hl, #_joypad_prev_state
   0271 77                  752 	ld	(hl), a
   0272 E1                  753 	pop	hl
   0273 CDr00r00            754 	call	_joypad
   0276 21r31r00            755 	ld	hl, #_joypad_curr_state
   0279 73                  756 	ld	(hl), e
                            757 ;./src/main.c:117: MPlayer player = {{{88, 78}, 0, 3, 0, {0, 0}}, false, 6, 0, false, 6, 0};
   027A F8 00               758 	ldhl	sp,	#0
   027C 7D                  759 	ld	a, l
   027D 54                  760 	ld	d, h
   027E F8 13               761 	ldhl	sp,	#19
   0280 22                  762 	ld	(hl+), a
   0281 72                  763 	ld	(hl), d
   0282 2B                  764 	dec	hl
   0283 2A                  765 	ld	a, (hl+)
   0284 66                  766 	ld	h, (hl)
   0285 6F                  767 	ld	l, a
   0286 36 58               768 	ld	(hl), #0x58
   0288 F8 13               769 	ldhl	sp,#(20 - 1)
   028A 4E                  770 	ld	c, (hl)
   028B 23                  771 	inc	hl
   028C 46                  772 	ld	b, (hl)
   028D 03                  773 	inc	bc
   028E 3E 4E               774 	ld	a, #0x4e
   0290 02                  775 	ld	(bc), a
   0291 2B                  776 	dec	hl
   0292 4E                  777 	ld	c, (hl)
   0293 23                  778 	inc	hl
   0294 46                  779 	ld	b, (hl)
   0295 03                  780 	inc	bc
   0296 03                  781 	inc	bc
   0297 AF                  782 	xor	a, a
   0298 02                  783 	ld	(bc), a
   0299 2B                  784 	dec	hl
   029A 4E                  785 	ld	c, (hl)
   029B 23                  786 	inc	hl
   029C 46                  787 	ld	b, (hl)
   029D 03                  788 	inc	bc
   029E 03                  789 	inc	bc
   029F 03                  790 	inc	bc
   02A0 3E 03               791 	ld	a, #0x03
   02A2 02                  792 	ld	(bc), a
   02A3 2B                  793 	dec	hl
   02A4 5E                  794 	ld	e, (hl)
   02A5 23                  795 	inc	hl
   02A6 56                  796 	ld	d, (hl)
   02A7 21 04 00            797 	ld	hl, #0x0004
   02AA 19                  798 	add	hl, de
   02AB 4D                  799 	ld	c, l
   02AC 44                  800 	ld	b, h
   02AD AF                  801 	xor	a, a
   02AE 02                  802 	ld	(bc), a
   02AF F8 13               803 	ldhl	sp,#(20 - 1)
   02B1 5E                  804 	ld	e, (hl)
   02B2 23                  805 	inc	hl
   02B3 56                  806 	ld	d, (hl)
   02B4 21 05 00            807 	ld	hl, #0x0005
   02B7 19                  808 	add	hl, de
   02B8 4D                  809 	ld	c, l
   02B9 44                  810 	ld	b, h
   02BA AF                  811 	xor	a, a
   02BB 02                  812 	ld	(bc), a
   02BC F8 13               813 	ldhl	sp,#(20 - 1)
   02BE 5E                  814 	ld	e, (hl)
   02BF 23                  815 	inc	hl
   02C0 56                  816 	ld	d, (hl)
   02C1 21 06 00            817 	ld	hl, #0x0006
   02C4 19                  818 	add	hl, de
   02C5 4D                  819 	ld	c, l
   02C6 44                  820 	ld	b, h
   02C7 AF                  821 	xor	a, a
   02C8 02                  822 	ld	(bc), a
   02C9 F8 00               823 	ldhl	sp,	#0
   02CB 7D                  824 	ld	a, l
   02CC 54                  825 	ld	d, h
   02CD F8 0F               826 	ldhl	sp,	#15
   02CF 22                  827 	ld	(hl+), a
   02D0 72                  828 	ld	(hl), d
   02D1 2B                  829 	dec	hl
   02D2 5E                  830 	ld	e, (hl)
   02D3 23                  831 	inc	hl
   02D4 56                  832 	ld	d, (hl)
   02D5 21 07 00            833 	ld	hl, #0x0007
   02D8 19                  834 	add	hl, de
   02D9 4D                  835 	ld	c, l
   02DA 44                  836 	ld	b, h
   02DB AF                  837 	xor	a, a
   02DC 02                  838 	ld	(bc), a
   02DD F8 0F               839 	ldhl	sp,#(16 - 1)
   02DF 5E                  840 	ld	e, (hl)
   02E0 23                  841 	inc	hl
   02E1 56                  842 	ld	d, (hl)
   02E2 21 08 00            843 	ld	hl, #0x0008
   02E5 19                  844 	add	hl, de
   02E6 4D                  845 	ld	c,l
   02E7 7C                  846 	ld	a,h
   02E8 36 06               847 	ld	(hl), #0x06
   02EA F8 0F               848 	ldhl	sp,#(16 - 1)
   02EC 5E                  849 	ld	e, (hl)
   02ED 23                  850 	inc	hl
   02EE 56                  851 	ld	d, (hl)
   02EF 21 09 00            852 	ld	hl, #0x0009
   02F2 19                  853 	add	hl, de
   02F3 4D                  854 	ld	c, l
   02F4 44                  855 	ld	b, h
   02F5 AF                  856 	xor	a, a
   02F6 02                  857 	ld	(bc), a
   02F7 03                  858 	inc	bc
   02F8 02                  859 	ld	(bc), a
   02F9 F8 0F               860 	ldhl	sp,#(16 - 1)
   02FB 5E                  861 	ld	e, (hl)
   02FC 23                  862 	inc	hl
   02FD 56                  863 	ld	d, (hl)
   02FE 21 0B 00            864 	ld	hl, #0x000b
   0301 19                  865 	add	hl, de
   0302 4D                  866 	ld	c, l
   0303 44                  867 	ld	b, h
   0304 AF                  868 	xor	a, a
   0305 02                  869 	ld	(bc), a
   0306 F8 0F               870 	ldhl	sp,#(16 - 1)
   0308 5E                  871 	ld	e, (hl)
   0309 23                  872 	inc	hl
   030A 56                  873 	ld	d, (hl)
   030B 21 0C 00            874 	ld	hl, #0x000c
   030E 19                  875 	add	hl, de
   030F 4D                  876 	ld	c,l
   0310 7C                  877 	ld	a,h
   0311 36 06               878 	ld	(hl), #0x06
   0313 F8 0F               879 	ldhl	sp,#(16 - 1)
   0315 5E                  880 	ld	e, (hl)
   0316 23                  881 	inc	hl
   0317 56                  882 	ld	d, (hl)
   0318 21 0D 00            883 	ld	hl, #0x000d
   031B 19                  884 	add	hl, de
   031C 4D                  885 	ld	c, l
   031D 44                  886 	ld	b, h
   031E AF                  887 	xor	a, a
   031F 02                  888 	ld	(bc), a
   0320 03                  889 	inc	bc
   0321 02                  890 	ld	(bc), a
                            891 ;./src/main.c:118: sprites[0] = &(player.sprite);
   0322 F8 0F               892 	ldhl	sp,#(16 - 1)
   0324 4E                  893 	ld	c, (hl)
   0325 23                  894 	inc	hl
   0326 46                  895 	ld	b, (hl)
   0327 21r33r00            896 	ld	hl, #_sprites
   032A 71                  897 	ld	(hl), c
   032B 23                  898 	inc	hl
   032C 70                  899 	ld	(hl), b
                            900 ;./src/main.c:119: set_sprite_data(player.sprite.sprite_number, player.sprite.max_animations, MainChar);
   032D F8 0F               901 	ldhl	sp,#(16 - 1)
   032F 4E                  902 	ld	c, (hl)
   0330 23                  903 	inc	hl
   0331 46                  904 	ld	b, (hl)
   0332 03                  905 	inc	bc
   0333 03                  906 	inc	bc
   0334 03                  907 	inc	bc
   0335 0A                  908 	ld	a, (bc)
   0336 47                  909 	ld	b, a
   0337 2B                  910 	dec	hl
   0338 5E                  911 	ld	e, (hl)
   0339 23                  912 	inc	hl
   033A 56                  913 	ld	d, (hl)
   033B 21 04 00            914 	ld	hl, #0x0004
   033E 19                  915 	add	hl, de
   033F 7D                  916 	ld	a, l
   0340 54                  917 	ld	d, h
   0341 F8 13               918 	ldhl	sp,	#19
   0343 22                  919 	ld	(hl+), a
   0344 72                  920 	ld	(hl), d
   0345 2B                  921 	dec	hl
   0346 5E                  922 	ld	e, (hl)
   0347 23                  923 	inc	hl
   0348 56                  924 	ld	d, (hl)
   0349 1A                  925 	ld	a,(de)
   034A 4F                  926 	ld	c, a
   034B 21r00r00            927 	ld	hl, #_MainChar
   034E E5                  928 	push	hl
   034F C5                  929 	push	bc
   0350 33                  930 	inc	sp
   0351 79                  931 	ld	a, c
   0352 F5                  932 	push	af
   0353 33                  933 	inc	sp
   0354 CDr00r00            934 	call	_set_sprite_data
   0357 E8 04               935 	add	sp, #4
                            936 ;./src/main.c:120: set_sprite_tile(player.sprite.sprite_number, player.sprite.animation_index);
   0359 F8 0F               937 	ldhl	sp,#(16 - 1)
   035B 4E                  938 	ld	c, (hl)
   035C 23                  939 	inc	hl
   035D 46                  940 	ld	b, (hl)
   035E 03                  941 	inc	bc
   035F 03                  942 	inc	bc
   0360 0A                  943 	ld	a, (bc)
   0361 47                  944 	ld	b, a
   0362 F8 13               945 	ldhl	sp,#(20 - 1)
   0364 5E                  946 	ld	e, (hl)
   0365 23                  947 	inc	hl
   0366 56                  948 	ld	d, (hl)
   0367 1A                  949 	ld	a,(de)
   0368 C5                  950 	push	bc
   0369 33                  951 	inc	sp
   036A F5                  952 	push	af
   036B 33                  953 	inc	sp
   036C CDr00r00            954 	call	_set_sprite_tile
   036F E8 02               955 	add	sp, #2
                            956 ;./src/main.c:121: move_sprite(player.sprite.sprite_number, player.sprite.position.x, player.sprite.position.y);
   0371 F8 0F               957 	ldhl	sp,#(16 - 1)
   0373 4E                  958 	ld	c, (hl)
   0374 23                  959 	inc	hl
   0375 46                  960 	ld	b, (hl)
   0376 03                  961 	inc	bc
   0377 0A                  962 	ld	a, (bc)
   0378 47                  963 	ld	b, a
   0379 2B                  964 	dec	hl
   037A 5E                  965 	ld	e, (hl)
   037B 23                  966 	inc	hl
   037C 56                  967 	ld	d, (hl)
   037D 1A                  968 	ld	a,(de)
   037E F8 13               969 	ldhl	sp,#(20 - 1)
   0380 5E                  970 	ld	e, (hl)
   0381 23                  971 	inc	hl
   0382 56                  972 	ld	d, (hl)
   0383 F5                  973 	push	af
   0384 1A                  974 	ld	a,(de)
   0385 4F                  975 	ld	c, a
   0386 F1                  976 	pop	af
   0387 C5                  977 	push	bc
   0388 33                  978 	inc	sp
   0389 F5                  979 	push	af
   038A 33                  980 	inc	sp
   038B 79                  981 	ld	a, c
   038C F5                  982 	push	af
   038D 33                  983 	inc	sp
   038E CDr00r00            984 	call	_move_sprite
   0391 E8 03               985 	add	sp, #3
                            986 ;./src/main.c:122: SHOW_SPRITES;
   0393 F0r00               987 	ldh	a, (_LCDC_REG+0)
   0395 F6 02               988 	or	a, #0x02
   0397 E0r00               989 	ldh	(_LCDC_REG+0),a
                            990 ;./src/main.c:125: while(1){
   0399                     991 00115$:
                            992 ;./src/main.c:127: player_movement(&player);
   0399 F8 0F               993 	ldhl	sp,#(16 - 1)
   039B 4E                  994 	ld	c, (hl)
   039C 23                  995 	inc	hl
   039D 46                  996 	ld	b, (hl)
   039E C5                  997 	push	bc
   039F CDr6Cr01            998 	call	_player_movement
   03A2 E8 02               999 	add	sp, #2
                           1000 ;./src/main.c:128: jump(&player);
   03A4 F8 0F              1001 	ldhl	sp,#(16 - 1)
   03A6 4E                 1002 	ld	c, (hl)
   03A7 23                 1003 	inc	hl
   03A8 46                 1004 	ld	b, (hl)
   03A9 C5                 1005 	push	bc
   03AA CDr3Ar02           1006 	call	_jump
   03AD E8 02              1007 	add	sp, #2
                           1008 ;./src/main.c:129: ++gravity_time;
   03AF 21r84r00           1009 	ld	hl, #_gravity_time
   03B2 34                 1010 	inc	(hl)
                           1011 ;./src/main.c:130: for(UINT8 i = 0; i < 40; ++i){
   03B3 AF                 1012 	xor	a, a
   03B4 F8 14              1013 	ldhl	sp,	#20
   03B6 77                 1014 	ld	(hl), a
   03B7                    1015 00118$:
                           1016 ;./src/main.c:132: if(gravity_time > 60) { gravity(sprites[i]); }
   03B7 3E 3C              1017 	ld	a, #0x3c
   03B9 21r84r00           1018 	ld	hl, #_gravity_time
   03BC 96                 1019 	sub	a, (hl)
   03BD 3E 00              1020 	ld	a, #0x00
   03BF 17                 1021 	rla
   03C0 F8 11              1022 	ldhl	sp,	#17
   03C2 77                 1023 	ld	(hl), a
                           1024 ;./src/main.c:130: for(UINT8 i = 0; i < 40; ++i){
   03C3 F8 14              1025 	ldhl	sp,	#20
   03C5 7E                 1026 	ld	a, (hl)
   03C6 D6 28              1027 	sub	a, #0x28
   03C8 D2r0Ar04           1028 	jp	NC, 00108$
                           1029 ;./src/main.c:131: if(sprites[i] == 0){break;}
   03CB 4E                 1030 	ld	c, (hl)
   03CC 06 00              1031 	ld	b, #0x00
   03CE CB 21              1032 	sla	c
   03D0 CB 10              1033 	rl	b
   03D2 21r33r00           1034 	ld	hl, #_sprites
   03D5 09                 1035 	add	hl, bc
   03D6 7D                 1036 	ld	a, l
   03D7 54                 1037 	ld	d, h
   03D8 F8 12              1038 	ldhl	sp,	#18
   03DA 22                 1039 	ld	(hl+), a
   03DB 72                 1040 	ld	(hl), d
   03DC 2B                 1041 	dec	hl
   03DD 5E                 1042 	ld	e, (hl)
   03DE 23                 1043 	inc	hl
   03DF 56                 1044 	ld	d, (hl)
   03E0 1A                 1045 	ld	a,(de)
   03E1 4F                 1046 	ld	c, a
   03E2 13                 1047 	inc	de
   03E3 1A                 1048 	ld	a,(de)
   03E4 47                 1049 	ld	b,a
   03E5 B1                 1050 	or	a, c
   03E6 28 22              1051 	jr	Z,00108$
                           1052 ;./src/main.c:132: if(gravity_time > 60) { gravity(sprites[i]); }
   03E8 2B                 1053 	dec	hl
   03E9 2B                 1054 	dec	hl
   03EA 7E                 1055 	ld	a, (hl)
   03EB B7                 1056 	or	a, a
   03EC 28 06              1057 	jr	Z,00107$
   03EE C5                 1058 	push	bc
   03EF CDrDDr00           1059 	call	_gravity
   03F2 E8 02              1060 	add	sp, #2
   03F4                    1061 00107$:
                           1062 ;./src/main.c:133: update_position(sprites[i]);
   03F4 F8 12              1063 	ldhl	sp,#(19 - 1)
   03F6 5E                 1064 	ld	e, (hl)
   03F7 23                 1065 	inc	hl
   03F8 56                 1066 	ld	d, (hl)
   03F9 1A                 1067 	ld	a,(de)
   03FA 4F                 1068 	ld	c, a
   03FB 13                 1069 	inc	de
   03FC 1A                 1070 	ld	a,(de)
   03FD 47                 1071 	ld	b, a
   03FE C5                 1072 	push	bc
   03FF CDr2Er01           1073 	call	_update_position
   0402 E8 02              1074 	add	sp, #2
                           1075 ;./src/main.c:130: for(UINT8 i = 0; i < 40; ++i){
   0404 F8 14              1076 	ldhl	sp,	#20
   0406 34                 1077 	inc	(hl)
   0407 C3rB7r03           1078 	jp	00118$
   040A                    1079 00108$:
                           1080 ;./src/main.c:135: if(gravity_time > 60) { gravity_time = 0; }
   040A F8 11              1081 	ldhl	sp,	#17
   040C 7E                 1082 	ld	a, (hl)
   040D B7                 1083 	or	a, a
   040E 28 05              1084 	jr	Z,00132$
   0410 21r84r00           1085 	ld	hl, #_gravity_time
   0413 36 00              1086 	ld	(hl), #0x00
                           1087 ;./src/main.c:138: for(UINT8 i = 0; i < 40; ++i){
   0415                    1088 00132$:
   0415 AF                 1089 	xor	a, a
   0416 F8 14              1090 	ldhl	sp,	#20
   0418 77                 1091 	ld	(hl), a
   0419                    1092 00121$:
   0419 F8 14              1093 	ldhl	sp,	#20
   041B 7E                 1094 	ld	a, (hl)
   041C D6 28              1095 	sub	a, #0x28
   041E 30 1F              1096 	jr	NC,00113$
                           1097 ;./src/main.c:139: if(sprites[i] == 0){break;}
   0420 4E                 1098 	ld	c, (hl)
   0421 06 00              1099 	ld	b, #0x00
   0423 CB 21              1100 	sla	c
   0425 CB 10              1101 	rl	b
   0427 21r33r00           1102 	ld	hl, #_sprites
   042A 09                 1103 	add	hl, bc
   042B 4D                 1104 	ld	c,l
   042C 44                 1105 	ld	b,h
   042D 4E                 1106 	ld	c, (hl)
   042E 23                 1107 	inc	hl
   042F 46                 1108 	ld	b, (hl)
   0430 78                 1109 	ld	a, b
   0431 B1                 1110 	or	a, c
   0432 28 0B              1111 	jr	Z,00113$
                           1112 ;./src/main.c:140: draw(sprites[i]);
   0434 C5                 1113 	push	bc
   0435 CDr6Ar00           1114 	call	_draw
   0438 E8 02              1115 	add	sp, #2
                           1116 ;./src/main.c:138: for(UINT8 i = 0; i < 40; ++i){
   043A F8 14              1117 	ldhl	sp,	#20
   043C 34                 1118 	inc	(hl)
   043D 18 DA              1119 	jr	00121$
   043F                    1120 00113$:
                           1121 ;./src/main.c:145: wait_vbl_done();
   043F CDr00r00           1122 	call	_wait_vbl_done
   0442 C3r99r03           1123 	jp	00115$
                           1124 ;./src/main.c:147: }
   0445 E8 15              1125 	add	sp, #21
   0447 C9                 1126 	ret
                           1127 	.area _CODE
                           1128 	.area _CABS (ABS)
