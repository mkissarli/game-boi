                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 4.0.0 #11528 (MINGW32)
                              4 ;--------------------------------------------------------
                              5 	.module C__Users_Thief3_AppData_Local_Temp_lcc110841
                              6 	.optsdcc -mgbz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _jump
                             13 	.globl _player_movement
                             14 	.globl _update_position
                             15 	.globl _gravity
                             16 	.globl _next_animation
                             17 	.globl _draw
                             18 	.globl _performantdelay
                             19 	.globl _create_sprite_num
                             20 	.globl _move_sprite
                             21 	.globl _set_sprite_tile
                             22 	.globl _set_sprite_data
                             23 	.globl _wait_vbl_done
                             24 	.globl _joypad
                             25 	.globl _gravity_time
                             26 	.globl _sprites
                             27 	.globl _total_sprites
                             28 	.globl _MainChar
                             29 ;--------------------------------------------------------
                             30 ; special function registers
                             31 ;--------------------------------------------------------
                             32 ;--------------------------------------------------------
                             33 ; ram data
                             34 ;--------------------------------------------------------
                             35 	.area _DATA
   0000                      36 _MainChar::
   0000                      37 	.ds 48
   0030                      38 _joypad_prev_state:
   0030                      39 	.ds 1
   0031                      40 _joypad_curr_state:
   0031                      41 	.ds 1
   0032                      42 _input_timer:
   0032                      43 	.ds 1
   0033                      44 _total_sprites::
   0033                      45 	.ds 1
   0034                      46 _sprites::
   0034                      47 	.ds 80
   0084                      48 _GRAVITY:
   0084                      49 	.ds 1
   0085                      50 _gravity_time::
   0085                      51 	.ds 1
                             52 ;--------------------------------------------------------
                             53 ; absolute external ram data
                             54 ;--------------------------------------------------------
                             55 	.area _DABS (ABS)
                             56 ;--------------------------------------------------------
                             57 ; global & static initialisations
                             58 ;--------------------------------------------------------
                             59 	.area _HOME
                             60 	.area _GSINIT
                             61 	.area _GSFINAL
                             62 	.area _GSINIT
                             63 ;./src/../sprites/char.c:26: unsigned char MainChar[] =
   0000 21r00r00             64 	ld	hl, #_MainChar
   0003 36 00                65 	ld	(hl), #0x00
   0005 21r01r00             66 	ld	hl, #(_MainChar + 0x0001)
   0008 36 00                67 	ld	(hl), #0x00
   000A 21r02r00             68 	ld	hl, #(_MainChar + 0x0002)
   000D 36 7E                69 	ld	(hl), #0x7e
   000F 21r03r00             70 	ld	hl, #(_MainChar + 0x0003)
   0012 36 7E                71 	ld	(hl), #0x7e
   0014 21r04r00             72 	ld	hl, #(_MainChar + 0x0004)
   0017 36 42                73 	ld	(hl), #0x42
   0019 21r05r00             74 	ld	hl, #(_MainChar + 0x0005)
   001C 36 76                75 	ld	(hl), #0x76
   001E 21r06r00             76 	ld	hl, #(_MainChar + 0x0006)
   0021 36 42                77 	ld	(hl), #0x42
   0023 21r07r00             78 	ld	hl, #(_MainChar + 0x0007)
   0026 36 76                79 	ld	(hl), #0x76
   0028 21r08r00             80 	ld	hl, #(_MainChar + 0x0008)
   002B 36 4A                81 	ld	(hl), #0x4a
   002D 21r09r00             82 	ld	hl, #(_MainChar + 0x0009)
   0030 36 4A                83 	ld	(hl), #0x4a
   0032 21r0Ar00             84 	ld	hl, #(_MainChar + 0x000a)
   0035 36 7E                85 	ld	(hl), #0x7e
   0037 21r0Br00             86 	ld	hl, #(_MainChar + 0x000b)
   003A 36 7E                87 	ld	(hl), #0x7e
   003C 21r0Cr00             88 	ld	hl, #(_MainChar + 0x000c)
   003F 36 36                89 	ld	(hl), #0x36
   0041 21r0Dr00             90 	ld	hl, #(_MainChar + 0x000d)
   0044 36 36                91 	ld	(hl), #0x36
   0046 21r0Er00             92 	ld	hl, #(_MainChar + 0x000e)
   0049 36 36                93 	ld	(hl), #0x36
   004B 21r0Fr00             94 	ld	hl, #(_MainChar + 0x000f)
   004E 36 36                95 	ld	(hl), #0x36
   0050 21r10r00             96 	ld	hl, #(_MainChar + 0x0010)
   0053 36 00                97 	ld	(hl), #0x00
   0055 21r11r00             98 	ld	hl, #(_MainChar + 0x0011)
   0058 36 00                99 	ld	(hl), #0x00
   005A 21r12r00            100 	ld	hl, #(_MainChar + 0x0012)
   005D 36 7E               101 	ld	(hl), #0x7e
   005F 21r13r00            102 	ld	hl, #(_MainChar + 0x0013)
   0062 36 7E               103 	ld	(hl), #0x7e
   0064 21r14r00            104 	ld	hl, #(_MainChar + 0x0014)
   0067 36 42               105 	ld	(hl), #0x42
   0069 21r15r00            106 	ld	hl, #(_MainChar + 0x0015)
   006C 36 76               107 	ld	(hl), #0x76
   006E 21r16r00            108 	ld	hl, #(_MainChar + 0x0016)
   0071 36 42               109 	ld	(hl), #0x42
   0073 21r17r00            110 	ld	hl, #(_MainChar + 0x0017)
   0076 36 76               111 	ld	(hl), #0x76
   0078 21r18r00            112 	ld	hl, #(_MainChar + 0x0018)
   007B 36 4A               113 	ld	(hl), #0x4a
   007D 21r19r00            114 	ld	hl, #(_MainChar + 0x0019)
   0080 36 4A               115 	ld	(hl), #0x4a
   0082 21r1Ar00            116 	ld	hl, #(_MainChar + 0x001a)
   0085 36 7E               117 	ld	(hl), #0x7e
   0087 21r1Br00            118 	ld	hl, #(_MainChar + 0x001b)
   008A 36 7E               119 	ld	(hl), #0x7e
   008C 21r1Cr00            120 	ld	hl, #(_MainChar + 0x001c)
   008F 36 36               121 	ld	(hl), #0x36
   0091 21r1Dr00            122 	ld	hl, #(_MainChar + 0x001d)
   0094 36 36               123 	ld	(hl), #0x36
   0096 21r1Er00            124 	ld	hl, #(_MainChar + 0x001e)
   0099 36 30               125 	ld	(hl), #0x30
   009B 21r1Fr00            126 	ld	hl, #(_MainChar + 0x001f)
   009E 36 30               127 	ld	(hl), #0x30
   00A0 21r20r00            128 	ld	hl, #(_MainChar + 0x0020)
   00A3 36 00               129 	ld	(hl), #0x00
   00A5 21r21r00            130 	ld	hl, #(_MainChar + 0x0021)
   00A8 36 00               131 	ld	(hl), #0x00
   00AA 21r22r00            132 	ld	hl, #(_MainChar + 0x0022)
   00AD 36 7E               133 	ld	(hl), #0x7e
   00AF 21r23r00            134 	ld	hl, #(_MainChar + 0x0023)
   00B2 36 7E               135 	ld	(hl), #0x7e
   00B4 21r24r00            136 	ld	hl, #(_MainChar + 0x0024)
   00B7 36 42               137 	ld	(hl), #0x42
   00B9 21r25r00            138 	ld	hl, #(_MainChar + 0x0025)
   00BC 36 76               139 	ld	(hl), #0x76
   00BE 21r26r00            140 	ld	hl, #(_MainChar + 0x0026)
   00C1 36 42               141 	ld	(hl), #0x42
   00C3 21r27r00            142 	ld	hl, #(_MainChar + 0x0027)
   00C6 36 76               143 	ld	(hl), #0x76
   00C8 21r28r00            144 	ld	hl, #(_MainChar + 0x0028)
   00CB 36 4A               145 	ld	(hl), #0x4a
   00CD 21r29r00            146 	ld	hl, #(_MainChar + 0x0029)
   00D0 36 4A               147 	ld	(hl), #0x4a
   00D2 21r2Ar00            148 	ld	hl, #(_MainChar + 0x002a)
   00D5 36 7E               149 	ld	(hl), #0x7e
   00D7 21r2Br00            150 	ld	hl, #(_MainChar + 0x002b)
   00DA 36 7E               151 	ld	(hl), #0x7e
   00DC 21r2Cr00            152 	ld	hl, #(_MainChar + 0x002c)
   00DF 36 36               153 	ld	(hl), #0x36
   00E1 21r2Dr00            154 	ld	hl, #(_MainChar + 0x002d)
   00E4 36 36               155 	ld	(hl), #0x36
   00E6 21r2Er00            156 	ld	hl, #(_MainChar + 0x002e)
   00E9 36 06               157 	ld	(hl), #0x06
   00EB 21r2Fr00            158 	ld	hl, #(_MainChar + 0x002f)
   00EE 36 06               159 	ld	(hl), #0x06
                            160 ;./src/main.c:7: INT8 total_sprites = -1;
   00F0 21r33r00            161 	ld	hl, #_total_sprites
   00F3 36 FF               162 	ld	(hl), #0xff
                            163 ;./src/main.c:47: MSprite* sprites[40] = {0};
   00F5 21r34r00            164 	ld	hl, #_sprites
   00F8 AF                  165 	xor	a, a
   00F9 22                  166 	ld	(hl+), a
   00FA 77                  167 	ld	(hl), a
                            168 ;./src/main.c:72: static UINT8 GRAVITY = 2;
   00FB 21r84r00            169 	ld	hl, #_GRAVITY
   00FE 36 02               170 	ld	(hl), #0x02
                            171 ;./src/main.c:73: UINT8 gravity_time = 0;
   0100 21r85r00            172 	ld	hl, #_gravity_time
   0103 36 00               173 	ld	(hl), #0x00
                            174 ;--------------------------------------------------------
                            175 ; Home
                            176 ;--------------------------------------------------------
                            177 	.area _HOME
                            178 	.area _HOME
                            179 ;--------------------------------------------------------
                            180 ; code
                            181 ;--------------------------------------------------------
                            182 	.area _CODE
                            183 ;./src/../src/input.c:92: static void joypad_wait (UINT8 buttons)
                            184 ;	---------------------------------
                            185 ; Function joypad_wait
                            186 ; ---------------------------------
   0000                     187 _joypad_wait:
                            188 ;./src/../src/input.c:94: while (TRUE) {
   0000                     189 00108$:
                            190 ;./src/../src/input.c:95: UPDATE_JOYPAD_STATE;
   0000 E5                  191 	push	hl
   0001 21r31r00            192 	ld	hl, #_joypad_curr_state
   0004 7E                  193 	ld	a, (hl)
   0005 21r30r00            194 	ld	hl, #_joypad_prev_state
   0008 77                  195 	ld	(hl), a
   0009 E1                  196 	pop	hl
   000A CDr00r00            197 	call	_joypad
   000D 21r31r00            198 	ld	hl, #_joypad_curr_state
   0010 73                  199 	ld	(hl), e
                            200 ;./src/../src/input.c:96: if (JOYPAD_PRESSED(buttons)) {
   0011 21r30r00            201 	ld	hl, #_joypad_prev_state
   0014 7E                  202 	ld	a, (hl)
   0015 F8 02               203 	ldhl	sp,	#2
   0017 A6                  204 	and	a,(hl)
   0018 20 08               205 	jr	NZ,00105$
   001A 21r31r00            206 	ld	hl, #_joypad_curr_state
   001D 7E                  207 	ld	a, (hl)
   001E F8 02               208 	ldhl	sp,	#2
   0020 A6                  209 	and	a,(hl)
   0021 C0                  210 	ret	NZ
                            211 ;./src/../src/input.c:97: break;
   0022                     212 00105$:
                            213 ;./src/../src/input.c:99: wait_vbl_done();
   0022 CDr00r00            214 	call	_wait_vbl_done
   0025 18 D9               215 	jr	00108$
                            216 ;./src/../src/input.c:101: }
   0027 C9                  217 	ret
                            218 ;./src/../src/input.c:104: static bool joypad_waittimeout (UINT8 buttons, UINT8 timeout)
                            219 ;	---------------------------------
                            220 ; Function joypad_waittimeout
                            221 ; ---------------------------------
   0028                     222 _joypad_waittimeout:
                            223 ;./src/../src/input.c:106: for (input_timer=0; input_timer<timeout; ++input_timer) {
   0028 21r32r00            224 	ld	hl, #_input_timer
   002B 36 00               225 	ld	(hl), #0x00
   002D                     226 00109$:
   002D 21r32r00            227 	ld	hl, #_input_timer
   0030 7E                  228 	ld	a, (hl)
   0031 F8 03               229 	ldhl	sp,	#3
   0033 96                  230 	sub	a, (hl)
   0034 30 2F               231 	jr	NC,00107$
                            232 ;./src/../src/input.c:107: UPDATE_JOYPAD_STATE;
   0036 E5                  233 	push	hl
   0037 21r31r00            234 	ld	hl, #_joypad_curr_state
   003A 7E                  235 	ld	a, (hl)
   003B 21r30r00            236 	ld	hl, #_joypad_prev_state
   003E 77                  237 	ld	(hl), a
   003F E1                  238 	pop	hl
   0040 CDr00r00            239 	call	_joypad
   0043 21r31r00            240 	ld	hl, #_joypad_curr_state
   0046 73                  241 	ld	(hl), e
                            242 ;./src/../src/input.c:108: if (JOYPAD_PRESSED(buttons)) {
   0047 21r30r00            243 	ld	hl, #_joypad_prev_state
   004A 7E                  244 	ld	a, (hl)
   004B F8 02               245 	ldhl	sp,	#2
   004D A6                  246 	and	a,(hl)
   004E 20 0C               247 	jr	NZ,00105$
   0050 21r31r00            248 	ld	hl, #_joypad_curr_state
   0053 7E                  249 	ld	a, (hl)
   0054 F8 02               250 	ldhl	sp,	#2
   0056 A6                  251 	and	a,(hl)
   0057 28 03               252 	jr	Z,00105$
                            253 ;./src/../src/input.c:109: return TRUE;
   0059 1E 01               254 	ld	e, #0x01
   005B C9                  255 	ret
   005C                     256 00105$:
                            257 ;./src/../src/input.c:111: wait_vbl_done();
   005C CDr00r00            258 	call	_wait_vbl_done
                            259 ;./src/../src/input.c:106: for (input_timer=0; input_timer<timeout; ++input_timer) {
   005F 21r32r00            260 	ld	hl, #_input_timer
   0062 34                  261 	inc	(hl)
   0063 18 C8               262 	jr	00109$
   0065                     263 00107$:
                            264 ;./src/../src/input.c:113: return FALSE;
   0065 1E 00               265 	ld	e, #0x00
                            266 ;./src/../src/input.c:114: }
   0067 C9                  267 	ret
                            268 ;./src/main.c:8: UINT8 create_sprite_num(){
                            269 ;	---------------------------------
                            270 ; Function create_sprite_num
                            271 ; ---------------------------------
   0068                     272 _create_sprite_num::
                            273 ;./src/main.c:9: ++total_sprites;
   0068 21r33r00            274 	ld	hl, #_total_sprites
   006B 34                  275 	inc	(hl)
                            276 ;./src/main.c:10: return total_sprites;
   006C 5E                  277 	ld	e, (hl)
                            278 ;./src/main.c:11: }
   006D C9                  279 	ret
                            280 ;./src/main.c:13: void performantdelay(UINT8 numloops){
                            281 ;	---------------------------------
                            282 ; Function performantdelay
                            283 ; ---------------------------------
   006E                     284 _performantdelay::
                            285 ;./src/main.c:15: for(i = 0; i < numloops; i++){
   006E 0E 00               286 	ld	c, #0x00
   0070                     287 00103$:
   0070 79                  288 	ld	a, c
   0071 F8 02               289 	ldhl	sp,	#2
   0073 96                  290 	sub	a, (hl)
   0074 D0                  291 	ret	NC
                            292 ;./src/main.c:16: wait_vbl_done();
   0075 C5                  293 	push	bc
   0076 CDr00r00            294 	call	_wait_vbl_done
   0079 C1                  295 	pop	bc
                            296 ;./src/main.c:15: for(i = 0; i < numloops; i++){
   007A 0C                  297 	inc	c
   007B 18 F3               298 	jr	00103$
                            299 ;./src/main.c:18: }
   007D C9                  300 	ret
                            301 ;./src/main.c:49: void draw(MSprite* sprite){
                            302 ;	---------------------------------
                            303 ; Function draw
                            304 ; ---------------------------------
   007E                     305 _draw::
   007E E8 FB               306 	add	sp, #-5
                            307 ;./src/main.c:50: move_sprite(sprite->sprite_number, sprite->position.x, sprite->position.y);
   0080 F8 07               308 	ldhl	sp,#(8 - 1)
   0082 4E                  309 	ld	c, (hl)
   0083 23                  310 	inc	hl
   0084 46                  311 	ld	b, (hl)
   0085 21 01 00            312 	ld	hl, #0x0001
   0088 09                  313 	add	hl, bc
   0089 33                  314 	inc	sp
   008A 33                  315 	inc	sp
   008B E5                  316 	push	hl
   008C D1                  317 	pop	de
   008D D5                  318 	push	de
   008E 1A                  319 	ld	a,(de)
   008F F8 03               320 	ldhl	sp,	#3
   0091 77                  321 	ld	(hl), a
   0092 0A                  322 	ld	a, (bc)
   0093 23                  323 	inc	hl
   0094 77                  324 	ld	(hl), a
   0095 03                  325 	inc	bc
   0096 03                  326 	inc	bc
   0097 03                  327 	inc	bc
   0098 03                  328 	inc	bc
   0099 0A                  329 	ld	a, (bc)
   009A 47                  330 	ld	b, a
   009B 2B                  331 	dec	hl
   009C 7E                  332 	ld	a, (hl)
   009D F5                  333 	push	af
   009E 33                  334 	inc	sp
   009F 23                  335 	inc	hl
   00A0 7E                  336 	ld	a, (hl)
   00A1 F5                  337 	push	af
   00A2 33                  338 	inc	sp
   00A3 C5                  339 	push	bc
   00A4 33                  340 	inc	sp
   00A5 CDr00r00            341 	call	_move_sprite
   00A8 E8 03               342 	add	sp, #3
                            343 ;./src/main.c:51: }
   00AA E8 05               344 	add	sp, #5
   00AC C9                  345 	ret
                            346 ;./src/main.c:64: void next_animation(MSprite* sprite){
                            347 ;	---------------------------------
                            348 ; Function next_animation
                            349 ; ---------------------------------
   00AD                     350 _next_animation::
   00AD E8 FB               351 	add	sp, #-5
                            352 ;./src/main.c:65: ++(sprite->animation_index);
   00AF F8 07               353 	ldhl	sp,	#7
   00B1 2A                  354 	ld	a, (hl+)
   00B2 5E                  355 	ld	e, (hl)
   00B3 F8 00               356 	ldhl	sp,	#0
   00B5 22                  357 	ld	(hl+), a
   00B6 73                  358 	ld	(hl), e
   00B7 C1                  359 	pop	bc
   00B8 C5                  360 	push	bc
   00B9 03                  361 	inc	bc
   00BA 03                  362 	inc	bc
   00BB 0A                  363 	ld	a, (bc)
   00BC 3C                  364 	inc	a
   00BD 23                  365 	inc	hl
   00BE 77                  366 	ld	(hl),a
   00BF 02                  367 	ld	(bc), a
                            368 ;./src/main.c:66: if(sprite->animation_index == sprite->max_animations){
   00C0 D1                  369 	pop	de
   00C1 D5                  370 	push	de
   00C2 21 03 00            371 	ld	hl, #0x0003
   00C5 19                  372 	add	hl, de
   00C6 7D                  373 	ld	a, l
   00C7 54                  374 	ld	d, h
   00C8 F8 03               375 	ldhl	sp,	#3
   00CA 22                  376 	ld	(hl+), a
   00CB 72                  377 	ld	(hl), d
   00CC 2B                  378 	dec	hl
   00CD 5E                  379 	ld	e, (hl)
   00CE 23                  380 	inc	hl
   00CF 56                  381 	ld	d, (hl)
   00D0 1A                  382 	ld	a,(de)
   00D1 32                  383 	ld	(hl-), a
   00D2 2B                  384 	dec	hl
   00D3 2A                  385 	ld	a, (hl+)
   00D4 23                  386 	inc	hl
   00D5 96                  387 	sub	a, (hl)
   00D6 20 02               388 	jr	NZ,00102$
                            389 ;./src/main.c:67: sprite->animation_index = 0;
   00D8 AF                  390 	xor	a, a
   00D9 02                  391 	ld	(bc), a
   00DA                     392 00102$:
                            393 ;./src/main.c:69: set_sprite_tile(sprite->sprite_number, sprite->animation_index);
   00DA 0A                  394 	ld	a, (bc)
   00DB 47                  395 	ld	b, a
   00DC D1                  396 	pop	de
   00DD D5                  397 	push	de
   00DE 21 04 00            398 	ld	hl, #0x0004
   00E1 19                  399 	add	hl, de
   00E2 4D                  400 	ld	c,l
   00E3 7C                  401 	ld	a,h
   00E4 7E                  402 	ld	a, (hl)
   00E5 C5                  403 	push	bc
   00E6 33                  404 	inc	sp
   00E7 F5                  405 	push	af
   00E8 33                  406 	inc	sp
   00E9 CDr00r00            407 	call	_set_sprite_tile
   00EC E8 02               408 	add	sp, #2
                            409 ;./src/main.c:70: }
   00EE E8 05               410 	add	sp, #5
   00F0 C9                  411 	ret
                            412 ;./src/main.c:74: void gravity(MSprite* sprite){
                            413 ;	---------------------------------
                            414 ; Function gravity
                            415 ; ---------------------------------
   00F1                     416 _gravity::
   00F1 E8 FA               417 	add	sp, #-6
                            418 ;./src/main.c:76: sprite->speed.y += GRAVITY;
   00F3 F8 08               419 	ldhl	sp,#(9 - 1)
   00F5 4E                  420 	ld	c, (hl)
   00F6 23                  421 	inc	hl
   00F7 46                  422 	ld	b, (hl)
   00F8 21 06 00            423 	ld	hl, #0x0006
   00FB 09                  424 	add	hl, bc
   00FC 33                  425 	inc	sp
   00FD 33                  426 	inc	sp
   00FE E5                  427 	push	hl
   00FF D1                  428 	pop	de
   0100 D5                  429 	push	de
   0101 1A                  430 	ld	a,(de)
   0102 21r84r00            431 	ld	hl, #_GRAVITY
   0105 5E                  432 	ld	e, (hl)
   0106 83                  433 	add	a, e
   0107 F8 05               434 	ldhl	sp,	#5
   0109 77                  435 	ld	(hl), a
   010A D1                  436 	pop	de
   010B D5                  437 	push	de
   010C 7E                  438 	ld	a, (hl)
   010D 12                  439 	ld	(de), a
                            440 ;./src/main.c:78: if(sprite->position.y + sprite->speed.y > 144){
   010E 03                  441 	inc	bc
   010F F8 02               442 	ldhl	sp,	#2
   0111 71                  443 	ld	(hl), c
   0112 23                  444 	inc	hl
   0113 70                  445 	ld	(hl), b
   0114 2B                  446 	dec	hl
   0115 5E                  447 	ld	e, (hl)
   0116 23                  448 	inc	hl
   0117 56                  449 	ld	d, (hl)
   0118 1A                  450 	ld	a,(de)
   0119 4F                  451 	ld	c, a
   011A 06 00               452 	ld	b, #0x00
   011C 23                  453 	inc	hl
   011D 23                  454 	inc	hl
   011E 3A                  455 	ld	a, (hl-)
   011F 77                  456 	ld	(hl), a
   0120 17                  457 	rla
   0121 9F                  458 	sbc	a, a
   0122 23                  459 	inc	hl
   0123 32                  460 	ld	(hl-), a
   0124 2A                  461 	ld	a, (hl+)
   0125 66                  462 	ld	h, (hl)
   0126 6F                  463 	ld	l, a
   0127 09                  464 	add	hl, bc
   0128 4D                  465 	ld	c, l
   0129 44                  466 	ld	b, h
   012A 78                  467 	ld	a, b
   012B 5F                  468 	ld	e, a
   012C 3E 00               469 	ld	a, #0x00
   012E 57                  470 	ld	d, a
   012F 3E 90               471 	ld	a, #0x90
   0131 B9                  472 	cp	a, c
   0132 3E 00               473 	ld	a, #0x00
   0134 98                  474 	sbc	a, b
   0135 CB 7B               475 	bit	7, e
   0137 28 07               476 	jr	Z,00110$
   0139 CB 7A               477 	bit	7, d
   013B 20 08               478 	jr	NZ,00111$
   013D BF                  479 	cp	a, a
   013E 18 05               480 	jr	00111$
   0140                     481 00110$:
   0140 CB 7A               482 	bit	7, d
   0142 28 01               483 	jr	Z,00111$
   0144 37                  484 	scf
   0145                     485 00111$:
   0145 30 0A               486 	jr	NC,00103$
                            487 ;./src/main.c:79: sprite->speed.y = 0;
   0147 E1                  488 	pop	hl
   0148 E5                  489 	push	hl
   0149 36 00               490 	ld	(hl), #0x00
                            491 ;./src/main.c:80: sprite->position.y = 144;
   014B C1                  492 	pop	bc
   014C E1                  493 	pop	hl
   014D E5                  494 	push	hl
   014E C5                  495 	push	bc
   014F 36 90               496 	ld	(hl), #0x90
   0151                     497 00103$:
                            498 ;./src/main.c:82: }
   0151 E8 06               499 	add	sp, #6
   0153 C9                  500 	ret
                            501 ;./src/main.c:85: void update_position(MSprite* sprite){
                            502 ;	---------------------------------
                            503 ; Function update_position
                            504 ; ---------------------------------
   0154                     505 _update_position::
   0154 E8 FD               506 	add	sp, #-3
                            507 ;./src/main.c:86: sprite->position.x += sprite->speed.x;
   0156 F8 05               508 	ldhl	sp,#(6 - 1)
   0158 4E                  509 	ld	c, (hl)
   0159 23                  510 	inc	hl
   015A 46                  511 	ld	b, (hl)
   015B 0A                  512 	ld	a, (bc)
   015C F8 00               513 	ldhl	sp,	#0
   015E 77                  514 	ld	(hl), a
   015F 21 05 00            515 	ld	hl, #0x0005
   0162 09                  516 	add	hl, bc
   0163 7D                  517 	ld	a, l
   0164 54                  518 	ld	d, h
   0165 F8 01               519 	ldhl	sp,	#1
   0167 22                  520 	ld	(hl+), a
   0168 72                  521 	ld	(hl), d
   0169 2B                  522 	dec	hl
   016A 5E                  523 	ld	e, (hl)
   016B 23                  524 	inc	hl
   016C 56                  525 	ld	d, (hl)
   016D 1A                  526 	ld	a,(de)
   016E 2B                  527 	dec	hl
   016F 2B                  528 	dec	hl
   0170 5E                  529 	ld	e, (hl)
   0171 83                  530 	add	a, e
   0172 02                  531 	ld	(bc), a
                            532 ;./src/main.c:87: sprite->position.y += sprite->speed.y;
   0173 21 01 00            533 	ld	hl, #0x0001
   0176 09                  534 	add	hl, bc
   0177 33                  535 	inc	sp
   0178 33                  536 	inc	sp
   0179 E5                  537 	push	hl
   017A D1                  538 	pop	de
   017B D5                  539 	push	de
   017C 1A                  540 	ld	a,(de)
   017D F8 02               541 	ldhl	sp,	#2
   017F 77                  542 	ld	(hl), a
   0180 21 06 00            543 	ld	hl, #0x0006
   0183 09                  544 	add	hl, bc
   0184 4D                  545 	ld	c, l
   0185 44                  546 	ld	b, h
   0186 0A                  547 	ld	a, (bc)
   0187 F8 02               548 	ldhl	sp,	#2
   0189 4E                  549 	ld	c, (hl)
   018A 81                  550 	add	a, c
   018B 4F                  551 	ld	c, a
   018C E1                  552 	pop	hl
   018D E5                  553 	push	hl
   018E 71                  554 	ld	(hl), c
                            555 ;./src/main.c:102: }
   018F E8 03               556 	add	sp, #3
   0191 C9                  557 	ret
                            558 ;./src/main.c:104: void player_movement(MPlayer* player)
                            559 ;	---------------------------------
                            560 ; Function player_movement
                            561 ; ---------------------------------
   0192                     562 _player_movement::
   0192 E8 F7               563 	add	sp, #-9
                            564 ;./src/main.c:106: MVector movement_speed = {4, 4};
   0194 F8 00               565 	ldhl	sp,	#0
   0196 4D                  566 	ld	c, l
   0197 44                  567 	ld	b, h
   0198 3E 04               568 	ld	a, #0x04
   019A 02                  569 	ld	(bc), a
   019B F8 00               570 	ldhl	sp,	#0
   019D 4D                  571 	ld	c, l
   019E 44                  572 	ld	b, h
   019F 21 01 00            573 	ld	hl, #0x0001
   01A2 09                  574 	add	hl, bc
   01A3 7D                  575 	ld	a, l
   01A4 54                  576 	ld	d, h
   01A5 F8 02               577 	ldhl	sp,	#2
   01A7 22                  578 	ld	(hl+), a
   01A8 72                  579 	ld	(hl), d
   01A9 2B                  580 	dec	hl
   01AA 2A                  581 	ld	a, (hl+)
   01AB 66                  582 	ld	h, (hl)
   01AC 6F                  583 	ld	l, a
   01AD 36 04               584 	ld	(hl), #0x04
                            585 ;./src/main.c:107: UPDATE_JOYPAD_STATE;
   01AF E5                  586 	push	hl
   01B0 21r31r00            587 	ld	hl, #_joypad_curr_state
   01B3 7E                  588 	ld	a, (hl)
   01B4 21r30r00            589 	ld	hl, #_joypad_prev_state
   01B7 77                  590 	ld	(hl), a
   01B8 E1                  591 	pop	hl
   01B9 C5                  592 	push	bc
   01BA CDr00r00            593 	call	_joypad
   01BD C1                  594 	pop	bc
   01BE 21r31r00            595 	ld	hl, #_joypad_curr_state
   01C1 73                  596 	ld	(hl), e
                            597 ;./src/main.c:109: if(JOYPAD_DOWN_PAD_L){
   01C2 C5                  598 	push	bc
   01C3 CDr00r00            599 	call	_joypad
   01C6 F8 06               600 	ldhl	sp,	#6
   01C8 73                  601 	ld	(hl), e
   01C9 C1                  602 	pop	bc
                            603 ;./src/main.c:110: player->sprite.speed.x = -movement_speed.x;
   01CA F8 0B               604 	ldhl	sp,	#11
   01CC 2A                  605 	ld	a, (hl+)
   01CD 5E                  606 	ld	e, (hl)
   01CE F8 05               607 	ldhl	sp,	#5
   01D0 22                  608 	ld	(hl+), a
   01D1 73                  609 	ld	(hl), e
   01D2 2B                  610 	dec	hl
   01D3 5E                  611 	ld	e, (hl)
   01D4 23                  612 	inc	hl
   01D5 56                  613 	ld	d, (hl)
   01D6 21 05 00            614 	ld	hl, #0x0005
   01D9 19                  615 	add	hl, de
   01DA 7D                  616 	ld	a, l
   01DB 54                  617 	ld	d, h
   01DC F8 07               618 	ldhl	sp,	#7
   01DE 22                  619 	ld	(hl+), a
   01DF 72                  620 	ld	(hl), d
                            621 ;./src/main.c:109: if(JOYPAD_DOWN_PAD_L){
   01E0 F8 04               622 	ldhl	sp,	#4
   01E2 CB 4E               623 	bit	1, (hl)
   01E4 28 19               624 	jr	Z,00111$
                            625 ;./src/main.c:110: player->sprite.speed.x = -movement_speed.x;
   01E6 0A                  626 	ld	a, (bc)
   01E7 4F                  627 	ld	c, a
   01E8 AF                  628 	xor	a, a
   01E9 91                  629 	sub	a, c
   01EA 4F                  630 	ld	c, a
   01EB F8 07               631 	ldhl	sp,	#7
   01ED 2A                  632 	ld	a, (hl+)
   01EE 66                  633 	ld	h, (hl)
   01EF 6F                  634 	ld	l, a
   01F0 71                  635 	ld	(hl), c
                            636 ;./src/main.c:111: next_animation(&(player->sprite));
   01F1 F8 05               637 	ldhl	sp,	#5
   01F3 2A                  638 	ld	a, (hl+)
   01F4 66                  639 	ld	h, (hl)
   01F5 6F                  640 	ld	l, a
   01F6 E5                  641 	push	hl
   01F7 CDrADr00            642 	call	_next_animation
   01FA E8 02               643 	add	sp, #2
   01FC C3r32r02            644 	jp	00112$
   01FF                     645 00111$:
                            646 ;./src/main.c:113: else if(JOYPAD_DOWN_PAD_R){
   01FF C5                  647 	push	bc
   0200 CDr00r00            648 	call	_joypad
   0203 7B                  649 	ld	a, e
   0204 C1                  650 	pop	bc
   0205 0F                  651 	rrca
   0206 30 15               652 	jr	NC,00108$
                            653 ;./src/main.c:114: player->sprite.speed.x = movement_speed.x;
   0208 0A                  654 	ld	a, (bc)
   0209 4F                  655 	ld	c, a
   020A F8 07               656 	ldhl	sp,	#7
   020C 2A                  657 	ld	a, (hl+)
   020D 66                  658 	ld	h, (hl)
   020E 6F                  659 	ld	l, a
   020F 71                  660 	ld	(hl), c
                            661 ;./src/main.c:115: next_animation(&(player->sprite));
   0210 F8 05               662 	ldhl	sp,	#5
   0212 2A                  663 	ld	a, (hl+)
   0213 66                  664 	ld	h, (hl)
   0214 6F                  665 	ld	l, a
   0215 E5                  666 	push	hl
   0216 CDrADr00            667 	call	_next_animation
   0219 E8 02               668 	add	sp, #2
   021B 18 15               669 	jr	00112$
   021D                     670 00108$:
                            671 ;./src/main.c:118: else if(JOYPAD_UP_PAD_L && JOYPAD_UP_PAD_R){
   021D CDr00r00            672 	call	_joypad
   0220 CB 4B               673 	bit	1, e
   0222 20 0E               674 	jr	NZ,00112$
   0224 CDr00r00            675 	call	_joypad
   0227 7B                  676 	ld	a, e
   0228 0F                  677 	rrca
   0229 38 07               678 	jr	C,00112$
                            679 ;./src/main.c:119: player->sprite.speed.x = 0;
   022B F8 07               680 	ldhl	sp,	#7
   022D 2A                  681 	ld	a, (hl+)
   022E 66                  682 	ld	h, (hl)
   022F 6F                  683 	ld	l, a
   0230 36 00               684 	ld	(hl), #0x00
   0232                     685 00112$:
                            686 ;./src/main.c:129: if(JOYPAD_DOWN_PAD_D){
   0232 CDr00r00            687 	call	_joypad
   0235 F8 08               688 	ldhl	sp,	#8
   0237 73                  689 	ld	(hl), e
                            690 ;./src/main.c:130: player->sprite.speed.y = movement_speed.y;
   0238 F8 05               691 	ldhl	sp,#(6 - 1)
   023A 5E                  692 	ld	e, (hl)
   023B 23                  693 	inc	hl
   023C 56                  694 	ld	d, (hl)
   023D 21 06 00            695 	ld	hl, #0x0006
   0240 19                  696 	add	hl, de
   0241 4D                  697 	ld	c, l
   0242 44                  698 	ld	b, h
                            699 ;./src/main.c:129: if(JOYPAD_DOWN_PAD_D){
   0243 F8 08               700 	ldhl	sp,	#8
   0245 CB 5E               701 	bit	3, (hl)
   0247 28 09               702 	jr	Z,00117$
                            703 ;./src/main.c:130: player->sprite.speed.y = movement_speed.y;
   0249 F8 02               704 	ldhl	sp,#(3 - 1)
   024B 5E                  705 	ld	e, (hl)
   024C 23                  706 	inc	hl
   024D 56                  707 	ld	d, (hl)
   024E 1A                  708 	ld	a,(de)
   024F 02                  709 	ld	(bc), a
   0250 18 20               710 	jr	00119$
   0252                     711 00117$:
                            712 ;./src/main.c:132: else if(JOYPAD_RELEASED_PAD_D){
   0252 21r30r00            713 	ld	hl, #_joypad_prev_state
   0255 7E                  714 	ld	a, (hl)
   0256 CB 5F               715 	bit	3, a
   0258 28 18               716 	jr	Z,00119$
   025A 21r31r00            717 	ld	hl, #_joypad_curr_state
   025D 7E                  718 	ld	a, (hl)
   025E CB 5F               719 	bit	3, a
   0260 20 10               720 	jr	NZ,00119$
                            721 ;./src/main.c:133: player->sprite.speed.y -= movement_speed.y;
   0262 0A                  722 	ld	a, (bc)
   0263 F8 08               723 	ldhl	sp,	#8
   0265 77                  724 	ld	(hl), a
   0266 F8 02               725 	ldhl	sp,#(3 - 1)
   0268 5E                  726 	ld	e, (hl)
   0269 23                  727 	inc	hl
   026A 56                  728 	ld	d, (hl)
   026B 1A                  729 	ld	a,(de)
   026C F8 07               730 	ldhl	sp,	#7
   026E 22                  731 	ld	(hl+), a
   026F 3A                  732 	ld	a, (hl-)
   0270 96                  733 	sub	a, (hl)
   0271 02                  734 	ld	(bc), a
   0272                     735 00119$:
                            736 ;./src/main.c:135: }
   0272 E8 09               737 	add	sp, #9
   0274 C9                  738 	ret
                            739 ;./src/main.c:137: void jump(MPlayer* player){
                            740 ;	---------------------------------
                            741 ; Function jump
                            742 ; ---------------------------------
   0275                     743 _jump::
   0275 E8 FD               744 	add	sp, #-3
                            745 ;./src/main.c:139: if(player->sprite.col.has_collided == true){
   0277 F8 05               746 	ldhl	sp,#(6 - 1)
   0279 4E                  747 	ld	c, (hl)
   027A 23                  748 	inc	hl
   027B 46                  749 	ld	b, (hl)
   027C 21 07 00            750 	ld	hl, #0x0007
   027F 09                  751 	add	hl, bc
   0280 7D                  752 	ld	a, l
   0281 54                  753 	ld	d, h
   0282 F8 01               754 	ldhl	sp,	#1
   0284 22                  755 	ld	(hl+), a
   0285 72                  756 	ld	(hl), d
   0286 2B                  757 	dec	hl
   0287 5E                  758 	ld	e, (hl)
   0288 23                  759 	inc	hl
   0289 56                  760 	ld	d, (hl)
   028A 1A                  761 	ld	a,(de)
   028B 2B                  762 	dec	hl
   028C 2B                  763 	dec	hl
   028D 77                  764 	ld	(hl), a
                            765 ;./src/main.c:140: player->jumped = false;
   028E 21 0C 00            766 	ld	hl, #0x000c
   0291 09                  767 	add	hl, bc
   0292 7D                  768 	ld	a, l
   0293 54                  769 	ld	d, h
   0294 F8 01               770 	ldhl	sp,	#1
   0296 22                  771 	ld	(hl+), a
   0297 72                  772 	ld	(hl), d
                            773 ;./src/main.c:139: if(player->sprite.col.has_collided == true){
   0298 2B                  774 	dec	hl
   0299 2B                  775 	dec	hl
   029A CB 46               776 	bit	0, (hl)
   029C 28 06               777 	jr	Z,00102$
                            778 ;./src/main.c:140: player->jumped = false;
   029E 23                  779 	inc	hl
   029F 2A                  780 	ld	a, (hl+)
   02A0 66                  781 	ld	h, (hl)
   02A1 6F                  782 	ld	l, a
   02A2 36 00               783 	ld	(hl), #0x00
   02A4                     784 00102$:
                            785 ;./src/main.c:143: if(!(joypad_prev_state & J_UP) && JOYPAD_DOWN_PAD_U && !(player->jumped)){
   02A4 21r30r00            786 	ld	hl, #_joypad_prev_state
   02A7 7E                  787 	ld	a, (hl)
   02A8 CB 57               788 	bit	2, a
   02AA 20 22               789 	jr	NZ,00107$
   02AC C5                  790 	push	bc
   02AD CDr00r00            791 	call	_joypad
   02B0 C1                  792 	pop	bc
   02B1 CB 53               793 	bit	2, e
   02B3 28 19               794 	jr	Z,00107$
   02B5 F8 01               795 	ldhl	sp,#(2 - 1)
   02B7 5E                  796 	ld	e, (hl)
   02B8 23                  797 	inc	hl
   02B9 56                  798 	ld	d, (hl)
   02BA 1A                  799 	ld	a,(de)
   02BB CB 47               800 	bit	0, a
   02BD 20 0F               801 	jr	NZ,00107$
                            802 ;./src/main.c:144: player->sprite.speed.y = -5;
   02BF 21 06 00            803 	ld	hl, #0x0006
   02C2 09                  804 	add	hl, bc
   02C3 4D                  805 	ld	c,l
   02C4 7C                  806 	ld	a,h
   02C5 36 FB               807 	ld	(hl), #0xfb
                            808 ;./src/main.c:145: player->jumped = true;
   02C7 F8 01               809 	ldhl	sp,	#1
   02C9 2A                  810 	ld	a, (hl+)
   02CA 66                  811 	ld	h, (hl)
   02CB 6F                  812 	ld	l, a
   02CC 36 01               813 	ld	(hl), #0x01
   02CE                     814 00107$:
                            815 ;./src/main.c:147: }
   02CE E8 03               816 	add	sp, #3
   02D0 C9                  817 	ret
                            818 ;./src/main.c:149: void main()
                            819 ;	---------------------------------
                            820 ; Function main
                            821 ; ---------------------------------
   02D1                     822 _main::
   02D1 E8 E8               823 	add	sp, #-24
                            824 ;./src/main.c:151: UPDATE_JOYPAD_STATE;
   02D3 E5                  825 	push	hl
   02D4 21r31r00            826 	ld	hl, #_joypad_curr_state
   02D7 7E                  827 	ld	a, (hl)
   02D8 21r30r00            828 	ld	hl, #_joypad_prev_state
   02DB 77                  829 	ld	(hl), a
   02DC E1                  830 	pop	hl
   02DD CDr00r00            831 	call	_joypad
   02E0 21r31r00            832 	ld	hl, #_joypad_curr_state
   02E3 73                  833 	ld	(hl), e
                            834 ;./src/main.c:153: MPlayer player = {{{88, 78}, 0, 3, 0, {0, 0}, {false}}, false, 6, 0, false, 60, 0};
   02E4 F8 00               835 	ldhl	sp,	#0
   02E6 7D                  836 	ld	a, l
   02E7 54                  837 	ld	d, h
   02E8 F8 16               838 	ldhl	sp,	#22
   02EA 22                  839 	ld	(hl+), a
   02EB 72                  840 	ld	(hl), d
   02EC 2B                  841 	dec	hl
   02ED 2A                  842 	ld	a, (hl+)
   02EE 66                  843 	ld	h, (hl)
   02EF 6F                  844 	ld	l, a
   02F0 36 58               845 	ld	(hl), #0x58
   02F2 F8 16               846 	ldhl	sp,#(23 - 1)
   02F4 4E                  847 	ld	c, (hl)
   02F5 23                  848 	inc	hl
   02F6 46                  849 	ld	b, (hl)
   02F7 03                  850 	inc	bc
   02F8 3E 4E               851 	ld	a, #0x4e
   02FA 02                  852 	ld	(bc), a
   02FB 2B                  853 	dec	hl
   02FC 4E                  854 	ld	c, (hl)
   02FD 23                  855 	inc	hl
   02FE 46                  856 	ld	b, (hl)
   02FF 03                  857 	inc	bc
   0300 03                  858 	inc	bc
   0301 AF                  859 	xor	a, a
   0302 02                  860 	ld	(bc), a
   0303 2B                  861 	dec	hl
   0304 4E                  862 	ld	c, (hl)
   0305 23                  863 	inc	hl
   0306 46                  864 	ld	b, (hl)
   0307 03                  865 	inc	bc
   0308 03                  866 	inc	bc
   0309 03                  867 	inc	bc
   030A 3E 03               868 	ld	a, #0x03
   030C 02                  869 	ld	(bc), a
   030D 2B                  870 	dec	hl
   030E 5E                  871 	ld	e, (hl)
   030F 23                  872 	inc	hl
   0310 56                  873 	ld	d, (hl)
   0311 21 04 00            874 	ld	hl, #0x0004
   0314 19                  875 	add	hl, de
   0315 4D                  876 	ld	c, l
   0316 44                  877 	ld	b, h
   0317 AF                  878 	xor	a, a
   0318 02                  879 	ld	(bc), a
   0319 F8 16               880 	ldhl	sp,#(23 - 1)
   031B 5E                  881 	ld	e, (hl)
   031C 23                  882 	inc	hl
   031D 56                  883 	ld	d, (hl)
   031E 21 05 00            884 	ld	hl, #0x0005
   0321 19                  885 	add	hl, de
   0322 4D                  886 	ld	c, l
   0323 44                  887 	ld	b, h
   0324 AF                  888 	xor	a, a
   0325 02                  889 	ld	(bc), a
   0326 F8 16               890 	ldhl	sp,#(23 - 1)
   0328 5E                  891 	ld	e, (hl)
   0329 23                  892 	inc	hl
   032A 56                  893 	ld	d, (hl)
   032B 21 06 00            894 	ld	hl, #0x0006
   032E 19                  895 	add	hl, de
   032F 4D                  896 	ld	c, l
   0330 44                  897 	ld	b, h
   0331 AF                  898 	xor	a, a
   0332 02                  899 	ld	(bc), a
   0333 F8 16               900 	ldhl	sp,#(23 - 1)
   0335 5E                  901 	ld	e, (hl)
   0336 23                  902 	inc	hl
   0337 56                  903 	ld	d, (hl)
   0338 21 07 00            904 	ld	hl, #0x0007
   033B 19                  905 	add	hl, de
   033C 4D                  906 	ld	c, l
   033D 44                  907 	ld	b, h
   033E AF                  908 	xor	a, a
   033F 02                  909 	ld	(bc), a
   0340 F8 00               910 	ldhl	sp,	#0
   0342 7D                  911 	ld	a, l
   0343 54                  912 	ld	d, h
   0344 F8 10               913 	ldhl	sp,	#16
   0346 22                  914 	ld	(hl+), a
   0347 72                  915 	ld	(hl), d
   0348 2B                  916 	dec	hl
   0349 5E                  917 	ld	e, (hl)
   034A 23                  918 	inc	hl
   034B 56                  919 	ld	d, (hl)
   034C 21 08 00            920 	ld	hl, #0x0008
   034F 19                  921 	add	hl, de
   0350 4D                  922 	ld	c, l
   0351 44                  923 	ld	b, h
   0352 AF                  924 	xor	a, a
   0353 02                  925 	ld	(bc), a
   0354 F8 10               926 	ldhl	sp,#(17 - 1)
   0356 5E                  927 	ld	e, (hl)
   0357 23                  928 	inc	hl
   0358 56                  929 	ld	d, (hl)
   0359 21 09 00            930 	ld	hl, #0x0009
   035C 19                  931 	add	hl, de
   035D 4D                  932 	ld	c,l
   035E 7C                  933 	ld	a,h
   035F 36 06               934 	ld	(hl), #0x06
   0361 F8 10               935 	ldhl	sp,#(17 - 1)
   0363 5E                  936 	ld	e, (hl)
   0364 23                  937 	inc	hl
   0365 56                  938 	ld	d, (hl)
   0366 21 0A 00            939 	ld	hl, #0x000a
   0369 19                  940 	add	hl, de
   036A 4D                  941 	ld	c, l
   036B 44                  942 	ld	b, h
   036C AF                  943 	xor	a, a
   036D 02                  944 	ld	(bc), a
   036E 03                  945 	inc	bc
   036F 02                  946 	ld	(bc), a
   0370 F8 10               947 	ldhl	sp,#(17 - 1)
   0372 5E                  948 	ld	e, (hl)
   0373 23                  949 	inc	hl
   0374 56                  950 	ld	d, (hl)
   0375 21 0C 00            951 	ld	hl, #0x000c
   0378 19                  952 	add	hl, de
   0379 4D                  953 	ld	c, l
   037A 44                  954 	ld	b, h
   037B AF                  955 	xor	a, a
   037C 02                  956 	ld	(bc), a
   037D F8 10               957 	ldhl	sp,#(17 - 1)
   037F 5E                  958 	ld	e, (hl)
   0380 23                  959 	inc	hl
   0381 56                  960 	ld	d, (hl)
   0382 21 0D 00            961 	ld	hl, #0x000d
   0385 19                  962 	add	hl, de
   0386 4D                  963 	ld	c,l
   0387 7C                  964 	ld	a,h
   0388 36 3C               965 	ld	(hl), #0x3c
   038A F8 10               966 	ldhl	sp,#(17 - 1)
   038C 5E                  967 	ld	e, (hl)
   038D 23                  968 	inc	hl
   038E 56                  969 	ld	d, (hl)
   038F 21 0E 00            970 	ld	hl, #0x000e
   0392 19                  971 	add	hl, de
   0393 4D                  972 	ld	c, l
   0394 44                  973 	ld	b, h
   0395 AF                  974 	xor	a, a
   0396 02                  975 	ld	(bc), a
   0397 03                  976 	inc	bc
   0398 02                  977 	ld	(bc), a
                            978 ;./src/main.c:154: sprites[0] = &(player.sprite);
   0399 F8 10               979 	ldhl	sp,#(17 - 1)
   039B 4E                  980 	ld	c, (hl)
   039C 23                  981 	inc	hl
   039D 46                  982 	ld	b, (hl)
   039E 21r34r00            983 	ld	hl, #_sprites
   03A1 71                  984 	ld	(hl), c
   03A2 23                  985 	inc	hl
   03A3 70                  986 	ld	(hl), b
                            987 ;./src/main.c:155: set_sprite_data(player.sprite.sprite_number, player.sprite.max_animations, MainChar);
   03A4 F8 10               988 	ldhl	sp,#(17 - 1)
   03A6 4E                  989 	ld	c, (hl)
   03A7 23                  990 	inc	hl
   03A8 46                  991 	ld	b, (hl)
   03A9 03                  992 	inc	bc
   03AA 03                  993 	inc	bc
   03AB 03                  994 	inc	bc
   03AC 0A                  995 	ld	a, (bc)
   03AD 47                  996 	ld	b, a
   03AE 2B                  997 	dec	hl
   03AF 5E                  998 	ld	e, (hl)
   03B0 23                  999 	inc	hl
   03B1 56                 1000 	ld	d, (hl)
   03B2 21 04 00           1001 	ld	hl, #0x0004
   03B5 19                 1002 	add	hl, de
   03B6 7D                 1003 	ld	a, l
   03B7 54                 1004 	ld	d, h
   03B8 F8 16              1005 	ldhl	sp,	#22
   03BA 22                 1006 	ld	(hl+), a
   03BB 72                 1007 	ld	(hl), d
   03BC 2B                 1008 	dec	hl
   03BD 5E                 1009 	ld	e, (hl)
   03BE 23                 1010 	inc	hl
   03BF 56                 1011 	ld	d, (hl)
   03C0 1A                 1012 	ld	a,(de)
   03C1 4F                 1013 	ld	c, a
   03C2 21r00r00           1014 	ld	hl, #_MainChar
   03C5 E5                 1015 	push	hl
   03C6 C5                 1016 	push	bc
   03C7 33                 1017 	inc	sp
   03C8 79                 1018 	ld	a, c
   03C9 F5                 1019 	push	af
   03CA 33                 1020 	inc	sp
   03CB CDr00r00           1021 	call	_set_sprite_data
   03CE E8 04              1022 	add	sp, #4
                           1023 ;./src/main.c:156: set_sprite_tile(player.sprite.sprite_number, player.sprite.animation_index);
   03D0 F8 10              1024 	ldhl	sp,#(17 - 1)
   03D2 4E                 1025 	ld	c, (hl)
   03D3 23                 1026 	inc	hl
   03D4 46                 1027 	ld	b, (hl)
   03D5 03                 1028 	inc	bc
   03D6 03                 1029 	inc	bc
   03D7 0A                 1030 	ld	a, (bc)
   03D8 47                 1031 	ld	b, a
   03D9 F8 16              1032 	ldhl	sp,#(23 - 1)
   03DB 5E                 1033 	ld	e, (hl)
   03DC 23                 1034 	inc	hl
   03DD 56                 1035 	ld	d, (hl)
   03DE 1A                 1036 	ld	a,(de)
   03DF C5                 1037 	push	bc
   03E0 33                 1038 	inc	sp
   03E1 F5                 1039 	push	af
   03E2 33                 1040 	inc	sp
   03E3 CDr00r00           1041 	call	_set_sprite_tile
   03E6 E8 02              1042 	add	sp, #2
                           1043 ;./src/main.c:157: move_sprite(player.sprite.sprite_number, player.sprite.position.x, player.sprite.position.y);
   03E8 F8 10              1044 	ldhl	sp,#(17 - 1)
   03EA 5E                 1045 	ld	e, (hl)
   03EB 23                 1046 	inc	hl
   03EC 56                 1047 	ld	d, (hl)
   03ED 21 01 00           1048 	ld	hl, #0x0001
   03F0 19                 1049 	add	hl, de
   03F1 7D                 1050 	ld	a, l
   03F2 54                 1051 	ld	d, h
   03F3 F8 12              1052 	ldhl	sp,	#18
   03F5 22                 1053 	ld	(hl+), a
   03F6 72                 1054 	ld	(hl), d
   03F7 2B                 1055 	dec	hl
   03F8 5E                 1056 	ld	e, (hl)
   03F9 23                 1057 	inc	hl
   03FA 56                 1058 	ld	d, (hl)
   03FB 1A                 1059 	ld	a,(de)
   03FC 47                 1060 	ld	b, a
   03FD 2B                 1061 	dec	hl
   03FE 2B                 1062 	dec	hl
   03FF 2B                 1063 	dec	hl
   0400 5E                 1064 	ld	e, (hl)
   0401 23                 1065 	inc	hl
   0402 56                 1066 	ld	d, (hl)
   0403 1A                 1067 	ld	a,(de)
   0404 F8 16              1068 	ldhl	sp,#(23 - 1)
   0406 5E                 1069 	ld	e, (hl)
   0407 23                 1070 	inc	hl
   0408 56                 1071 	ld	d, (hl)
   0409 F5                 1072 	push	af
   040A 1A                 1073 	ld	a,(de)
   040B 4F                 1074 	ld	c, a
   040C F1                 1075 	pop	af
   040D C5                 1076 	push	bc
   040E 33                 1077 	inc	sp
   040F F5                 1078 	push	af
   0410 33                 1079 	inc	sp
   0411 79                 1080 	ld	a, c
   0412 F5                 1081 	push	af
   0413 33                 1082 	inc	sp
   0414 CDr00r00           1083 	call	_move_sprite
   0417 E8 03              1084 	add	sp, #3
                           1085 ;./src/main.c:158: SHOW_SPRITES;
   0419 F0r00              1086 	ldh	a, (_LCDC_REG+0)
   041B F6 02              1087 	or	a, #0x02
   041D E0r00              1088 	ldh	(_LCDC_REG+0),a
                           1089 ;./src/main.c:161: while(1){
   041F                    1090 00118$:
                           1091 ;./src/main.c:163: player_movement(&player);
   041F F8 10              1092 	ldhl	sp,#(17 - 1)
   0421 4E                 1093 	ld	c, (hl)
   0422 23                 1094 	inc	hl
   0423 46                 1095 	ld	b, (hl)
   0424 C5                 1096 	push	bc
   0425 CDr92r01           1097 	call	_player_movement
   0428 E8 02              1098 	add	sp, #2
                           1099 ;./src/main.c:164: jump(&player);
   042A F8 10              1100 	ldhl	sp,#(17 - 1)
   042C 4E                 1101 	ld	c, (hl)
   042D 23                 1102 	inc	hl
   042E 46                 1103 	ld	b, (hl)
   042F C5                 1104 	push	bc
   0430 CDr75r02           1105 	call	_jump
   0433 E8 02              1106 	add	sp, #2
                           1107 ;./src/main.c:165: ++gravity_time;
   0435 21r85r00           1108 	ld	hl, #_gravity_time
   0438 34                 1109 	inc	(hl)
                           1110 ;./src/main.c:166: for(UINT8 i = 0; i < 40; ++i){
   0439 AF                 1111 	xor	a, a
   043A F8 17              1112 	ldhl	sp,	#23
   043C 77                 1113 	ld	(hl), a
   043D                    1114 00121$:
                           1115 ;./src/main.c:168: if(gravity_time > 6) { gravity(sprites[i]); }
   043D 3E 06              1116 	ld	a, #0x06
   043F 21r85r00           1117 	ld	hl, #_gravity_time
   0442 96                 1118 	sub	a, (hl)
   0443 3E 00              1119 	ld	a, #0x00
   0445 17                 1120 	rla
   0446 F8 14              1121 	ldhl	sp,	#20
   0448 77                 1122 	ld	(hl), a
                           1123 ;./src/main.c:166: for(UINT8 i = 0; i < 40; ++i){
   0449 F8 17              1124 	ldhl	sp,	#23
   044B 7E                 1125 	ld	a, (hl)
   044C D6 28              1126 	sub	a, #0x28
   044E D2r90r04           1127 	jp	NC, 00108$
                           1128 ;./src/main.c:167: if(sprites[i] == 0){break;}
   0451 4E                 1129 	ld	c, (hl)
   0452 06 00              1130 	ld	b, #0x00
   0454 CB 21              1131 	sla	c
   0456 CB 10              1132 	rl	b
   0458 21r34r00           1133 	ld	hl, #_sprites
   045B 09                 1134 	add	hl, bc
   045C 7D                 1135 	ld	a, l
   045D 54                 1136 	ld	d, h
   045E F8 15              1137 	ldhl	sp,	#21
   0460 22                 1138 	ld	(hl+), a
   0461 72                 1139 	ld	(hl), d
   0462 2B                 1140 	dec	hl
   0463 5E                 1141 	ld	e, (hl)
   0464 23                 1142 	inc	hl
   0465 56                 1143 	ld	d, (hl)
   0466 1A                 1144 	ld	a,(de)
   0467 4F                 1145 	ld	c, a
   0468 13                 1146 	inc	de
   0469 1A                 1147 	ld	a,(de)
   046A 47                 1148 	ld	b,a
   046B B1                 1149 	or	a, c
   046C 28 22              1150 	jr	Z,00108$
                           1151 ;./src/main.c:168: if(gravity_time > 6) { gravity(sprites[i]); }
   046E 2B                 1152 	dec	hl
   046F 2B                 1153 	dec	hl
   0470 7E                 1154 	ld	a, (hl)
   0471 B7                 1155 	or	a, a
   0472 28 06              1156 	jr	Z,00107$
   0474 C5                 1157 	push	bc
   0475 CDrF1r00           1158 	call	_gravity
   0478 E8 02              1159 	add	sp, #2
   047A                    1160 00107$:
                           1161 ;./src/main.c:169: update_position(sprites[i]);
   047A F8 15              1162 	ldhl	sp,#(22 - 1)
   047C 5E                 1163 	ld	e, (hl)
   047D 23                 1164 	inc	hl
   047E 56                 1165 	ld	d, (hl)
   047F 1A                 1166 	ld	a,(de)
   0480 4F                 1167 	ld	c, a
   0481 13                 1168 	inc	de
   0482 1A                 1169 	ld	a,(de)
   0483 47                 1170 	ld	b, a
   0484 C5                 1171 	push	bc
   0485 CDr54r01           1172 	call	_update_position
   0488 E8 02              1173 	add	sp, #2
                           1174 ;./src/main.c:166: for(UINT8 i = 0; i < 40; ++i){
   048A F8 17              1175 	ldhl	sp,	#23
   048C 34                 1176 	inc	(hl)
   048D C3r3Dr04           1177 	jp	00121$
   0490                    1178 00108$:
                           1179 ;./src/main.c:171: if(gravity_time > 6){
   0490 F8 14              1180 	ldhl	sp,	#20
   0492 7E                 1181 	ld	a, (hl)
   0493 B7                 1182 	or	a, a
   0494 28 05              1183 	jr	Z,00135$
                           1184 ;./src/main.c:172: gravity_time = 0;
   0496 21r85r00           1185 	ld	hl, #_gravity_time
   0499 36 00              1186 	ld	(hl), #0x00
                           1187 ;./src/main.c:176: for(UINT8 i = 0; i < 40; ++i){
   049B                    1188 00135$:
   049B AF                 1189 	xor	a, a
   049C F8 17              1190 	ldhl	sp,	#23
   049E 77                 1191 	ld	(hl), a
   049F                    1192 00124$:
   049F F8 17              1193 	ldhl	sp,	#23
   04A1 7E                 1194 	ld	a, (hl)
   04A2 D6 28              1195 	sub	a, #0x28
   04A4 30 1F              1196 	jr	NC,00113$
                           1197 ;./src/main.c:177: if(sprites[i] == 0){break;}
   04A6 4E                 1198 	ld	c, (hl)
   04A7 06 00              1199 	ld	b, #0x00
   04A9 CB 21              1200 	sla	c
   04AB CB 10              1201 	rl	b
   04AD 21r34r00           1202 	ld	hl, #_sprites
   04B0 09                 1203 	add	hl, bc
   04B1 4D                 1204 	ld	c,l
   04B2 44                 1205 	ld	b,h
   04B3 4E                 1206 	ld	c, (hl)
   04B4 23                 1207 	inc	hl
   04B5 46                 1208 	ld	b, (hl)
   04B6 78                 1209 	ld	a, b
   04B7 B1                 1210 	or	a, c
   04B8 28 0B              1211 	jr	Z,00113$
                           1212 ;./src/main.c:178: draw(sprites[i]);
   04BA C5                 1213 	push	bc
   04BB CDr7Er00           1214 	call	_draw
   04BE E8 02              1215 	add	sp, #2
                           1216 ;./src/main.c:176: for(UINT8 i = 0; i < 40; ++i){
   04C0 F8 17              1217 	ldhl	sp,	#23
   04C2 34                 1218 	inc	(hl)
   04C3 18 DA              1219 	jr	00124$
   04C5                    1220 00113$:
                           1221 ;./src/main.c:182: if(player.sprite.position.y < 144){
   04C5 F8 12              1222 	ldhl	sp,#(19 - 1)
   04C7 5E                 1223 	ld	e, (hl)
   04C8 23                 1224 	inc	hl
   04C9 56                 1225 	ld	d, (hl)
   04CA 1A                 1226 	ld	a,(de)
   04CB F8 17              1227 	ldhl	sp,	#23
   04CD 77                 1228 	ld	(hl), a
                           1229 ;./src/main.c:183: player.sprite.col.has_collided = false;
   04CE F8 10              1230 	ldhl	sp,#(17 - 1)
   04D0 5E                 1231 	ld	e, (hl)
   04D1 23                 1232 	inc	hl
   04D2 56                 1233 	ld	d, (hl)
   04D3 21 07 00           1234 	ld	hl, #0x0007
   04D6 19                 1235 	add	hl, de
   04D7 4D                 1236 	ld	c, l
   04D8 44                 1237 	ld	b, h
                           1238 ;./src/main.c:182: if(player.sprite.position.y < 144){
   04D9 F8 17              1239 	ldhl	sp,	#23
   04DB 7E                 1240 	ld	a, (hl)
   04DC D6 90              1241 	sub	a, #0x90
   04DE 30 04              1242 	jr	NC,00115$
                           1243 ;./src/main.c:183: player.sprite.col.has_collided = false;
   04E0 AF                 1244 	xor	a, a
   04E1 02                 1245 	ld	(bc), a
   04E2 18 03              1246 	jr	00116$
   04E4                    1247 00115$:
                           1248 ;./src/main.c:186: player.sprite.col.has_collided = true;
   04E4 3E 01              1249 	ld	a, #0x01
   04E6 02                 1250 	ld	(bc), a
   04E7                    1251 00116$:
                           1252 ;./src/main.c:188: wait_vbl_done();
   04E7 CDr00r00           1253 	call	_wait_vbl_done
   04EA C3r1Fr04           1254 	jp	00118$
                           1255 ;./src/main.c:190: }
   04ED E8 18              1256 	add	sp, #24
   04EF C9                 1257 	ret
                           1258 	.area _CODE
                           1259 	.area _CABS (ABS)
