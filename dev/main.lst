                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 4.0.0 #11528 (MINGW32)
                              4 ;--------------------------------------------------------
                              5 	.module C__Users_Thief3_AppData_Local_Temp_lcc120201
                              6 	.optsdcc -mgbz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _player_movement
                             13 	.globl _create_level
                             14 	.globl _check_collision_with_wall
                             15 	.globl _move_player
                             16 	.globl _gravity
                             17 	.globl _next_animation
                             18 	.globl _draw
                             19 	.globl _create_sprite_num
                             20 	.globl _move_sprite
                             21 	.globl _set_sprite_tile
                             22 	.globl _set_sprite_data
                             23 	.globl _wait_vbl_done
                             24 	.globl _joypad
                             25 	.globl _gravity_time
                             26 	.globl _sprites
                             27 	.globl _total_sprites
                             28 	.globl _MainChar
                             29 ;--------------------------------------------------------
                             30 ; special function registers
                             31 ;--------------------------------------------------------
                             32 ;--------------------------------------------------------
                             33 ; ram data
                             34 ;--------------------------------------------------------
                             35 	.area _DATA
   0000                      36 _MainChar::
   0000                      37 	.ds 48
   0030                      38 _joypad_prev_state:
   0030                      39 	.ds 1
   0031                      40 _joypad_curr_state:
   0031                      41 	.ds 1
   0032                      42 _total_sprites::
   0032                      43 	.ds 1
   0033                      44 _sprites::
   0033                      45 	.ds 80
   0083                      46 _GRAVITY:
   0083                      47 	.ds 1
   0084                      48 _gravity_time::
   0084                      49 	.ds 1
                             50 ;--------------------------------------------------------
                             51 ; absolute external ram data
                             52 ;--------------------------------------------------------
                             53 	.area _DABS (ABS)
                             54 ;--------------------------------------------------------
                             55 ; global & static initialisations
                             56 ;--------------------------------------------------------
                             57 	.area _HOME
                             58 	.area _GSINIT
                             59 	.area _GSFINAL
                             60 	.area _GSINIT
                             61 ;./src/../sprites/char.c:26: unsigned char MainChar[] =
   0000 21r00r00             62 	ld	hl, #_MainChar
   0003 36 00                63 	ld	(hl), #0x00
   0005 21r01r00             64 	ld	hl, #(_MainChar + 0x0001)
   0008 36 00                65 	ld	(hl), #0x00
   000A 21r02r00             66 	ld	hl, #(_MainChar + 0x0002)
   000D 36 7E                67 	ld	(hl), #0x7e
   000F 21r03r00             68 	ld	hl, #(_MainChar + 0x0003)
   0012 36 7E                69 	ld	(hl), #0x7e
   0014 21r04r00             70 	ld	hl, #(_MainChar + 0x0004)
   0017 36 42                71 	ld	(hl), #0x42
   0019 21r05r00             72 	ld	hl, #(_MainChar + 0x0005)
   001C 36 76                73 	ld	(hl), #0x76
   001E 21r06r00             74 	ld	hl, #(_MainChar + 0x0006)
   0021 36 42                75 	ld	(hl), #0x42
   0023 21r07r00             76 	ld	hl, #(_MainChar + 0x0007)
   0026 36 76                77 	ld	(hl), #0x76
   0028 21r08r00             78 	ld	hl, #(_MainChar + 0x0008)
   002B 36 4A                79 	ld	(hl), #0x4a
   002D 21r09r00             80 	ld	hl, #(_MainChar + 0x0009)
   0030 36 4A                81 	ld	(hl), #0x4a
   0032 21r0Ar00             82 	ld	hl, #(_MainChar + 0x000a)
   0035 36 7E                83 	ld	(hl), #0x7e
   0037 21r0Br00             84 	ld	hl, #(_MainChar + 0x000b)
   003A 36 7E                85 	ld	(hl), #0x7e
   003C 21r0Cr00             86 	ld	hl, #(_MainChar + 0x000c)
   003F 36 36                87 	ld	(hl), #0x36
   0041 21r0Dr00             88 	ld	hl, #(_MainChar + 0x000d)
   0044 36 36                89 	ld	(hl), #0x36
   0046 21r0Er00             90 	ld	hl, #(_MainChar + 0x000e)
   0049 36 36                91 	ld	(hl), #0x36
   004B 21r0Fr00             92 	ld	hl, #(_MainChar + 0x000f)
   004E 36 36                93 	ld	(hl), #0x36
   0050 21r10r00             94 	ld	hl, #(_MainChar + 0x0010)
   0053 36 00                95 	ld	(hl), #0x00
   0055 21r11r00             96 	ld	hl, #(_MainChar + 0x0011)
   0058 36 00                97 	ld	(hl), #0x00
   005A 21r12r00             98 	ld	hl, #(_MainChar + 0x0012)
   005D 36 7E                99 	ld	(hl), #0x7e
   005F 21r13r00            100 	ld	hl, #(_MainChar + 0x0013)
   0062 36 7E               101 	ld	(hl), #0x7e
   0064 21r14r00            102 	ld	hl, #(_MainChar + 0x0014)
   0067 36 42               103 	ld	(hl), #0x42
   0069 21r15r00            104 	ld	hl, #(_MainChar + 0x0015)
   006C 36 76               105 	ld	(hl), #0x76
   006E 21r16r00            106 	ld	hl, #(_MainChar + 0x0016)
   0071 36 42               107 	ld	(hl), #0x42
   0073 21r17r00            108 	ld	hl, #(_MainChar + 0x0017)
   0076 36 76               109 	ld	(hl), #0x76
   0078 21r18r00            110 	ld	hl, #(_MainChar + 0x0018)
   007B 36 4A               111 	ld	(hl), #0x4a
   007D 21r19r00            112 	ld	hl, #(_MainChar + 0x0019)
   0080 36 4A               113 	ld	(hl), #0x4a
   0082 21r1Ar00            114 	ld	hl, #(_MainChar + 0x001a)
   0085 36 7E               115 	ld	(hl), #0x7e
   0087 21r1Br00            116 	ld	hl, #(_MainChar + 0x001b)
   008A 36 7E               117 	ld	(hl), #0x7e
   008C 21r1Cr00            118 	ld	hl, #(_MainChar + 0x001c)
   008F 36 36               119 	ld	(hl), #0x36
   0091 21r1Dr00            120 	ld	hl, #(_MainChar + 0x001d)
   0094 36 36               121 	ld	(hl), #0x36
   0096 21r1Er00            122 	ld	hl, #(_MainChar + 0x001e)
   0099 36 30               123 	ld	(hl), #0x30
   009B 21r1Fr00            124 	ld	hl, #(_MainChar + 0x001f)
   009E 36 30               125 	ld	(hl), #0x30
   00A0 21r20r00            126 	ld	hl, #(_MainChar + 0x0020)
   00A3 36 00               127 	ld	(hl), #0x00
   00A5 21r21r00            128 	ld	hl, #(_MainChar + 0x0021)
   00A8 36 00               129 	ld	(hl), #0x00
   00AA 21r22r00            130 	ld	hl, #(_MainChar + 0x0022)
   00AD 36 7E               131 	ld	(hl), #0x7e
   00AF 21r23r00            132 	ld	hl, #(_MainChar + 0x0023)
   00B2 36 7E               133 	ld	(hl), #0x7e
   00B4 21r24r00            134 	ld	hl, #(_MainChar + 0x0024)
   00B7 36 42               135 	ld	(hl), #0x42
   00B9 21r25r00            136 	ld	hl, #(_MainChar + 0x0025)
   00BC 36 76               137 	ld	(hl), #0x76
   00BE 21r26r00            138 	ld	hl, #(_MainChar + 0x0026)
   00C1 36 42               139 	ld	(hl), #0x42
   00C3 21r27r00            140 	ld	hl, #(_MainChar + 0x0027)
   00C6 36 76               141 	ld	(hl), #0x76
   00C8 21r28r00            142 	ld	hl, #(_MainChar + 0x0028)
   00CB 36 4A               143 	ld	(hl), #0x4a
   00CD 21r29r00            144 	ld	hl, #(_MainChar + 0x0029)
   00D0 36 4A               145 	ld	(hl), #0x4a
   00D2 21r2Ar00            146 	ld	hl, #(_MainChar + 0x002a)
   00D5 36 7E               147 	ld	(hl), #0x7e
   00D7 21r2Br00            148 	ld	hl, #(_MainChar + 0x002b)
   00DA 36 7E               149 	ld	(hl), #0x7e
   00DC 21r2Cr00            150 	ld	hl, #(_MainChar + 0x002c)
   00DF 36 36               151 	ld	(hl), #0x36
   00E1 21r2Dr00            152 	ld	hl, #(_MainChar + 0x002d)
   00E4 36 36               153 	ld	(hl), #0x36
   00E6 21r2Er00            154 	ld	hl, #(_MainChar + 0x002e)
   00E9 36 06               155 	ld	(hl), #0x06
   00EB 21r2Fr00            156 	ld	hl, #(_MainChar + 0x002f)
   00EE 36 06               157 	ld	(hl), #0x06
                            158 ;./src/main.c:8: UINT8 total_sprites = -1;
   00F0 21r32r00            159 	ld	hl, #_total_sprites
   00F3 36 FF               160 	ld	(hl), #0xff
                            161 ;./src/main.c:46: static UINT8 GRAVITY = 9;
   00F5 21r83r00            162 	ld	hl, #_GRAVITY
   00F8 36 09               163 	ld	(hl), #0x09
                            164 ;./src/main.c:47: UINT8 gravity_time = 0;
   00FA 21r84r00            165 	ld	hl, #_gravity_time
   00FD 36 00               166 	ld	(hl), #0x00
                            167 ;--------------------------------------------------------
                            168 ; Home
                            169 ;--------------------------------------------------------
                            170 	.area _HOME
                            171 	.area _HOME
                            172 ;--------------------------------------------------------
                            173 ; code
                            174 ;--------------------------------------------------------
                            175 	.area _CODE
                            176 ;./src/../src/input.c:75: static void joypad_wait (UINT8 buttons)
                            177 ;	---------------------------------
                            178 ; Function joypad_wait
                            179 ; ---------------------------------
   0000                     180 _joypad_wait:
                            181 ;./src/../src/input.c:77: while (true) {
   0000                     182 00108$:
                            183 ;./src/../src/input.c:78: UPDATE_JOYPAD_STATE;
   0000 E5                  184 	push	hl
   0001 21r31r00            185 	ld	hl, #_joypad_curr_state
   0004 7E                  186 	ld	a, (hl)
   0005 21r30r00            187 	ld	hl, #_joypad_prev_state
   0008 77                  188 	ld	(hl), a
   0009 E1                  189 	pop	hl
   000A CDr00r00            190 	call	_joypad
   000D 21r31r00            191 	ld	hl, #_joypad_curr_state
   0010 73                  192 	ld	(hl), e
                            193 ;./src/../src/input.c:79: if (JOYPAD_PRESSED(buttons)) {
   0011 21r30r00            194 	ld	hl, #_joypad_prev_state
   0014 7E                  195 	ld	a, (hl)
   0015 F8 02               196 	ldhl	sp,	#2
   0017 A6                  197 	and	a,(hl)
   0018 20 08               198 	jr	NZ,00105$
   001A 21r31r00            199 	ld	hl, #_joypad_curr_state
   001D 7E                  200 	ld	a, (hl)
   001E F8 02               201 	ldhl	sp,	#2
   0020 A6                  202 	and	a,(hl)
   0021 C0                  203 	ret	NZ
                            204 ;./src/../src/input.c:80: break;
   0022                     205 00105$:
                            206 ;./src/../src/input.c:82: wait_vbl_done();
   0022 CDr00r00            207 	call	_wait_vbl_done
   0025 18 D9               208 	jr	00108$
                            209 ;./src/../src/input.c:84: }
   0027 C9                  210 	ret
                            211 ;./src/../src/input.c:87: static BOOLEAN joypad_waittime (UINT8 buttons, UINT8 timeout)
                            212 ;	---------------------------------
                            213 ; Function joypad_waittime
                            214 ; ---------------------------------
   0028                     215 _joypad_waittime:
                            216 ;./src/../src/input.c:89: for (UINT8 i = 0; i < timeout; ++i) {
   0028 0E 00               217 	ld	c, #0x00
   002A                     218 00109$:
   002A 79                  219 	ld	a, c
   002B F8 03               220 	ldhl	sp,	#3
   002D 96                  221 	sub	a, (hl)
   002E 30 31               222 	jr	NC,00107$
                            223 ;./src/../src/input.c:90: UPDATE_JOYPAD_STATE;
   0030 E5                  224 	push	hl
   0031 21r31r00            225 	ld	hl, #_joypad_curr_state
   0034 7E                  226 	ld	a, (hl)
   0035 21r30r00            227 	ld	hl, #_joypad_prev_state
   0038 77                  228 	ld	(hl), a
   0039 E1                  229 	pop	hl
   003A C5                  230 	push	bc
   003B CDr00r00            231 	call	_joypad
   003E C1                  232 	pop	bc
   003F 21r31r00            233 	ld	hl, #_joypad_curr_state
   0042 73                  234 	ld	(hl), e
                            235 ;./src/../src/input.c:91: if (JOYPAD_PRESSED(buttons)) {
   0043 21r30r00            236 	ld	hl, #_joypad_prev_state
   0046 7E                  237 	ld	a, (hl)
   0047 F8 02               238 	ldhl	sp,	#2
   0049 A6                  239 	and	a,(hl)
   004A 20 0C               240 	jr	NZ,00105$
   004C 21r31r00            241 	ld	hl, #_joypad_curr_state
   004F 7E                  242 	ld	a, (hl)
   0050 F8 02               243 	ldhl	sp,	#2
   0052 A6                  244 	and	a,(hl)
   0053 28 03               245 	jr	Z,00105$
                            246 ;./src/../src/input.c:92: return TRUE;
   0055 1E 01               247 	ld	e, #0x01
   0057 C9                  248 	ret
   0058                     249 00105$:
                            250 ;./src/../src/input.c:94: wait_vbl_done();
   0058 C5                  251 	push	bc
   0059 CDr00r00            252 	call	_wait_vbl_done
   005C C1                  253 	pop	bc
                            254 ;./src/../src/input.c:89: for (UINT8 i = 0; i < timeout; ++i) {
   005D 0C                  255 	inc	c
   005E C3r2Ar00            256 	jp	00109$
   0061                     257 00107$:
                            258 ;./src/../src/input.c:96: return false;
   0061 1E 00               259 	ld	e, #0x00
                            260 ;./src/../src/input.c:97: }
   0063 C9                  261 	ret
                            262 ;./src/main.c:9: UINT8 create_sprite_num(){
                            263 ;	---------------------------------
                            264 ; Function create_sprite_num
                            265 ; ---------------------------------
   0064                     266 _create_sprite_num::
                            267 ;./src/main.c:10: ++total_sprites;
   0064 21r32r00            268 	ld	hl, #_total_sprites
   0067 34                  269 	inc	(hl)
                            270 ;./src/main.c:11: return total_sprites;
   0068 5E                  271 	ld	e, (hl)
                            272 ;./src/main.c:12: }
   0069 C9                  273 	ret
                            274 ;./src/main.c:26: void draw(MSprite* sprite){
                            275 ;	---------------------------------
                            276 ; Function draw
                            277 ; ---------------------------------
   006A                     278 _draw::
   006A E8 FB               279 	add	sp, #-5
                            280 ;./src/main.c:27: move_sprite(sprite->sprite_number, sprite->x, sprite->y);
   006C F8 07               281 	ldhl	sp,#(8 - 1)
   006E 4E                  282 	ld	c, (hl)
   006F 23                  283 	inc	hl
   0070 46                  284 	ld	b, (hl)
   0071 21 01 00            285 	ld	hl, #0x0001
   0074 09                  286 	add	hl, bc
   0075 33                  287 	inc	sp
   0076 33                  288 	inc	sp
   0077 E5                  289 	push	hl
   0078 D1                  290 	pop	de
   0079 D5                  291 	push	de
   007A 1A                  292 	ld	a,(de)
   007B F8 03               293 	ldhl	sp,	#3
   007D 77                  294 	ld	(hl), a
   007E 0A                  295 	ld	a, (bc)
   007F 23                  296 	inc	hl
   0080 77                  297 	ld	(hl), a
   0081 03                  298 	inc	bc
   0082 03                  299 	inc	bc
   0083 03                  300 	inc	bc
   0084 03                  301 	inc	bc
   0085 0A                  302 	ld	a, (bc)
   0086 47                  303 	ld	b, a
   0087 2B                  304 	dec	hl
   0088 7E                  305 	ld	a, (hl)
   0089 F5                  306 	push	af
   008A 33                  307 	inc	sp
   008B 23                  308 	inc	hl
   008C 7E                  309 	ld	a, (hl)
   008D F5                  310 	push	af
   008E 33                  311 	inc	sp
   008F C5                  312 	push	bc
   0090 33                  313 	inc	sp
   0091 CDr00r00            314 	call	_move_sprite
   0094 E8 03               315 	add	sp, #3
                            316 ;./src/main.c:28: }
   0096 E8 05               317 	add	sp, #5
   0098 C9                  318 	ret
                            319 ;./src/main.c:38: void next_animation(MSprite* sprite){
                            320 ;	---------------------------------
                            321 ; Function next_animation
                            322 ; ---------------------------------
   0099                     323 _next_animation::
   0099 E8 FB               324 	add	sp, #-5
                            325 ;./src/main.c:39: ++(sprite->animation_index);
   009B F8 07               326 	ldhl	sp,	#7
   009D 2A                  327 	ld	a, (hl+)
   009E 5E                  328 	ld	e, (hl)
   009F F8 00               329 	ldhl	sp,	#0
   00A1 22                  330 	ld	(hl+), a
   00A2 73                  331 	ld	(hl), e
   00A3 C1                  332 	pop	bc
   00A4 C5                  333 	push	bc
   00A5 03                  334 	inc	bc
   00A6 03                  335 	inc	bc
   00A7 0A                  336 	ld	a, (bc)
   00A8 3C                  337 	inc	a
   00A9 23                  338 	inc	hl
   00AA 77                  339 	ld	(hl),a
   00AB 02                  340 	ld	(bc), a
                            341 ;./src/main.c:40: if(sprite->animation_index == sprite->max_animations){
   00AC D1                  342 	pop	de
   00AD D5                  343 	push	de
   00AE 21 03 00            344 	ld	hl, #0x0003
   00B1 19                  345 	add	hl, de
   00B2 7D                  346 	ld	a, l
   00B3 54                  347 	ld	d, h
   00B4 F8 03               348 	ldhl	sp,	#3
   00B6 22                  349 	ld	(hl+), a
   00B7 72                  350 	ld	(hl), d
   00B8 2B                  351 	dec	hl
   00B9 5E                  352 	ld	e, (hl)
   00BA 23                  353 	inc	hl
   00BB 56                  354 	ld	d, (hl)
   00BC 1A                  355 	ld	a,(de)
   00BD 32                  356 	ld	(hl-), a
   00BE 2B                  357 	dec	hl
   00BF 2A                  358 	ld	a, (hl+)
   00C0 23                  359 	inc	hl
   00C1 96                  360 	sub	a, (hl)
   00C2 20 02               361 	jr	NZ,00102$
                            362 ;./src/main.c:41: sprite->animation_index = 0;
   00C4 AF                  363 	xor	a, a
   00C5 02                  364 	ld	(bc), a
   00C6                     365 00102$:
                            366 ;./src/main.c:43: set_sprite_tile(sprite->sprite_number, sprite->animation_index);
   00C6 0A                  367 	ld	a, (bc)
   00C7 47                  368 	ld	b, a
   00C8 D1                  369 	pop	de
   00C9 D5                  370 	push	de
   00CA 21 04 00            371 	ld	hl, #0x0004
   00CD 19                  372 	add	hl, de
   00CE 4D                  373 	ld	c,l
   00CF 7C                  374 	ld	a,h
   00D0 7E                  375 	ld	a, (hl)
   00D1 C5                  376 	push	bc
   00D2 33                  377 	inc	sp
   00D3 F5                  378 	push	af
   00D4 33                  379 	inc	sp
   00D5 CDr00r00            380 	call	_set_sprite_tile
   00D8 E8 02               381 	add	sp, #2
                            382 ;./src/main.c:44: }
   00DA E8 05               383 	add	sp, #5
   00DC C9                  384 	ret
                            385 ;./src/main.c:48: void gravity(MSprite* sprite){
                            386 ;	---------------------------------
                            387 ; Function gravity
                            388 ; ---------------------------------
   00DD                     389 _gravity::
                            390 ;./src/main.c:50: sprite->y += 1;
   00DD F8 02               391 	ldhl	sp,#(3 - 1)
   00DF 4E                  392 	ld	c, (hl)
   00E0 23                  393 	inc	hl
   00E1 46                  394 	ld	b, (hl)
   00E2 03                  395 	inc	bc
   00E3 0A                  396 	ld	a, (bc)
   00E4 3C                  397 	inc	a
   00E5 02                  398 	ld	(bc), a
                            399 ;./src/main.c:51: }
   00E6 C9                  400 	ret
                            401 ;./src/main.c:53: void move_player(MPlayer* player, UINT8 move, bool is_x){
                            402 ;	---------------------------------
                            403 ; Function move_player
                            404 ; ---------------------------------
   00E7                     405 _move_player::
   00E7 E8 FE               406 	add	sp, #-2
                            407 ;./src/main.c:54: player->moved = true;
   00E9 F8 04               408 	ldhl	sp,#(5 - 1)
   00EB 4E                  409 	ld	c, (hl)
   00EC 23                  410 	inc	hl
   00ED 46                  411 	ld	b, (hl)
   00EE 21 06 00            412 	ld	hl, #0x0006
   00F1 09                  413 	add	hl, bc
   00F2 33                  414 	inc	sp
   00F3 33                  415 	inc	sp
   00F4 E5                  416 	push	hl
   00F5 E1                  417 	pop	hl
   00F6 E5                  418 	push	hl
   00F7 36 01               419 	ld	(hl), #0x01
                            420 ;./src/main.c:55: if(is_x == true){
   00F9 F8 07               421 	ldhl	sp,	#7
   00FB CB 46               422 	bit	0, (hl)
   00FD 28 06               423 	jr	Z,00102$
                            424 ;./src/main.c:56: player->sprite.x += move;       
   00FF 0A                  425 	ld	a, (bc)
   0100 2B                  426 	dec	hl
   0101 86                  427 	add	a, (hl)
   0102 02                  428 	ld	(bc), a
   0103 18 10               429 	jr	00103$
   0105                     430 00102$:
                            431 ;./src/main.c:59: player->sprite.y += move;
   0105 21 01 00            432 	ld	hl, #0x0001
   0108 09                  433 	add	hl, bc
   0109 33                  434 	inc	sp
   010A 33                  435 	inc	sp
   010B E5                  436 	push	hl
   010C D1                  437 	pop	de
   010D D5                  438 	push	de
   010E 1A                  439 	ld	a,(de)
   010F F8 06               440 	ldhl	sp,	#6
   0111 86                  441 	add	a, (hl)
   0112 E1                  442 	pop	hl
   0113 E5                  443 	push	hl
   0114 77                  444 	ld	(hl), a
   0115                     445 00103$:
                            446 ;./src/main.c:61: next_animation(&(player->sprite));
   0115 C5                  447 	push	bc
   0116 CDr99r00            448 	call	_next_animation
   0119 E8 02               449 	add	sp, #2
                            450 ;./src/main.c:63: }
   011B E8 02               451 	add	sp, #2
   011D C9                  452 	ret
                            453 ;./src/main.c:66: void check_collision_with_wall(){
                            454 ;	---------------------------------
                            455 ; Function check_collision_with_wall
                            456 ; ---------------------------------
   011E                     457 _check_collision_with_wall::
                            458 ;./src/main.c:68: }
   011E C9                  459 	ret
                            460 ;./src/main.c:70: void create_level(){
                            461 ;	---------------------------------
                            462 ; Function create_level
                            463 ; ---------------------------------
   011F                     464 _create_level::
                            465 ;./src/main.c:72: }
   011F C9                  466 	ret
                            467 ;./src/main.c:74: void player_movement(MPlayer* player)
                            468 ;	---------------------------------
                            469 ; Function player_movement
                            470 ; ---------------------------------
   0120                     471 _player_movement::
   0120 E8 F8               472 	add	sp, #-8
                            473 ;./src/main.c:76: if(!(player->moved)){
   0122 F8 0A               474 	ldhl	sp,	#10
   0124 2A                  475 	ld	a, (hl+)
   0125 5E                  476 	ld	e, (hl)
   0126 F8 00               477 	ldhl	sp,	#0
   0128 22                  478 	ld	(hl+), a
   0129 73                  479 	ld	(hl), e
   012A D1                  480 	pop	de
   012B D5                  481 	push	de
   012C 21 06 00            482 	ld	hl, #0x0006
   012F 19                  483 	add	hl, de
   0130 7D                  484 	ld	a, l
   0131 54                  485 	ld	d, h
   0132 F8 02               486 	ldhl	sp,	#2
   0134 22                  487 	ld	(hl+), a
   0135 72                  488 	ld	(hl), d
   0136 2B                  489 	dec	hl
   0137 5E                  490 	ld	e, (hl)
   0138 23                  491 	inc	hl
   0139 56                  492 	ld	d, (hl)
   013A 1A                  493 	ld	a,(de)
   013B CB 47               494 	bit	0, a
   013D C2rC8r01            495 	jp	NZ, 00112$
                            496 ;./src/main.c:77: if(JOYPAD_DOWN_PAD_L){
   0140 CDr00r00            497 	call	_joypad
   0143 F8 07               498 	ldhl	sp,	#7
   0145 73                  499 	ld	(hl), e
                            500 ;./src/main.c:78: move_player(player, -player->sprite.speed, true);
   0146 D1                  501 	pop	de
   0147 D5                  502 	push	de
   0148 21 05 00            503 	ld	hl, #0x0005
   014B 19                  504 	add	hl, de
   014C 4D                  505 	ld	c, l
   014D 44                  506 	ld	b, h
                            507 ;./src/main.c:77: if(JOYPAD_DOWN_PAD_L){
   014E F8 07               508 	ldhl	sp,	#7
   0150 CB 4E               509 	bit	1, (hl)
   0152 28 1D               510 	jr	Z,00104$
                            511 ;./src/main.c:78: move_player(player, -player->sprite.speed, true);
   0154 0A                  512 	ld	a, (bc)
   0155 F8 07               513 	ldhl	sp,	#7
   0157 77                  514 	ld	(hl), a
   0158 AF                  515 	xor	a, a
   0159 96                  516 	sub	a, (hl)
   015A 77                  517 	ld	(hl), a
   015B C5                  518 	push	bc
   015C 3E 01               519 	ld	a, #0x01
   015E F5                  520 	push	af
   015F 33                  521 	inc	sp
   0160 7E                  522 	ld	a, (hl)
   0161 F5                  523 	push	af
   0162 33                  524 	inc	sp
   0163 F8 04               525 	ldhl	sp,	#4
   0165 2A                  526 	ld	a, (hl+)
   0166 66                  527 	ld	h, (hl)
   0167 6F                  528 	ld	l, a
   0168 E5                  529 	push	hl
   0169 CDrE7r00            530 	call	_move_player
   016C E8 04               531 	add	sp, #4
   016E C1                  532 	pop	bc
   016F 18 1E               533 	jr	00105$
   0171                     534 00104$:
                            535 ;./src/main.c:80: else if(JOYPAD_DOWN_PAD_R){
   0171 C5                  536 	push	bc
   0172 CDr00r00            537 	call	_joypad
   0175 7B                  538 	ld	a, e
   0176 C1                  539 	pop	bc
   0177 0F                  540 	rrca
   0178 30 15               541 	jr	NC,00105$
                            542 ;./src/main.c:81: move_player(player, player->sprite.speed, true);
   017A 0A                  543 	ld	a, (bc)
   017B 57                  544 	ld	d, a
   017C C5                  545 	push	bc
   017D 3E 01               546 	ld	a, #0x01
   017F F5                  547 	push	af
   0180 33                  548 	inc	sp
   0181 D5                  549 	push	de
   0182 33                  550 	inc	sp
   0183 F8 04               551 	ldhl	sp,	#4
   0185 2A                  552 	ld	a, (hl+)
   0186 66                  553 	ld	h, (hl)
   0187 6F                  554 	ld	l, a
   0188 E5                  555 	push	hl
   0189 CDrE7r00            556 	call	_move_player
   018C E8 04               557 	add	sp, #4
   018E C1                  558 	pop	bc
   018F                     559 00105$:
                            560 ;./src/main.c:83: if(JOYPAD_DOWN_PAD_U){
   018F C5                  561 	push	bc
   0190 CDr00r00            562 	call	_joypad
   0193 C1                  563 	pop	bc
   0194 CB 53               564 	bit	2, e
   0196 28 16               565 	jr	Z,00109$
                            566 ;./src/main.c:84: move_player(player, -player->sprite.speed, false);
   0198 0A                  567 	ld	a, (bc)
   0199 4F                  568 	ld	c, a
   019A AF                  569 	xor	a, a
   019B 91                  570 	sub	a, c
   019C 47                  571 	ld	b, a
   019D AF                  572 	xor	a, a
   019E F5                  573 	push	af
   019F 33                  574 	inc	sp
   01A0 C5                  575 	push	bc
   01A1 33                  576 	inc	sp
   01A2 C1                  577 	pop	bc
   01A3 E1                  578 	pop	hl
   01A4 E5                  579 	push	hl
   01A5 C5                  580 	push	bc
   01A6 E5                  581 	push	hl
   01A7 CDrE7r00            582 	call	_move_player
   01AA E8 04               583 	add	sp, #4
   01AC 18 1A               584 	jr	00112$
   01AE                     585 00109$:
                            586 ;./src/main.c:86: else if(JOYPAD_DOWN_PAD_D){
   01AE C5                  587 	push	bc
   01AF CDr00r00            588 	call	_joypad
   01B2 C1                  589 	pop	bc
   01B3 CB 5B               590 	bit	3, e
   01B5 28 11               591 	jr	Z,00112$
                            592 ;./src/main.c:87: move_player(player, player->sprite.speed, false);
   01B7 0A                  593 	ld	a, (bc)
   01B8 47                  594 	ld	b, a
   01B9 AF                  595 	xor	a, a
   01BA F5                  596 	push	af
   01BB 33                  597 	inc	sp
   01BC C5                  598 	push	bc
   01BD 33                  599 	inc	sp
   01BE C1                  600 	pop	bc
   01BF E1                  601 	pop	hl
   01C0 E5                  602 	push	hl
   01C1 C5                  603 	push	bc
   01C2 E5                  604 	push	hl
   01C3 CDrE7r00            605 	call	_move_player
   01C6 E8 04               606 	add	sp, #4
   01C8                     607 00112$:
                            608 ;./src/main.c:90: if(player->movement_time > player->movement_delay){
   01C8 D1                  609 	pop	de
   01C9 D5                  610 	push	de
   01CA 21 08 00            611 	ld	hl, #0x0008
   01CD 19                  612 	add	hl, de
   01CE 7D                  613 	ld	a, l
   01CF 54                  614 	ld	d, h
   01D0 F8 04               615 	ldhl	sp,	#4
   01D2 22                  616 	ld	(hl+), a
   01D3 72                  617 	ld	(hl), d
   01D4 2B                  618 	dec	hl
   01D5 5E                  619 	ld	e, (hl)
   01D6 23                  620 	inc	hl
   01D7 56                  621 	ld	d, (hl)
   01D8 1A                  622 	ld	a,(de)
   01D9 23                  623 	inc	hl
   01DA 22                  624 	ld	(hl+), a
   01DB 13                  625 	inc	de
   01DC 1A                  626 	ld	a, (de)
   01DD 77                  627 	ld	(hl), a
   01DE D1                  628 	pop	de
   01DF D5                  629 	push	de
   01E0 21 07 00            630 	ld	hl, #0x0007
   01E3 19                  631 	add	hl, de
   01E4 4D                  632 	ld	c,l
   01E5 7C                  633 	ld	a,h
   01E6 4E                  634 	ld	c, (hl)
   01E7 06 00               635 	ld	b, #0x00
   01E9 F8 06               636 	ldhl	sp,	#6
   01EB 79                  637 	ld	a, c
   01EC 96                  638 	sub	a, (hl)
   01ED 23                  639 	inc	hl
   01EE 78                  640 	ld	a, b
   01EF 9E                  641 	sbc	a, (hl)
   01F0 30 0E               642 	jr	NC,00115$
                            643 ;./src/main.c:91: player->movement_time = 0;
   01F2 F8 04               644 	ldhl	sp,	#4
   01F4 2A                  645 	ld	a, (hl+)
   01F5 66                  646 	ld	h, (hl)
   01F6 6F                  647 	ld	l, a
   01F7 AF                  648 	xor	a, a
   01F8 22                  649 	ld	(hl+), a
   01F9 77                  650 	ld	(hl), a
                            651 ;./src/main.c:92: player->moved = false;
   01FA C1                  652 	pop	bc
   01FB E1                  653 	pop	hl
   01FC E5                  654 	push	hl
   01FD C5                  655 	push	bc
   01FE 36 00               656 	ld	(hl), #0x00
   0200                     657 00115$:
                            658 ;./src/main.c:96: }
   0200 E8 08               659 	add	sp, #8
   0202 C9                  660 	ret
                            661 ;./src/main.c:98: void main()
                            662 ;	---------------------------------
                            663 ; Function main
                            664 ; ---------------------------------
   0203                     665 _main::
   0203 E8 F1               666 	add	sp, #-15
                            667 ;./src/main.c:100: UPDATE_JOYPAD_STATE;
   0205 E5                  668 	push	hl
   0206 21r31r00            669 	ld	hl, #_joypad_curr_state
   0209 7E                  670 	ld	a, (hl)
   020A 21r30r00            671 	ld	hl, #_joypad_prev_state
   020D 77                  672 	ld	(hl), a
   020E E1                  673 	pop	hl
   020F CDr00r00            674 	call	_joypad
   0212 21r31r00            675 	ld	hl, #_joypad_curr_state
   0215 73                  676 	ld	(hl), e
                            677 ;./src/main.c:102: MPlayer player = {{88, 78, 0, 3, 0, 5}, false, 6, 0};
   0216 F8 02               678 	ldhl	sp,	#2
   0218 7D                  679 	ld	a, l
   0219 54                  680 	ld	d, h
   021A F8 0D               681 	ldhl	sp,	#13
   021C 22                  682 	ld	(hl+), a
   021D 72                  683 	ld	(hl), d
   021E 2B                  684 	dec	hl
   021F 2A                  685 	ld	a, (hl+)
   0220 66                  686 	ld	h, (hl)
   0221 6F                  687 	ld	l, a
   0222 36 58               688 	ld	(hl), #0x58
   0224 F8 0D               689 	ldhl	sp,#(14 - 1)
   0226 4E                  690 	ld	c, (hl)
   0227 23                  691 	inc	hl
   0228 46                  692 	ld	b, (hl)
   0229 03                  693 	inc	bc
   022A 3E 4E               694 	ld	a, #0x4e
   022C 02                  695 	ld	(bc), a
   022D 2B                  696 	dec	hl
   022E 4E                  697 	ld	c, (hl)
   022F 23                  698 	inc	hl
   0230 46                  699 	ld	b, (hl)
   0231 03                  700 	inc	bc
   0232 03                  701 	inc	bc
   0233 AF                  702 	xor	a, a
   0234 02                  703 	ld	(bc), a
   0235 2B                  704 	dec	hl
   0236 4E                  705 	ld	c, (hl)
   0237 23                  706 	inc	hl
   0238 46                  707 	ld	b, (hl)
   0239 03                  708 	inc	bc
   023A 03                  709 	inc	bc
   023B 03                  710 	inc	bc
   023C 3E 03               711 	ld	a, #0x03
   023E 02                  712 	ld	(bc), a
   023F 2B                  713 	dec	hl
   0240 5E                  714 	ld	e, (hl)
   0241 23                  715 	inc	hl
   0242 56                  716 	ld	d, (hl)
   0243 21 04 00            717 	ld	hl, #0x0004
   0246 19                  718 	add	hl, de
   0247 4D                  719 	ld	c, l
   0248 44                  720 	ld	b, h
   0249 AF                  721 	xor	a, a
   024A 02                  722 	ld	(bc), a
   024B F8 0D               723 	ldhl	sp,#(14 - 1)
   024D 5E                  724 	ld	e, (hl)
   024E 23                  725 	inc	hl
   024F 56                  726 	ld	d, (hl)
   0250 21 05 00            727 	ld	hl, #0x0005
   0253 19                  728 	add	hl, de
   0254 4D                  729 	ld	c,l
   0255 7C                  730 	ld	a,h
   0256 36 05               731 	ld	(hl), #0x05
   0258 F8 02               732 	ldhl	sp,	#2
   025A 7D                  733 	ld	a, l
   025B 54                  734 	ld	d, h
   025C F8 0C               735 	ldhl	sp,	#12
   025E 22                  736 	ld	(hl+), a
   025F 72                  737 	ld	(hl), d
   0260 2B                  738 	dec	hl
   0261 5E                  739 	ld	e, (hl)
   0262 23                  740 	inc	hl
   0263 56                  741 	ld	d, (hl)
   0264 21 06 00            742 	ld	hl, #0x0006
   0267 19                  743 	add	hl, de
   0268 4D                  744 	ld	c, l
   0269 44                  745 	ld	b, h
   026A AF                  746 	xor	a, a
   026B 02                  747 	ld	(bc), a
   026C F8 0C               748 	ldhl	sp,#(13 - 1)
   026E 5E                  749 	ld	e, (hl)
   026F 23                  750 	inc	hl
   0270 56                  751 	ld	d, (hl)
   0271 21 07 00            752 	ld	hl, #0x0007
   0274 19                  753 	add	hl, de
   0275 4D                  754 	ld	c,l
   0276 7C                  755 	ld	a,h
   0277 36 06               756 	ld	(hl), #0x06
   0279 F8 0C               757 	ldhl	sp,#(13 - 1)
   027B 5E                  758 	ld	e, (hl)
   027C 23                  759 	inc	hl
   027D 56                  760 	ld	d, (hl)
   027E 21 08 00            761 	ld	hl, #0x0008
   0281 19                  762 	add	hl, de
   0282 4D                  763 	ld	c, l
   0283 44                  764 	ld	b, h
   0284 AF                  765 	xor	a, a
   0285 02                  766 	ld	(bc), a
   0286 03                  767 	inc	bc
   0287 02                  768 	ld	(bc), a
                            769 ;./src/main.c:103: sprites[0] = &(player.sprite);
   0288 F8 0C               770 	ldhl	sp,#(13 - 1)
   028A 4E                  771 	ld	c, (hl)
   028B 23                  772 	inc	hl
   028C 46                  773 	ld	b, (hl)
   028D 21r33r00            774 	ld	hl, #_sprites
   0290 71                  775 	ld	(hl), c
   0291 23                  776 	inc	hl
   0292 70                  777 	ld	(hl), b
                            778 ;./src/main.c:104: set_sprite_data(player.sprite.sprite_number, player.sprite.max_animations, MainChar);
   0293 F8 0C               779 	ldhl	sp,#(13 - 1)
   0295 4E                  780 	ld	c, (hl)
   0296 23                  781 	inc	hl
   0297 46                  782 	ld	b, (hl)
   0298 03                  783 	inc	bc
   0299 03                  784 	inc	bc
   029A 03                  785 	inc	bc
   029B 0A                  786 	ld	a, (bc)
   029C 47                  787 	ld	b, a
   029D 2B                  788 	dec	hl
   029E 5E                  789 	ld	e, (hl)
   029F 23                  790 	inc	hl
   02A0 56                  791 	ld	d, (hl)
   02A1 21 04 00            792 	ld	hl, #0x0004
   02A4 19                  793 	add	hl, de
   02A5 33                  794 	inc	sp
   02A6 33                  795 	inc	sp
   02A7 E5                  796 	push	hl
   02A8 D1                  797 	pop	de
   02A9 D5                  798 	push	de
   02AA 1A                  799 	ld	a,(de)
   02AB 4F                  800 	ld	c, a
   02AC 21r00r00            801 	ld	hl, #_MainChar
   02AF E5                  802 	push	hl
   02B0 C5                  803 	push	bc
   02B1 33                  804 	inc	sp
   02B2 79                  805 	ld	a, c
   02B3 F5                  806 	push	af
   02B4 33                  807 	inc	sp
   02B5 CDr00r00            808 	call	_set_sprite_data
   02B8 E8 04               809 	add	sp, #4
                            810 ;./src/main.c:105: set_sprite_tile(player.sprite.sprite_number, player.sprite.animation_index);
   02BA F8 0C               811 	ldhl	sp,#(13 - 1)
   02BC 4E                  812 	ld	c, (hl)
   02BD 23                  813 	inc	hl
   02BE 46                  814 	ld	b, (hl)
   02BF 03                  815 	inc	bc
   02C0 03                  816 	inc	bc
   02C1 0A                  817 	ld	a, (bc)
   02C2 47                  818 	ld	b, a
   02C3 D1                  819 	pop	de
   02C4 D5                  820 	push	de
   02C5 1A                  821 	ld	a,(de)
   02C6 C5                  822 	push	bc
   02C7 33                  823 	inc	sp
   02C8 F5                  824 	push	af
   02C9 33                  825 	inc	sp
   02CA CDr00r00            826 	call	_set_sprite_tile
   02CD E8 02               827 	add	sp, #2
                            828 ;./src/main.c:106: move_sprite(player.sprite.sprite_number, player.sprite.x, player.sprite.y);
   02CF F8 0C               829 	ldhl	sp,#(13 - 1)
   02D1 4E                  830 	ld	c, (hl)
   02D2 23                  831 	inc	hl
   02D3 46                  832 	ld	b, (hl)
   02D4 03                  833 	inc	bc
   02D5 0A                  834 	ld	a, (bc)
   02D6 47                  835 	ld	b, a
   02D7 2B                  836 	dec	hl
   02D8 5E                  837 	ld	e, (hl)
   02D9 23                  838 	inc	hl
   02DA 56                  839 	ld	d, (hl)
   02DB 1A                  840 	ld	a,(de)
   02DC D1                  841 	pop	de
   02DD D5                  842 	push	de
   02DE F5                  843 	push	af
   02DF 1A                  844 	ld	a,(de)
   02E0 4F                  845 	ld	c, a
   02E1 F1                  846 	pop	af
   02E2 C5                  847 	push	bc
   02E3 33                  848 	inc	sp
   02E4 F5                  849 	push	af
   02E5 33                  850 	inc	sp
   02E6 79                  851 	ld	a, c
   02E7 F5                  852 	push	af
   02E8 33                  853 	inc	sp
   02E9 CDr00r00            854 	call	_move_sprite
   02EC E8 03               855 	add	sp, #3
                            856 ;./src/main.c:107: SHOW_SPRITES;
   02EE F0r00               857 	ldh	a, (_LCDC_REG+0)
   02F0 F6 02               858 	or	a, #0x02
   02F2 E0r00               859 	ldh	(_LCDC_REG+0),a
                            860 ;./src/main.c:110: while(1){
   02F4                     861 00106$:
                            862 ;./src/main.c:112: player_movement(&player);
   02F4 F8 0C               863 	ldhl	sp,#(13 - 1)
   02F6 4E                  864 	ld	c, (hl)
   02F7 23                  865 	inc	hl
   02F8 46                  866 	ld	b, (hl)
   02F9 C5                  867 	push	bc
   02FA CDr20r01            868 	call	_player_movement
   02FD E8 02               869 	add	sp, #2
                            870 ;./src/main.c:120: for(UINT8 i = 0; i < 40; ++i){
   02FF AF                  871 	xor	a, a
   0300 F8 0E               872 	ldhl	sp,	#14
   0302 77                  873 	ld	(hl), a
   0303                     874 00109$:
   0303 F8 0E               875 	ldhl	sp,	#14
   0305 7E                  876 	ld	a, (hl)
   0306 D6 28               877 	sub	a, #0x28
   0308 30 1B               878 	jr	NC,00104$
                            879 ;./src/main.c:121: draw(sprites[i]);
   030A 4E                  880 	ld	c, (hl)
   030B 06 00               881 	ld	b, #0x00
   030D CB 21               882 	sla	c
   030F CB 10               883 	rl	b
   0311 21r33r00            884 	ld	hl, #_sprites
   0314 09                  885 	add	hl, bc
   0315 4D                  886 	ld	c,l
   0316 44                  887 	ld	b,h
   0317 4E                  888 	ld	c, (hl)
   0318 23                  889 	inc	hl
   0319 46                  890 	ld	b, (hl)
   031A C5                  891 	push	bc
   031B CDr6Ar00            892 	call	_draw
   031E E8 02               893 	add	sp, #2
                            894 ;./src/main.c:120: for(UINT8 i = 0; i < 40; ++i){
   0320 F8 0E               895 	ldhl	sp,	#14
   0322 34                  896 	inc	(hl)
   0323 18 DE               897 	jr	00109$
   0325                     898 00104$:
                            899 ;./src/main.c:126: wait_vbl_done();
   0325 CDr00r00            900 	call	_wait_vbl_done
   0328 C3rF4r02            901 	jp	00106$
                            902 ;./src/main.c:128: }
   032B E8 0F               903 	add	sp, #15
   032D C9                  904 	ret
                            905 	.area _CODE
                            906 	.area _CABS (ABS)
