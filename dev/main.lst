                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 4.0.0 #11528 (MINGW32)
                              4 ;--------------------------------------------------------
                              5 	.module C__Users_Thief3_AppData_Local_Temp_lcc85761
                              6 	.optsdcc -mgbz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _player_movement
                             13 	.globl _move_player
                             14 	.globl _gravity
                             15 	.globl _scroll_sprite
                             16 	.globl _move_sprite
                             17 	.globl _set_sprite_tile
                             18 	.globl _set_sprite_data
                             19 	.globl _wait_vbl_done
                             20 	.globl _joypad
                             21 	.globl _total_sprites
                             22 	.globl _MainChar
                             23 ;--------------------------------------------------------
                             24 ; special function registers
                             25 ;--------------------------------------------------------
                             26 ;--------------------------------------------------------
                             27 ; ram data
                             28 ;--------------------------------------------------------
                             29 	.area _DATA
   0000                      30 _MainChar::
   0000                      31 	.ds 48
   0030                      32 _joypad_prev_state:
   0030                      33 	.ds 1
   0031                      34 _joypad_curr_state:
   0031                      35 	.ds 1
   0032                      36 _total_sprites::
   0032                      37 	.ds 1
                             38 ;--------------------------------------------------------
                             39 ; absolute external ram data
                             40 ;--------------------------------------------------------
                             41 	.area _DABS (ABS)
                             42 ;--------------------------------------------------------
                             43 ; global & static initialisations
                             44 ;--------------------------------------------------------
                             45 	.area _HOME
                             46 	.area _GSINIT
                             47 	.area _GSFINAL
                             48 	.area _GSINIT
                             49 ;./src/../sprites/char.c:26: unsigned char MainChar[] =
   0000 21r00r00             50 	ld	hl, #_MainChar
   0003 36 00                51 	ld	(hl), #0x00
   0005 21r01r00             52 	ld	hl, #(_MainChar + 0x0001)
   0008 36 00                53 	ld	(hl), #0x00
   000A 21r02r00             54 	ld	hl, #(_MainChar + 0x0002)
   000D 36 7E                55 	ld	(hl), #0x7e
   000F 21r03r00             56 	ld	hl, #(_MainChar + 0x0003)
   0012 36 7E                57 	ld	(hl), #0x7e
   0014 21r04r00             58 	ld	hl, #(_MainChar + 0x0004)
   0017 36 42                59 	ld	(hl), #0x42
   0019 21r05r00             60 	ld	hl, #(_MainChar + 0x0005)
   001C 36 76                61 	ld	(hl), #0x76
   001E 21r06r00             62 	ld	hl, #(_MainChar + 0x0006)
   0021 36 42                63 	ld	(hl), #0x42
   0023 21r07r00             64 	ld	hl, #(_MainChar + 0x0007)
   0026 36 76                65 	ld	(hl), #0x76
   0028 21r08r00             66 	ld	hl, #(_MainChar + 0x0008)
   002B 36 4A                67 	ld	(hl), #0x4a
   002D 21r09r00             68 	ld	hl, #(_MainChar + 0x0009)
   0030 36 4A                69 	ld	(hl), #0x4a
   0032 21r0Ar00             70 	ld	hl, #(_MainChar + 0x000a)
   0035 36 7E                71 	ld	(hl), #0x7e
   0037 21r0Br00             72 	ld	hl, #(_MainChar + 0x000b)
   003A 36 7E                73 	ld	(hl), #0x7e
   003C 21r0Cr00             74 	ld	hl, #(_MainChar + 0x000c)
   003F 36 36                75 	ld	(hl), #0x36
   0041 21r0Dr00             76 	ld	hl, #(_MainChar + 0x000d)
   0044 36 36                77 	ld	(hl), #0x36
   0046 21r0Er00             78 	ld	hl, #(_MainChar + 0x000e)
   0049 36 36                79 	ld	(hl), #0x36
   004B 21r0Fr00             80 	ld	hl, #(_MainChar + 0x000f)
   004E 36 36                81 	ld	(hl), #0x36
   0050 21r10r00             82 	ld	hl, #(_MainChar + 0x0010)
   0053 36 00                83 	ld	(hl), #0x00
   0055 21r11r00             84 	ld	hl, #(_MainChar + 0x0011)
   0058 36 00                85 	ld	(hl), #0x00
   005A 21r12r00             86 	ld	hl, #(_MainChar + 0x0012)
   005D 36 7E                87 	ld	(hl), #0x7e
   005F 21r13r00             88 	ld	hl, #(_MainChar + 0x0013)
   0062 36 7E                89 	ld	(hl), #0x7e
   0064 21r14r00             90 	ld	hl, #(_MainChar + 0x0014)
   0067 36 42                91 	ld	(hl), #0x42
   0069 21r15r00             92 	ld	hl, #(_MainChar + 0x0015)
   006C 36 76                93 	ld	(hl), #0x76
   006E 21r16r00             94 	ld	hl, #(_MainChar + 0x0016)
   0071 36 42                95 	ld	(hl), #0x42
   0073 21r17r00             96 	ld	hl, #(_MainChar + 0x0017)
   0076 36 76                97 	ld	(hl), #0x76
   0078 21r18r00             98 	ld	hl, #(_MainChar + 0x0018)
   007B 36 4A                99 	ld	(hl), #0x4a
   007D 21r19r00            100 	ld	hl, #(_MainChar + 0x0019)
   0080 36 4A               101 	ld	(hl), #0x4a
   0082 21r1Ar00            102 	ld	hl, #(_MainChar + 0x001a)
   0085 36 7E               103 	ld	(hl), #0x7e
   0087 21r1Br00            104 	ld	hl, #(_MainChar + 0x001b)
   008A 36 7E               105 	ld	(hl), #0x7e
   008C 21r1Cr00            106 	ld	hl, #(_MainChar + 0x001c)
   008F 36 36               107 	ld	(hl), #0x36
   0091 21r1Dr00            108 	ld	hl, #(_MainChar + 0x001d)
   0094 36 36               109 	ld	(hl), #0x36
   0096 21r1Er00            110 	ld	hl, #(_MainChar + 0x001e)
   0099 36 30               111 	ld	(hl), #0x30
   009B 21r1Fr00            112 	ld	hl, #(_MainChar + 0x001f)
   009E 36 30               113 	ld	(hl), #0x30
   00A0 21r20r00            114 	ld	hl, #(_MainChar + 0x0020)
   00A3 36 00               115 	ld	(hl), #0x00
   00A5 21r21r00            116 	ld	hl, #(_MainChar + 0x0021)
   00A8 36 00               117 	ld	(hl), #0x00
   00AA 21r22r00            118 	ld	hl, #(_MainChar + 0x0022)
   00AD 36 7E               119 	ld	(hl), #0x7e
   00AF 21r23r00            120 	ld	hl, #(_MainChar + 0x0023)
   00B2 36 7E               121 	ld	(hl), #0x7e
   00B4 21r24r00            122 	ld	hl, #(_MainChar + 0x0024)
   00B7 36 42               123 	ld	(hl), #0x42
   00B9 21r25r00            124 	ld	hl, #(_MainChar + 0x0025)
   00BC 36 76               125 	ld	(hl), #0x76
   00BE 21r26r00            126 	ld	hl, #(_MainChar + 0x0026)
   00C1 36 42               127 	ld	(hl), #0x42
   00C3 21r27r00            128 	ld	hl, #(_MainChar + 0x0027)
   00C6 36 76               129 	ld	(hl), #0x76
   00C8 21r28r00            130 	ld	hl, #(_MainChar + 0x0028)
   00CB 36 4A               131 	ld	(hl), #0x4a
   00CD 21r29r00            132 	ld	hl, #(_MainChar + 0x0029)
   00D0 36 4A               133 	ld	(hl), #0x4a
   00D2 21r2Ar00            134 	ld	hl, #(_MainChar + 0x002a)
   00D5 36 7E               135 	ld	(hl), #0x7e
   00D7 21r2Br00            136 	ld	hl, #(_MainChar + 0x002b)
   00DA 36 7E               137 	ld	(hl), #0x7e
   00DC 21r2Cr00            138 	ld	hl, #(_MainChar + 0x002c)
   00DF 36 36               139 	ld	(hl), #0x36
   00E1 21r2Dr00            140 	ld	hl, #(_MainChar + 0x002d)
   00E4 36 36               141 	ld	(hl), #0x36
   00E6 21r2Er00            142 	ld	hl, #(_MainChar + 0x002e)
   00E9 36 06               143 	ld	(hl), #0x06
   00EB 21r2Fr00            144 	ld	hl, #(_MainChar + 0x002f)
   00EE 36 06               145 	ld	(hl), #0x06
                            146 ;./src/main.c:11: UINT8 total_sprites = 0;
   00F0 21r32r00            147 	ld	hl, #_total_sprites
   00F3 36 00               148 	ld	(hl), #0x00
                            149 ;--------------------------------------------------------
                            150 ; Home
                            151 ;--------------------------------------------------------
                            152 	.area _HOME
                            153 	.area _HOME
                            154 ;--------------------------------------------------------
                            155 ; code
                            156 ;--------------------------------------------------------
                            157 	.area _CODE
                            158 ;./src/../src/input.c:75: static void joypad_wait (UINT8 buttons)
                            159 ;	---------------------------------
                            160 ; Function joypad_wait
                            161 ; ---------------------------------
   0000                     162 _joypad_wait:
                            163 ;./src/../src/input.c:77: while (true) {
   0000                     164 00108$:
                            165 ;./src/../src/input.c:78: UPDATE_JOYPAD_STATE;
   0000 E5                  166 	push	hl
   0001 21r31r00            167 	ld	hl, #_joypad_curr_state
   0004 7E                  168 	ld	a, (hl)
   0005 21r30r00            169 	ld	hl, #_joypad_prev_state
   0008 77                  170 	ld	(hl), a
   0009 E1                  171 	pop	hl
   000A CDr00r00            172 	call	_joypad
   000D 21r31r00            173 	ld	hl, #_joypad_curr_state
   0010 73                  174 	ld	(hl), e
                            175 ;./src/../src/input.c:79: if (JOYPAD_PRESSED(buttons)) {
   0011 21r30r00            176 	ld	hl, #_joypad_prev_state
   0014 7E                  177 	ld	a, (hl)
   0015 F8 02               178 	ldhl	sp,	#2
   0017 A6                  179 	and	a,(hl)
   0018 20 08               180 	jr	NZ,00105$
   001A 21r31r00            181 	ld	hl, #_joypad_curr_state
   001D 7E                  182 	ld	a, (hl)
   001E F8 02               183 	ldhl	sp,	#2
   0020 A6                  184 	and	a,(hl)
   0021 C0                  185 	ret	NZ
                            186 ;./src/../src/input.c:80: break;
   0022                     187 00105$:
                            188 ;./src/../src/input.c:82: wait_vbl_done();
   0022 CDr00r00            189 	call	_wait_vbl_done
   0025 18 D9               190 	jr	00108$
                            191 ;./src/../src/input.c:84: }
   0027 C9                  192 	ret
                            193 ;./src/../src/input.c:87: static BOOLEAN joypad_waittime (UINT8 buttons, UINT8 timeout)
                            194 ;	---------------------------------
                            195 ; Function joypad_waittime
                            196 ; ---------------------------------
   0028                     197 _joypad_waittime:
                            198 ;./src/../src/input.c:89: for (UINT8 i = 0; i < timeout; ++i) {
   0028 0E 00               199 	ld	c, #0x00
   002A                     200 00109$:
   002A 79                  201 	ld	a, c
   002B F8 03               202 	ldhl	sp,	#3
   002D 96                  203 	sub	a, (hl)
   002E 30 31               204 	jr	NC,00107$
                            205 ;./src/../src/input.c:90: UPDATE_JOYPAD_STATE;
   0030 E5                  206 	push	hl
   0031 21r31r00            207 	ld	hl, #_joypad_curr_state
   0034 7E                  208 	ld	a, (hl)
   0035 21r30r00            209 	ld	hl, #_joypad_prev_state
   0038 77                  210 	ld	(hl), a
   0039 E1                  211 	pop	hl
   003A C5                  212 	push	bc
   003B CDr00r00            213 	call	_joypad
   003E C1                  214 	pop	bc
   003F 21r31r00            215 	ld	hl, #_joypad_curr_state
   0042 73                  216 	ld	(hl), e
                            217 ;./src/../src/input.c:91: if (JOYPAD_PRESSED(buttons)) {
   0043 21r30r00            218 	ld	hl, #_joypad_prev_state
   0046 7E                  219 	ld	a, (hl)
   0047 F8 02               220 	ldhl	sp,	#2
   0049 A6                  221 	and	a,(hl)
   004A 20 0C               222 	jr	NZ,00105$
   004C 21r31r00            223 	ld	hl, #_joypad_curr_state
   004F 7E                  224 	ld	a, (hl)
   0050 F8 02               225 	ldhl	sp,	#2
   0052 A6                  226 	and	a,(hl)
   0053 28 03               227 	jr	Z,00105$
                            228 ;./src/../src/input.c:92: return TRUE;
   0055 1E 01               229 	ld	e, #0x01
   0057 C9                  230 	ret
   0058                     231 00105$:
                            232 ;./src/../src/input.c:94: wait_vbl_done();
   0058 C5                  233 	push	bc
   0059 CDr00r00            234 	call	_wait_vbl_done
   005C C1                  235 	pop	bc
                            236 ;./src/../src/input.c:89: for (UINT8 i = 0; i < timeout; ++i) {
   005D 0C                  237 	inc	c
   005E C3r2Ar00            238 	jp	00109$
   0061                     239 00107$:
                            240 ;./src/../src/input.c:96: return false;
   0061 1E 00               241 	ld	e, #0x00
                            242 ;./src/../src/input.c:97: }
   0063 C9                  243 	ret
                            244 ;./src/main.c:7: void gravity(){
                            245 ;	---------------------------------
                            246 ; Function gravity
                            247 ; ---------------------------------
   0064                     248 _gravity::
                            249 ;./src/main.c:9: }
   0064 C9                  250 	ret
                            251 ;./src/main.c:31: void move_player(MPlayer* player, UINT8 move, bool is_x){
                            252 ;	---------------------------------
                            253 ; Function move_player
                            254 ; ---------------------------------
   0065                     255 _move_player::
   0065 E8 FE               256 	add	sp, #-2
                            257 ;./src/main.c:32: player->moved = true;
   0067 F8 04               258 	ldhl	sp,#(5 - 1)
   0069 4E                  259 	ld	c, (hl)
   006A 23                  260 	inc	hl
   006B 46                  261 	ld	b, (hl)
   006C 21 06 00            262 	ld	hl, #0x0006
   006F 09                  263 	add	hl, bc
   0070 33                  264 	inc	sp
   0071 33                  265 	inc	sp
   0072 E5                  266 	push	hl
   0073 E1                  267 	pop	hl
   0074 E5                  268 	push	hl
   0075 36 01               269 	ld	(hl), #0x01
                            270 ;./src/main.c:35: scroll_sprite(player->sprite.sprite_number, move, 0);        
   0077 21 04 00            271 	ld	hl, #0x0004
   007A 09                  272 	add	hl, bc
   007B 33                  273 	inc	sp
   007C 33                  274 	inc	sp
   007D E5                  275 	push	hl
                            276 ;./src/main.c:33: if(is_x == true){
   007E F8 07               277 	ldhl	sp,	#7
   0080 CB 46               278 	bit	0, (hl)
   0082 28 17               279 	jr	Z,00102$
                            280 ;./src/main.c:34: player->sprite.x += move;
   0084 0A                  281 	ld	a, (bc)
   0085 2B                  282 	dec	hl
   0086 86                  283 	add	a, (hl)
   0087 02                  284 	ld	(bc), a
                            285 ;./src/main.c:35: scroll_sprite(player->sprite.sprite_number, move, 0);        
   0088 D1                  286 	pop	de
   0089 D5                  287 	push	de
   008A 1A                  288 	ld	a,(de)
   008B 47                  289 	ld	b, a
   008C AF                  290 	xor	a, a
   008D F5                  291 	push	af
   008E 33                  292 	inc	sp
   008F 7E                  293 	ld	a, (hl)
   0090 F5                  294 	push	af
   0091 33                  295 	inc	sp
   0092 C5                  296 	push	bc
   0093 33                  297 	inc	sp
   0094 CDr00r00            298 	call	_scroll_sprite
   0097 E8 03               299 	add	sp, #3
   0099 18 17               300 	jr	00104$
   009B                     301 00102$:
                            302 ;./src/main.c:38: player->sprite.y += move;
   009B 03                  303 	inc	bc
   009C 0A                  304 	ld	a, (bc)
   009D F8 06               305 	ldhl	sp,	#6
   009F 86                  306 	add	a, (hl)
   00A0 02                  307 	ld	(bc), a
                            308 ;./src/main.c:39: scroll_sprite(player->sprite.sprite_number, 0, move);
   00A1 D1                  309 	pop	de
   00A2 D5                  310 	push	de
   00A3 1A                  311 	ld	a,(de)
   00A4 47                  312 	ld	b, a
   00A5 7E                  313 	ld	a, (hl)
   00A6 F5                  314 	push	af
   00A7 33                  315 	inc	sp
   00A8 AF                  316 	xor	a, a
   00A9 F5                  317 	push	af
   00AA 33                  318 	inc	sp
   00AB C5                  319 	push	bc
   00AC 33                  320 	inc	sp
   00AD CDr00r00            321 	call	_scroll_sprite
   00B0 E8 03               322 	add	sp, #3
   00B2                     323 00104$:
                            324 ;./src/main.c:41: }
   00B2 E8 02               325 	add	sp, #2
   00B4 C9                  326 	ret
                            327 ;./src/main.c:42: void player_movement(MPlayer* player)
                            328 ;	---------------------------------
                            329 ; Function player_movement
                            330 ; ---------------------------------
   00B5                     331 _player_movement::
   00B5 E8 F8               332 	add	sp, #-8
                            333 ;./src/main.c:44: if(!(player->moved)){
   00B7 F8 0A               334 	ldhl	sp,	#10
   00B9 2A                  335 	ld	a, (hl+)
   00BA 5E                  336 	ld	e, (hl)
   00BB F8 00               337 	ldhl	sp,	#0
   00BD 22                  338 	ld	(hl+), a
   00BE 73                  339 	ld	(hl), e
   00BF D1                  340 	pop	de
   00C0 D5                  341 	push	de
   00C1 21 06 00            342 	ld	hl, #0x0006
   00C4 19                  343 	add	hl, de
   00C5 7D                  344 	ld	a, l
   00C6 54                  345 	ld	d, h
   00C7 F8 02               346 	ldhl	sp,	#2
   00C9 22                  347 	ld	(hl+), a
   00CA 72                  348 	ld	(hl), d
   00CB 2B                  349 	dec	hl
   00CC 5E                  350 	ld	e, (hl)
   00CD 23                  351 	inc	hl
   00CE 56                  352 	ld	d, (hl)
   00CF 1A                  353 	ld	a,(de)
   00D0 CB 47               354 	bit	0, a
   00D2 C2r5Dr01            355 	jp	NZ, 00112$
                            356 ;./src/main.c:45: if(JOYPAD_DOWN_PAD_L){
   00D5 CDr00r00            357 	call	_joypad
   00D8 F8 07               358 	ldhl	sp,	#7
   00DA 73                  359 	ld	(hl), e
                            360 ;./src/main.c:46: move_player(player, -player->sprite.speed, true);
   00DB D1                  361 	pop	de
   00DC D5                  362 	push	de
   00DD 21 05 00            363 	ld	hl, #0x0005
   00E0 19                  364 	add	hl, de
   00E1 4D                  365 	ld	c, l
   00E2 44                  366 	ld	b, h
                            367 ;./src/main.c:45: if(JOYPAD_DOWN_PAD_L){
   00E3 F8 07               368 	ldhl	sp,	#7
   00E5 CB 4E               369 	bit	1, (hl)
   00E7 28 1D               370 	jr	Z,00104$
                            371 ;./src/main.c:46: move_player(player, -player->sprite.speed, true);
   00E9 0A                  372 	ld	a, (bc)
   00EA F8 07               373 	ldhl	sp,	#7
   00EC 77                  374 	ld	(hl), a
   00ED AF                  375 	xor	a, a
   00EE 96                  376 	sub	a, (hl)
   00EF 77                  377 	ld	(hl), a
   00F0 C5                  378 	push	bc
   00F1 3E 01               379 	ld	a, #0x01
   00F3 F5                  380 	push	af
   00F4 33                  381 	inc	sp
   00F5 7E                  382 	ld	a, (hl)
   00F6 F5                  383 	push	af
   00F7 33                  384 	inc	sp
   00F8 F8 04               385 	ldhl	sp,	#4
   00FA 2A                  386 	ld	a, (hl+)
   00FB 66                  387 	ld	h, (hl)
   00FC 6F                  388 	ld	l, a
   00FD E5                  389 	push	hl
   00FE CDr65r00            390 	call	_move_player
   0101 E8 04               391 	add	sp, #4
   0103 C1                  392 	pop	bc
   0104 18 1E               393 	jr	00105$
   0106                     394 00104$:
                            395 ;./src/main.c:48: else if(JOYPAD_DOWN_PAD_R){
   0106 C5                  396 	push	bc
   0107 CDr00r00            397 	call	_joypad
   010A 7B                  398 	ld	a, e
   010B C1                  399 	pop	bc
   010C 0F                  400 	rrca
   010D 30 15               401 	jr	NC,00105$
                            402 ;./src/main.c:49: move_player(player, player->sprite.speed, true);
   010F 0A                  403 	ld	a, (bc)
   0110 57                  404 	ld	d, a
   0111 C5                  405 	push	bc
   0112 3E 01               406 	ld	a, #0x01
   0114 F5                  407 	push	af
   0115 33                  408 	inc	sp
   0116 D5                  409 	push	de
   0117 33                  410 	inc	sp
   0118 F8 04               411 	ldhl	sp,	#4
   011A 2A                  412 	ld	a, (hl+)
   011B 66                  413 	ld	h, (hl)
   011C 6F                  414 	ld	l, a
   011D E5                  415 	push	hl
   011E CDr65r00            416 	call	_move_player
   0121 E8 04               417 	add	sp, #4
   0123 C1                  418 	pop	bc
   0124                     419 00105$:
                            420 ;./src/main.c:51: if(JOYPAD_DOWN_PAD_U){
   0124 C5                  421 	push	bc
   0125 CDr00r00            422 	call	_joypad
   0128 C1                  423 	pop	bc
   0129 CB 53               424 	bit	2, e
   012B 28 16               425 	jr	Z,00109$
                            426 ;./src/main.c:52: move_player(player, -player->sprite.speed, false);
   012D 0A                  427 	ld	a, (bc)
   012E 4F                  428 	ld	c, a
   012F AF                  429 	xor	a, a
   0130 91                  430 	sub	a, c
   0131 47                  431 	ld	b, a
   0132 AF                  432 	xor	a, a
   0133 F5                  433 	push	af
   0134 33                  434 	inc	sp
   0135 C5                  435 	push	bc
   0136 33                  436 	inc	sp
   0137 C1                  437 	pop	bc
   0138 E1                  438 	pop	hl
   0139 E5                  439 	push	hl
   013A C5                  440 	push	bc
   013B E5                  441 	push	hl
   013C CDr65r00            442 	call	_move_player
   013F E8 04               443 	add	sp, #4
   0141 18 1A               444 	jr	00112$
   0143                     445 00109$:
                            446 ;./src/main.c:54: else if(JOYPAD_DOWN_PAD_D){
   0143 C5                  447 	push	bc
   0144 CDr00r00            448 	call	_joypad
   0147 C1                  449 	pop	bc
   0148 CB 5B               450 	bit	3, e
   014A 28 11               451 	jr	Z,00112$
                            452 ;./src/main.c:55: move_player(player, player->sprite.speed, false);
   014C 0A                  453 	ld	a, (bc)
   014D 47                  454 	ld	b, a
   014E AF                  455 	xor	a, a
   014F F5                  456 	push	af
   0150 33                  457 	inc	sp
   0151 C5                  458 	push	bc
   0152 33                  459 	inc	sp
   0153 C1                  460 	pop	bc
   0154 E1                  461 	pop	hl
   0155 E5                  462 	push	hl
   0156 C5                  463 	push	bc
   0157 E5                  464 	push	hl
   0158 CDr65r00            465 	call	_move_player
   015B E8 04               466 	add	sp, #4
   015D                     467 00112$:
                            468 ;./src/main.c:58: if(player->movement_time > player->movement_delay){
   015D D1                  469 	pop	de
   015E D5                  470 	push	de
   015F 21 08 00            471 	ld	hl, #0x0008
   0162 19                  472 	add	hl, de
   0163 7D                  473 	ld	a, l
   0164 54                  474 	ld	d, h
   0165 F8 04               475 	ldhl	sp,	#4
   0167 22                  476 	ld	(hl+), a
   0168 72                  477 	ld	(hl), d
   0169 2B                  478 	dec	hl
   016A 5E                  479 	ld	e, (hl)
   016B 23                  480 	inc	hl
   016C 56                  481 	ld	d, (hl)
   016D 1A                  482 	ld	a,(de)
   016E 23                  483 	inc	hl
   016F 22                  484 	ld	(hl+), a
   0170 13                  485 	inc	de
   0171 1A                  486 	ld	a, (de)
   0172 77                  487 	ld	(hl), a
   0173 D1                  488 	pop	de
   0174 D5                  489 	push	de
   0175 21 07 00            490 	ld	hl, #0x0007
   0178 19                  491 	add	hl, de
   0179 4D                  492 	ld	c,l
   017A 7C                  493 	ld	a,h
   017B 4E                  494 	ld	c, (hl)
   017C 06 00               495 	ld	b, #0x00
   017E F8 06               496 	ldhl	sp,	#6
   0180 79                  497 	ld	a, c
   0181 96                  498 	sub	a, (hl)
   0182 23                  499 	inc	hl
   0183 78                  500 	ld	a, b
   0184 9E                  501 	sbc	a, (hl)
   0185 30 0E               502 	jr	NC,00114$
                            503 ;./src/main.c:59: player->movement_time = 0;
   0187 F8 04               504 	ldhl	sp,	#4
   0189 2A                  505 	ld	a, (hl+)
   018A 66                  506 	ld	h, (hl)
   018B 6F                  507 	ld	l, a
   018C AF                  508 	xor	a, a
   018D 22                  509 	ld	(hl+), a
   018E 77                  510 	ld	(hl), a
                            511 ;./src/main.c:60: player->moved = false;
   018F C1                  512 	pop	bc
   0190 E1                  513 	pop	hl
   0191 E5                  514 	push	hl
   0192 C5                  515 	push	bc
   0193 36 00               516 	ld	(hl), #0x00
   0195                     517 00114$:
                            518 ;./src/main.c:63: ++(player->movement_time);
   0195 F8 04               519 	ldhl	sp,#(5 - 1)
   0197 5E                  520 	ld	e, (hl)
   0198 23                  521 	inc	hl
   0199 56                  522 	ld	d, (hl)
   019A 1A                  523 	ld	a,(de)
   019B 4F                  524 	ld	c, a
   019C 13                  525 	inc	de
   019D 1A                  526 	ld	a,(de)
   019E 47                  527 	ld	b, a
   019F 03                  528 	inc	bc
   01A0 2B                  529 	dec	hl
   01A1 2A                  530 	ld	a, (hl+)
   01A2 66                  531 	ld	h, (hl)
   01A3 6F                  532 	ld	l, a
   01A4 71                  533 	ld	(hl), c
   01A5 23                  534 	inc	hl
   01A6 70                  535 	ld	(hl), b
                            536 ;./src/main.c:65: }
   01A7 E8 08               537 	add	sp, #8
   01A9 C9                  538 	ret
                            539 ;./src/main.c:67: void main()
                            540 ;	---------------------------------
                            541 ; Function main
                            542 ; ---------------------------------
   01AA                     543 _main::
   01AA E8 F2               544 	add	sp, #-14
                            545 ;./src/main.c:69: UPDATE_JOYPAD_STATE;
   01AC E5                  546 	push	hl
   01AD 21r31r00            547 	ld	hl, #_joypad_curr_state
   01B0 7E                  548 	ld	a, (hl)
   01B1 21r30r00            549 	ld	hl, #_joypad_prev_state
   01B4 77                  550 	ld	(hl), a
   01B5 E1                  551 	pop	hl
   01B6 CDr00r00            552 	call	_joypad
   01B9 21r31r00            553 	ld	hl, #_joypad_curr_state
   01BC 73                  554 	ld	(hl), e
                            555 ;./src/main.c:71: MPlayer player = {{88, 78, 0, 3, 0, 10}, false, 60, 0};
   01BD F8 00               556 	ldhl	sp,	#0
   01BF 7D                  557 	ld	a, l
   01C0 54                  558 	ld	d, h
   01C1 F8 0C               559 	ldhl	sp,	#12
   01C3 22                  560 	ld	(hl+), a
   01C4 72                  561 	ld	(hl), d
   01C5 2B                  562 	dec	hl
   01C6 2A                  563 	ld	a, (hl+)
   01C7 66                  564 	ld	h, (hl)
   01C8 6F                  565 	ld	l, a
   01C9 36 58               566 	ld	(hl), #0x58
   01CB F8 0C               567 	ldhl	sp,#(13 - 1)
   01CD 4E                  568 	ld	c, (hl)
   01CE 23                  569 	inc	hl
   01CF 46                  570 	ld	b, (hl)
   01D0 03                  571 	inc	bc
   01D1 3E 4E               572 	ld	a, #0x4e
   01D3 02                  573 	ld	(bc), a
   01D4 2B                  574 	dec	hl
   01D5 4E                  575 	ld	c, (hl)
   01D6 23                  576 	inc	hl
   01D7 46                  577 	ld	b, (hl)
   01D8 03                  578 	inc	bc
   01D9 03                  579 	inc	bc
   01DA AF                  580 	xor	a, a
   01DB 02                  581 	ld	(bc), a
   01DC 2B                  582 	dec	hl
   01DD 4E                  583 	ld	c, (hl)
   01DE 23                  584 	inc	hl
   01DF 46                  585 	ld	b, (hl)
   01E0 03                  586 	inc	bc
   01E1 03                  587 	inc	bc
   01E2 03                  588 	inc	bc
   01E3 3E 03               589 	ld	a, #0x03
   01E5 02                  590 	ld	(bc), a
   01E6 2B                  591 	dec	hl
   01E7 5E                  592 	ld	e, (hl)
   01E8 23                  593 	inc	hl
   01E9 56                  594 	ld	d, (hl)
   01EA 21 04 00            595 	ld	hl, #0x0004
   01ED 19                  596 	add	hl, de
   01EE 4D                  597 	ld	c, l
   01EF 44                  598 	ld	b, h
   01F0 AF                  599 	xor	a, a
   01F1 02                  600 	ld	(bc), a
   01F2 F8 0C               601 	ldhl	sp,#(13 - 1)
   01F4 5E                  602 	ld	e, (hl)
   01F5 23                  603 	inc	hl
   01F6 56                  604 	ld	d, (hl)
   01F7 21 05 00            605 	ld	hl, #0x0005
   01FA 19                  606 	add	hl, de
   01FB 4D                  607 	ld	c,l
   01FC 7C                  608 	ld	a,h
   01FD 36 0A               609 	ld	(hl), #0x0a
   01FF F8 00               610 	ldhl	sp,	#0
   0201 7D                  611 	ld	a, l
   0202 54                  612 	ld	d, h
   0203 F8 0A               613 	ldhl	sp,	#10
   0205 22                  614 	ld	(hl+), a
   0206 72                  615 	ld	(hl), d
   0207 2B                  616 	dec	hl
   0208 5E                  617 	ld	e, (hl)
   0209 23                  618 	inc	hl
   020A 56                  619 	ld	d, (hl)
   020B 21 06 00            620 	ld	hl, #0x0006
   020E 19                  621 	add	hl, de
   020F 4D                  622 	ld	c, l
   0210 44                  623 	ld	b, h
   0211 AF                  624 	xor	a, a
   0212 02                  625 	ld	(bc), a
   0213 F8 0A               626 	ldhl	sp,#(11 - 1)
   0215 5E                  627 	ld	e, (hl)
   0216 23                  628 	inc	hl
   0217 56                  629 	ld	d, (hl)
   0218 21 07 00            630 	ld	hl, #0x0007
   021B 19                  631 	add	hl, de
   021C 4D                  632 	ld	c,l
   021D 7C                  633 	ld	a,h
   021E 36 3C               634 	ld	(hl), #0x3c
   0220 F8 0A               635 	ldhl	sp,#(11 - 1)
   0222 5E                  636 	ld	e, (hl)
   0223 23                  637 	inc	hl
   0224 56                  638 	ld	d, (hl)
   0225 21 08 00            639 	ld	hl, #0x0008
   0228 19                  640 	add	hl, de
   0229 4D                  641 	ld	c, l
   022A 44                  642 	ld	b, h
   022B AF                  643 	xor	a, a
   022C 02                  644 	ld	(bc), a
   022D 03                  645 	inc	bc
   022E 02                  646 	ld	(bc), a
                            647 ;./src/main.c:74: set_sprite_data(player.sprite.sprite_number, player.sprite.max_animations, MainChar);
   022F F8 0A               648 	ldhl	sp,#(11 - 1)
   0231 4E                  649 	ld	c, (hl)
   0232 23                  650 	inc	hl
   0233 46                  651 	ld	b, (hl)
   0234 03                  652 	inc	bc
   0235 03                  653 	inc	bc
   0236 03                  654 	inc	bc
   0237 0A                  655 	ld	a, (bc)
   0238 47                  656 	ld	b, a
   0239 2B                  657 	dec	hl
   023A 5E                  658 	ld	e, (hl)
   023B 23                  659 	inc	hl
   023C 56                  660 	ld	d, (hl)
   023D 21 04 00            661 	ld	hl, #0x0004
   0240 19                  662 	add	hl, de
   0241 7D                  663 	ld	a, l
   0242 54                  664 	ld	d, h
   0243 F8 0C               665 	ldhl	sp,	#12
   0245 22                  666 	ld	(hl+), a
   0246 72                  667 	ld	(hl), d
   0247 2B                  668 	dec	hl
   0248 5E                  669 	ld	e, (hl)
   0249 23                  670 	inc	hl
   024A 56                  671 	ld	d, (hl)
   024B 1A                  672 	ld	a,(de)
   024C 4F                  673 	ld	c, a
   024D 21r00r00            674 	ld	hl, #_MainChar
   0250 E5                  675 	push	hl
   0251 C5                  676 	push	bc
   0252 33                  677 	inc	sp
   0253 79                  678 	ld	a, c
   0254 F5                  679 	push	af
   0255 33                  680 	inc	sp
   0256 CDr00r00            681 	call	_set_sprite_data
   0259 E8 04               682 	add	sp, #4
                            683 ;./src/main.c:75: set_sprite_tile(player.sprite.sprite_number, player.sprite.animation_index);
   025B F8 0A               684 	ldhl	sp,#(11 - 1)
   025D 4E                  685 	ld	c, (hl)
   025E 23                  686 	inc	hl
   025F 46                  687 	ld	b, (hl)
   0260 03                  688 	inc	bc
   0261 03                  689 	inc	bc
   0262 0A                  690 	ld	a, (bc)
   0263 47                  691 	ld	b, a
   0264 23                  692 	inc	hl
   0265 5E                  693 	ld	e, (hl)
   0266 23                  694 	inc	hl
   0267 56                  695 	ld	d, (hl)
   0268 1A                  696 	ld	a,(de)
   0269 C5                  697 	push	bc
   026A 33                  698 	inc	sp
   026B F5                  699 	push	af
   026C 33                  700 	inc	sp
   026D CDr00r00            701 	call	_set_sprite_tile
   0270 E8 02               702 	add	sp, #2
                            703 ;./src/main.c:76: move_sprite(player.sprite.sprite_number, player.sprite.x, player.sprite.y);
   0272 F8 0A               704 	ldhl	sp,#(11 - 1)
   0274 4E                  705 	ld	c, (hl)
   0275 23                  706 	inc	hl
   0276 46                  707 	ld	b, (hl)
   0277 03                  708 	inc	bc
   0278 0A                  709 	ld	a, (bc)
   0279 47                  710 	ld	b, a
   027A 2B                  711 	dec	hl
   027B 5E                  712 	ld	e, (hl)
   027C 23                  713 	inc	hl
   027D 56                  714 	ld	d, (hl)
   027E 1A                  715 	ld	a,(de)
   027F 23                  716 	inc	hl
   0280 5E                  717 	ld	e, (hl)
   0281 23                  718 	inc	hl
   0282 56                  719 	ld	d, (hl)
   0283 F5                  720 	push	af
   0284 1A                  721 	ld	a,(de)
   0285 4F                  722 	ld	c, a
   0286 F1                  723 	pop	af
   0287 C5                  724 	push	bc
   0288 33                  725 	inc	sp
   0289 F5                  726 	push	af
   028A 33                  727 	inc	sp
   028B 79                  728 	ld	a, c
   028C F5                  729 	push	af
   028D 33                  730 	inc	sp
   028E CDr00r00            731 	call	_move_sprite
   0291 E8 03               732 	add	sp, #3
                            733 ;./src/main.c:77: SHOW_SPRITES;
   0293 F0r00               734 	ldh	a, (_LCDC_REG+0)
   0295 F6 02               735 	or	a, #0x02
   0297 E0r00               736 	ldh	(_LCDC_REG+0),a
                            737 ;./src/main.c:80: while(1){
   0299                     738 00105$:
                            739 ;./src/main.c:81: player_movement(&player);
   0299 F8 0A               740 	ldhl	sp,#(11 - 1)
   029B 4E                  741 	ld	c, (hl)
   029C 23                  742 	inc	hl
   029D 46                  743 	ld	b, (hl)
   029E C5                  744 	push	bc
   029F CDrB5r00            745 	call	_player_movement
   02A2 E8 02               746 	add	sp, #2
   02A4 18 F3               747 	jr	00105$
                            748 ;./src/main.c:83: }
   02A6 E8 0E               749 	add	sp, #14
   02A8 C9                  750 	ret
                            751 	.area _CODE
                            752 	.area _CABS (ABS)
